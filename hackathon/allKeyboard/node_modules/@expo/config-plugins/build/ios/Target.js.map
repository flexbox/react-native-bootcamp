{"version":3,"sources":["../../src/ios/Target.ts"],"names":["TargetType","getXCBuildConfigurationFromPbxproj","project","targetName","buildConfiguration","nativeTarget","findNativeTargetByName","findFirstNativeTarget","xcBuildConfiguration","configurationListId","buildConfigurationList","findApplicationTargetWithDependenciesAsync","projectRoot","scheme","applicationTargetName","applicationTarget","dependencies","getTargetDependencies","name","type","APPLICATION","parentTarget","length","undefined","map","value","target","targetId","getPBXGroupByKeyAndType","findNativeTargetById","isTargetOfType","EXTENSION","OTHER","targetType","productType","getNativeTargets","section","pbxNativeTargetSection","Object","entries","filter","isNotComment","findSignableTargets","targets","applicationTargets","WATCH","STICKER_PACK_EXTENSION","Error","nativeTargets","nativeTargetEntry","find","i","key"],"mappings":"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","sourcesContent":["import { PBXNativeTarget, PBXTargetDependency, XCBuildConfiguration, XcodeProject } from 'xcode';\n\nimport { getApplicationTargetNameForSchemeAsync } from './BuildScheme';\nimport {\n  getBuildConfigurationForListIdAndName,\n  getPbxproj,\n  isNotComment,\n  NativeTargetSectionEntry,\n} from './utils/Xcodeproj';\nimport { trimQuotes } from './utils/string';\n\nexport enum TargetType {\n  APPLICATION = 'com.apple.product-type.application',\n  EXTENSION = 'com.apple.product-type.app-extension',\n  WATCH = 'com.apple.product-type.application.watchapp',\n  STICKER_PACK_EXTENSION = 'com.apple.product-type.app-extension.messages-sticker-pack',\n  OTHER = 'other',\n}\n\nexport interface Target {\n  name: string;\n  type: TargetType;\n  dependencies?: Target[];\n}\n\nexport function getXCBuildConfigurationFromPbxproj(\n  project: XcodeProject,\n  {\n    targetName,\n    buildConfiguration = 'Release',\n  }: { targetName?: string; buildConfiguration?: string } = {}\n): XCBuildConfiguration | null {\n  const [, nativeTarget] = targetName\n    ? findNativeTargetByName(project, targetName)\n    : findFirstNativeTarget(project);\n  const [, xcBuildConfiguration] = getBuildConfigurationForListIdAndName(project, {\n    configurationListId: nativeTarget.buildConfigurationList,\n    buildConfiguration,\n  });\n  return xcBuildConfiguration ?? null;\n}\n\nexport async function findApplicationTargetWithDependenciesAsync(\n  projectRoot: string,\n  scheme: string\n): Promise<Target> {\n  const applicationTargetName = await getApplicationTargetNameForSchemeAsync(projectRoot, scheme);\n  const project = getPbxproj(projectRoot);\n  const [, applicationTarget] = findNativeTargetByName(project, applicationTargetName);\n  const dependencies = getTargetDependencies(project, applicationTarget);\n  return {\n    name: trimQuotes(applicationTarget.name),\n    type: TargetType.APPLICATION,\n    dependencies,\n  };\n}\n\nfunction getTargetDependencies(\n  project: XcodeProject,\n  parentTarget: PBXNativeTarget\n): Target[] | undefined {\n  if (!parentTarget.dependencies || parentTarget.dependencies.length === 0) {\n    return undefined;\n  }\n  return parentTarget.dependencies.map(({ value }) => {\n    const { target: targetId } = project.getPBXGroupByKeyAndType(\n      value,\n      'PBXTargetDependency'\n    ) as PBXTargetDependency;\n\n    const [, target] = findNativeTargetById(project, targetId);\n\n    const type = isTargetOfType(target, TargetType.EXTENSION)\n      ? TargetType.EXTENSION\n      : TargetType.OTHER;\n    return {\n      name: trimQuotes(target.name),\n      type,\n      dependencies: getTargetDependencies(project, target),\n    };\n  });\n}\n\nexport function isTargetOfType(target: PBXNativeTarget, targetType: TargetType): boolean {\n  return trimQuotes(target.productType) === targetType;\n}\n\nexport function getNativeTargets(project: XcodeProject): NativeTargetSectionEntry[] {\n  const section = project.pbxNativeTargetSection();\n  return Object.entries(section).filter(isNotComment);\n}\n\nexport function findSignableTargets(project: XcodeProject): NativeTargetSectionEntry[] {\n  const targets = getNativeTargets(project);\n  const applicationTargets = targets.filter(\n    ([, target]) =>\n      isTargetOfType(target, TargetType.APPLICATION) ||\n      isTargetOfType(target, TargetType.EXTENSION) ||\n      isTargetOfType(target, TargetType.WATCH) ||\n      isTargetOfType(target, TargetType.STICKER_PACK_EXTENSION)\n  );\n  if (applicationTargets.length === 0) {\n    throw new Error(`Could not find any signable targets in project.pbxproj`);\n  }\n  return applicationTargets;\n}\n\nexport function findFirstNativeTarget(project: XcodeProject): NativeTargetSectionEntry {\n  const targets = getNativeTargets(project);\n  const applicationTargets = targets.filter(([, target]) =>\n    isTargetOfType(target, TargetType.APPLICATION)\n  );\n  if (applicationTargets.length === 0) {\n    throw new Error(`Could not find any application target in project.pbxproj`);\n  }\n  return applicationTargets[0];\n}\n\nexport function findNativeTargetByName(\n  project: XcodeProject,\n  targetName: string\n): NativeTargetSectionEntry {\n  const nativeTargets = getNativeTargets(project);\n  const nativeTargetEntry = nativeTargets.find(([, i]) => trimQuotes(i.name) === targetName);\n  if (!nativeTargetEntry) {\n    throw new Error(`Could not find target '${targetName}' in project.pbxproj`);\n  }\n  return nativeTargetEntry;\n}\n\nfunction findNativeTargetById(project: XcodeProject, targetId: string): NativeTargetSectionEntry {\n  const nativeTargets = getNativeTargets(project);\n  const nativeTargetEntry = nativeTargets.find(([key]) => key === targetId);\n  if (!nativeTargetEntry) {\n    throw new Error(`Could not find target with id '${targetId}' in project.pbxproj`);\n  }\n  return nativeTargetEntry;\n}\n"],"file":"Target.js"}