{"version":3,"file":"importMetroFromProject.js","sourceRoot":"","sources":["../src/importMetroFromProject.ts"],"names":[],"mappings":";;;;;;AAEA,gEAAuC;AAEvC,MAAM,gBAAiB,SAAQ,KAAK;IAClC,YAAY,WAAmB,EAAE,QAAgB;QAC/C,KAAK,CACH,oBAAoB,QAAQ,wBAAwB,WAAW,IAAI;YACjE,sDAAsD;YACtD,yEAAyE;YACzE,kCAAkC,CACrC,CAAC;IACJ,CAAC;CACF;AAED,SAAS,kBAAkB,CAAC,WAAmB,EAAE,QAAgB;IAC/D,MAAM,YAAY,GAAG,sBAAW,CAAC,MAAM,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAC/D,IAAI,CAAC,YAAY,EAAE;QACjB,MAAM,IAAI,gBAAgB,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;KACnD;IACD,OAAO,YAAY,CAAC;AACtB,CAAC;AAED,SAAS,iBAAiB,CAAU,WAAmB,EAAE,QAAgB;IACvE,OAAO,OAAO,CAAC,kBAAkB,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC;AAC5D,CAAC;AAED,SAAgB,4BAA4B,CAAC,WAAmB;IAC9D,OAAO,iBAAiB,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;AACxD,CAAC;AAFD,oEAEC;AAED,IAAI,cAAiD,CAAC;AAEtD,SAAgB,+BAA+B,CAAC,WAAmB;IACjE,IAAI,cAAc;QAAE,OAAO,cAAc,CAAC;IAC1C,cAAc,GAAG,iBAAiB,CAAwB,WAAW,EAAE,kBAAkB,CAAC,CAAC;IAC3F,OAAO,cAAc,CAAC;AACxB,CAAC;AAJD,0EAIC","sourcesContent":["import type MetroConfig from 'metro-config';\nimport type MetroSourceMap from 'metro-source-map';\nimport resolveFrom from 'resolve-from';\n\nclass MetroImportError extends Error {\n  constructor(projectRoot: string, moduleId: string) {\n    super(\n      `Missing package \"${moduleId}\" in the project at: ${projectRoot}\\n` +\n        'This usually means `react-native` is not installed. ' +\n        'Please verify that dependencies in package.json include \"react-native\" ' +\n        'and run `yarn` or `npm install`.'\n    );\n  }\n}\n\nfunction resolveFromProject(projectRoot: string, moduleId: string) {\n  const resolvedPath = resolveFrom.silent(projectRoot, moduleId);\n  if (!resolvedPath) {\n    throw new MetroImportError(projectRoot, moduleId);\n  }\n  return resolvedPath;\n}\n\nfunction importFromProject<T = any>(projectRoot: string, moduleId: string): T {\n  return require(resolveFromProject(projectRoot, moduleId));\n}\n\nexport function importMetroConfigFromProject(projectRoot: string): typeof MetroConfig {\n  return importFromProject(projectRoot, 'metro-config');\n}\n\nlet metroSourceMap: typeof MetroSourceMap | undefined;\n\nexport function importMetroSourceMapFromProject(projectRoot: string): typeof MetroSourceMap {\n  if (metroSourceMap) return metroSourceMap;\n  metroSourceMap = importFromProject<typeof MetroSourceMap>(projectRoot, 'metro-source-map');\n  return metroSourceMap;\n}\n"]}