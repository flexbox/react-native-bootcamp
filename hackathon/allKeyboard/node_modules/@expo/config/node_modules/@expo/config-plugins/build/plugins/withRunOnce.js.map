{"version":3,"sources":["../../src/plugins/withRunOnce.ts"],"names":["withRunOnce","config","plugin","name","version","createRunOncePlugin","props"],"mappings":";;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,WAIX,GAAG,CAACC,MAAD,EAAS;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA;AAAhB,CAAT,KAAuC;AAC1C;AACA,MAAI,+BAAeH,MAAf,EAAuBE,IAAvB,CAAJ,EAAkC;AAChC,WAAOF,MAAP;AACD,GAJyC,CAM1C;;;AACAA,EAAAA,MAAM,GAAG,+BAAeA,MAAf,EAAuB;AAAEE,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAvB,CAAT;AAEA,SAAOF,MAAM,CAACD,MAAD,CAAb;AACD,CAdM;AAgBP;AACA;AACA;AACA;AACA;;;;;AACO,SAASI,mBAAT,CACLH,MADK,EAELC,IAFK,EAGLC,OAHK,EAIY;AACjB,SAAO,CAACH,MAAD,EAASK,KAAT,KAAmB;AACxB,WAAON,WAAW,CAACC,MAAD,EAAS;AAAEC,MAAAA,MAAM,EAAED,MAAM,IAAIC,MAAM,CAACD,MAAD,EAASK,KAAT,CAA1B;AAA2CH,MAAAA,IAA3C;AAAiDC,MAAAA;AAAjD,KAAT,CAAlB;AACD,GAFD;AAGD","sourcesContent":["import { ConfigPlugin } from '../Plugin.types';\nimport { addHistoryItem, getHistoryItem, PluginHistoryItem } from '../utils/history';\n\n/**\n * Prevents the same plugin from being run twice.\n * Used for migrating from unversioned expo config plugins to versioned plugins.\n *\n * @param config\n * @param name\n */\nexport const withRunOnce: ConfigPlugin<{\n  plugin: ConfigPlugin<void>;\n  name: PluginHistoryItem['name'];\n  version?: PluginHistoryItem['version'];\n}> = (config, { plugin, name, version }) => {\n  // Detect if a plugin has already been run on this config.\n  if (getHistoryItem(config, name)) {\n    return config;\n  }\n\n  // Push the history item so duplicates cannot be run.\n  config = addHistoryItem(config, { name, version });\n\n  return plugin(config);\n};\n\n/**\n * Helper method for creating mods from existing config functions.\n *\n * @param action\n */\nexport function createRunOncePlugin<T>(\n  plugin: ConfigPlugin<T>,\n  name: string,\n  version?: string\n): ConfigPlugin<T> {\n  return (config, props) => {\n    return withRunOnce(config, { plugin: config => plugin(config, props), name, version });\n  };\n}\n"],"file":"withRunOnce.js"}