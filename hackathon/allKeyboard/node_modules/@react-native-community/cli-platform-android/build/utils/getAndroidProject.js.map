{"version":3,"sources":["../../src/utils/getAndroidProject.ts"],"names":["getAndroidProject","config","androidProject","project","android","CLIError","getPackageName","appFolder","appName","manifestPath","androidManifest","fs","readFileSync","packageNameMatchArray","match","length","chalk","underline","dim","packageName","validatePackageName","logger","warn","bgRed","test"],"mappings":";;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEO,SAASA,iBAAT,CAA2BC,MAA3B,EAA2C;AAChD,QAAMC,cAAc,GAAGD,MAAM,CAACE,OAAP,CAAeC,OAAtC;;AAEA,MAAI,CAACF,cAAL,EAAqB;AACnB,UAAM,KAAIG,oBAAJ,EAAc;;;;KAAd,CAAN;AAKD;;AACD,SAAOH,cAAP;AACD;AAED;;;;;;AAIO,SAASI,cAAT,CACLJ,cADK,EAELK,SAFK,EAGL;AACA,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAA0BP,cAAhC;;AACA,QAAMQ,eAAe,GAAGC,cAAGC,YAAH,CAAgBH,YAAhB,EAA8B,MAA9B,CAAxB;;AAEA,MAAII,qBAAqB,GAAGH,eAAe,CAACI,KAAhB,CAAsB,iBAAtB,CAA5B;;AACA,MAAI,CAACD,qBAAD,IAA0BA,qBAAqB,CAACE,MAAtB,KAAiC,CAA/D,EAAkE;AAChE,UAAM,KAAIV,oBAAJ,EACH,mEAAkEW,iBAAMC,SAAN,CAAgBC,GAAhB,CAChE,GAAEX,SAAS,IAAIC,OAAQ,+BADyC,CAEjE,EAHE,CAAN;AAKD;;AAED,MAAIW,WAAW,GAAGN,qBAAqB,CAAC,CAAD,CAAvC;;AAEA,MAAI,CAACO,mBAAmB,CAACD,WAAD,CAAxB,EAAuC;AACrCE,uBAAOC,IAAP,CACG,uCAAsCN,iBAAMO,KAAN,CACrCJ,WADqC,CAErC,kFAAiFH,iBAAMC,SAAN,CAAgBC,GAAhB,CACjF,2DADiF,CAEjF,EALJ;AAOD;;AACD,SAAOC,WAAP;AACD,C,CAED;;;AACA,SAASC,mBAAT,CAA6BD,WAA7B,EAAkD;AAChD,SAAO,wCAAwCK,IAAxC,CAA6CL,WAA7C,CAAP;AACD","sourcesContent":["import {Config, AndroidProjectConfig} from '@react-native-community/cli-types';\nimport {logger, CLIError} from '@react-native-community/cli-tools';\nimport fs from 'fs';\nimport chalk from 'chalk';\n\nexport function getAndroidProject(config: Config) {\n  const androidProject = config.project.android;\n\n  if (!androidProject) {\n    throw new CLIError(`\n      Android project not found. Are you sure this is a React Native project?\n      If your Android files are located in a non-standard location (e.g. not inside 'android' folder), consider setting\n      \\`project.android.sourceDir\\` option to point to a new location.\n    `);\n  }\n  return androidProject;\n}\n\n/**\n * Get the package name of the running React Native app\n * @param config\n */\nexport function getPackageName(\n  androidProject: AndroidProjectConfig,\n  appFolder?: string,\n) {\n  const {appName, manifestPath} = androidProject;\n  const androidManifest = fs.readFileSync(manifestPath, 'utf8');\n\n  let packageNameMatchArray = androidManifest.match(/package=\"(.+?)\"/);\n  if (!packageNameMatchArray || packageNameMatchArray.length === 0) {\n    throw new CLIError(\n      `Failed to build the app: No package name found. Found errors in ${chalk.underline.dim(\n        `${appFolder || appName}/src/main/AndroidManifest.xml`,\n      )}`,\n    );\n  }\n\n  let packageName = packageNameMatchArray[1];\n\n  if (!validatePackageName(packageName)) {\n    logger.warn(\n      `Invalid application's package name \"${chalk.bgRed(\n        packageName,\n      )}\" in 'AndroidManifest.xml'. Read guidelines for setting the package name here: ${chalk.underline.dim(\n        'https://developer.android.com/studio/build/application-id',\n      )}`,\n    );\n  }\n  return packageName;\n}\n\n// Validates that the package name is correct\nfunction validatePackageName(packageName: string) {\n  return /^[a-z][a-z0-9_]*(\\.[a-z][a-z0-9_]*)+$/.test(packageName);\n}\n"]}