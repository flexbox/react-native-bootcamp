{"version":3,"sources":["../src/securityHeadersMiddleware.ts"],"names":["securityHeadersMiddleware","req","res","next","headers","origin","match","Error","setHeader"],"mappings":";;;;;;;AAAA;;;;;;AAQe,SAASA,yBAAT,CACbC,GADa,EAEbC,GAFa,EAGbC,IAHa,EAIb;AACA;AACA,MACE,OAAOF,GAAG,CAACG,OAAJ,CAAYC,MAAnB,KAA8B,QAA9B,IACA,CAACJ,GAAG,CAACG,OAAJ,CAAYC,MAAZ,CAAmBC,KAAnB,CAAyB,wBAAzB,CAFH,EAGE;AACAH,IAAAA,IAAI,CACF,IAAII,KAAJ,CACE,+BACEN,GAAG,CAACG,OAAJ,CAAYC,MADd,GAEE,uGAHJ,CADE,CAAJ;AAOA;AACD,GAdD,CAgBA;;;AACAH,EAAAA,GAAG,CAACM,SAAJ,CAAc,wBAAd,EAAwC,SAAxC;AAEAL,EAAAA,IAAI;AACL","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport http from 'http';\n\nexport default function securityHeadersMiddleware(\n  req: http.IncomingMessage,\n  res: http.ServerResponse,\n  next: (err?: any) => void,\n) {\n  // Block any cross origin request.\n  if (\n    typeof req.headers.origin === 'string' &&\n    !req.headers.origin.match(/^https?:\\/\\/localhost:/)\n  ) {\n    next(\n      new Error(\n        'Unauthorized request from ' +\n          req.headers.origin +\n          '. This may happen because of a conflicting browser extension. Please try to disable it and try again.',\n      ),\n    );\n    return;\n  }\n\n  // Block MIME-type sniffing.\n  res.setHeader('X-Content-Type-Options', 'nosniff');\n\n  next();\n}\n"]}