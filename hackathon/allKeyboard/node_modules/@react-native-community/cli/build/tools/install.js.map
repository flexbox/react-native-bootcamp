{"version":3,"sources":["../../src/tools/install.ts"],"names":["install","pkg","label","url","loader","process","platform","Error","_error","fail","healthcheck"],"mappings":";;;;;;;AACA;;AACA;;AASA,eAAeA,OAAf,CAAuB;AAACC,EAAAA,GAAD;AAAMC,EAAAA,KAAN;AAAaC,EAAAA,GAAb;AAAkBC,EAAAA;AAAlB,CAAvB,EAA+D;AAC7D,MAAI;AACF,YAAQC,OAAO,CAACC,QAAhB;AACE,WAAK,QAAL;AACE,cAAM,8BAAY;AAACL,UAAAA,GAAD;AAAMC,UAAAA,KAAN;AAAaE,UAAAA;AAAb,SAAZ,CAAN;AACA;;AACF;AACE,cAAM,IAAIG,KAAJ,CAAU,qBAAV,CAAN;AALJ;AAOD,GARD,CAQE,OAAOC,MAAP,EAAe;AACfJ,IAAAA,MAAM,CAACK,IAAP;AAEA,uCAAsB;AACpBC,MAAAA,WAAW,EAAER,KADO;AAEpBC,MAAAA;AAFoB,KAAtB;AAID;AACF","sourcesContent":["import ora from 'ora';\nimport {brewInstall} from './brewInstall';\nimport {logManualInstallation} from '../commands/doctor/healthchecks/common';\n\ntype InstallArgs = {\n  pkg: string;\n  label: string;\n  url: string;\n  loader: ora.Ora;\n};\n\nasync function install({pkg, label, url, loader}: InstallArgs) {\n  try {\n    switch (process.platform) {\n      case 'darwin':\n        await brewInstall({pkg, label, loader});\n        break;\n      default:\n        throw new Error('Not implemented yet');\n    }\n  } catch (_error) {\n    loader.fail();\n\n    logManualInstallation({\n      healthcheck: label,\n      url,\n    });\n  }\n}\n\nexport {install};\n"]}