{"version":3,"sources":["../../../src/tools/config/findDependencies.ts"],"names":["findDependencies","root","pjson","JSON","parse","fs","readFileSync","path","join","e","deps","Object","keys","dependencies","devDependencies"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEA;;;AAGe,SAASA,gBAAT,CAA0BC,IAA1B,EAAuD;AACpE,MAAIC,KAAJ;;AAEA,MAAI;AACFA,IAAAA,KAAK,GAAGC,IAAI,CAACC,KAAL,CACNC,cAAGC,YAAH,CAAgBC,gBAAKC,IAAL,CAAUP,IAAV,EAAgB,cAAhB,CAAhB,EAAiD,OAAjD,CADM,CAAR;AAGD,GAJD,CAIE,OAAOQ,CAAP,EAAU;AACV,WAAO,EAAP;AACD;;AAED,QAAMC,IAAI,GAAG,CACX,GAAGC,MAAM,CAACC,IAAP,CAAYV,KAAK,CAACW,YAAN,IAAsB,EAAlC,CADQ,EAEX,GAAGF,MAAM,CAACC,IAAP,CAAYV,KAAK,CAACY,eAAN,IAAyB,EAArC,CAFQ,CAAb;AAKA,SAAOJ,IAAP;AACD","sourcesContent":["import path from 'path';\nimport fs from 'fs';\n\n/**\n * Returns an array of dependencies from project's package.json\n */\nexport default function findDependencies(root: string): Array<string> {\n  let pjson;\n\n  try {\n    pjson = JSON.parse(\n      fs.readFileSync(path.join(root, 'package.json'), 'UTF-8'),\n    );\n  } catch (e) {\n    return [];\n  }\n\n  const deps = [\n    ...Object.keys(pjson.dependencies || {}),\n    ...Object.keys(pjson.devDependencies || {}),\n  ];\n\n  return deps;\n}\n"]}