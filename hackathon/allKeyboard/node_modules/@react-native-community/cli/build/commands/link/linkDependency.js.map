{"version":3,"sources":["../../../src/commands/link/linkDependency.ts"],"names":["linkDependency","platforms","project","dependency","params","Object","keys","forEach","platform","projectConfig","dependencyConfig","name","linkConfig","isInstalled","register","logger","info","chalk","bold"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AASA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;;AACA;;;;AAEe,eAAeA,cAAf,CACbC,SADa,EAEbC,OAFa,EAGbC,UAHa,EAIb;AACA,QAAMC,MAAM,GAAG,MAAM,yBAAWD,UAAU,CAACC,MAAtB,CAArB;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYL,SAAS,IAAI,EAAzB,EAA6BM,OAA7B,CAAsCC,QAAD,IAAc;AACjD,UAAMC,aAAsD,GAC1DP,OAAO,CAACM,QAAD,CADT;AAEA,UAAME,gBAA+D,GACnEP,UAAU,CAACF,SAAX,CAAqBO,QAArB,CADF;;AAGA,QAAI,CAACC,aAAD,IAAkB,CAACC,gBAAvB,EAAyC;AACvC;AACD;;AACD,UAAM;AAACC,MAAAA;AAAD,QAASR,UAAf;AACA,UAAMS,UAAU,GACdX,SAAS,CAACO,QAAD,CAAT,IACAP,SAAS,CAACO,QAAD,CAAT,CAAoBI,UADpB,IAEAX,SAAS,CAACO,QAAD,CAAT,CAAoBI,UAApB,EAHF;;AAKA,QAAI,CAACA,UAAD,IAAe,CAACA,UAAU,CAACC,WAA3B,IAA0C,CAACD,UAAU,CAACE,QAA1D,EAAoE;AAClE;AACD;;AAED,UAAMD,WAAW,GAAGD,UAAU,CAACC,WAAX,CAClBJ,aADkB,EAElBE,IAFkB,EAGlBD,gBAHkB,CAApB;;AAMA,QAAIG,WAAJ,EAAiB;AACfE,yBAAOC,IAAP,CACG,GAAE,8BAAgBR,QAAhB,CAA0B,YAAWS,iBAAMC,IAAN,CACtCP,IADsC,CAEtC,qBAHJ;;AAKA;AACD;;AAEDI,uBAAOC,IAAP,CACG,YAAWC,iBAAMC,IAAN,CAAWP,IAAX,CAAiB,KAAI,8BAAgBH,QAAhB,CAA0B,aAD7D;;AAIAI,IAAAA,UAAU,CAACE,QAAX,CAAoBH,IAApB,EAA0BD,gBAA1B,EAA4CN,MAA5C,EAAoDK,aAApD;;AAEAM,uBAAOC,IAAP,CACG,GAAE,8BAAgBR,QAAhB,CAA0B,YAAWS,iBAAMC,IAAN,CACtCf,UAAU,CAACQ,IAD2B,CAEtC,gCAHJ;AAKD,GA7CD;AA8CD","sourcesContent":["import chalk from 'chalk';\nimport {\n  Config,\n  Dependency,\n  AndroidDependencyConfig,\n  AndroidProjectConfig,\n  IOSDependencyConfig,\n  IOSProjectConfig,\n} from '@react-native-community/cli-types';\nimport {logger} from '@react-native-community/cli-tools';\nimport pollParams from './pollParams';\nimport getPlatformName from './getPlatformName';\n\nexport default async function linkDependency(\n  platforms: Config['platforms'],\n  project: Config['project'],\n  dependency: Dependency,\n) {\n  const params = await pollParams(dependency.params);\n\n  Object.keys(platforms || {}).forEach((platform) => {\n    const projectConfig: AndroidProjectConfig | IOSProjectConfig =\n      project[platform];\n    const dependencyConfig: AndroidDependencyConfig | IOSDependencyConfig =\n      dependency.platforms[platform];\n\n    if (!projectConfig || !dependencyConfig) {\n      return;\n    }\n    const {name} = dependency;\n    const linkConfig =\n      platforms[platform] &&\n      platforms[platform].linkConfig &&\n      platforms[platform].linkConfig();\n\n    if (!linkConfig || !linkConfig.isInstalled || !linkConfig.register) {\n      return;\n    }\n\n    const isInstalled = linkConfig.isInstalled(\n      projectConfig,\n      name,\n      dependencyConfig,\n    );\n\n    if (isInstalled) {\n      logger.info(\n        `${getPlatformName(platform)} module \"${chalk.bold(\n          name,\n        )}\" is already linked`,\n      );\n      return;\n    }\n\n    logger.info(\n      `Linking \"${chalk.bold(name)}\" ${getPlatformName(platform)} dependency`,\n    );\n\n    linkConfig.register(name, dependencyConfig, params, projectConfig);\n\n    logger.info(\n      `${getPlatformName(platform)} module \"${chalk.bold(\n        dependency.name,\n      )}\" has been successfully linked`,\n    );\n  });\n}\n"]}