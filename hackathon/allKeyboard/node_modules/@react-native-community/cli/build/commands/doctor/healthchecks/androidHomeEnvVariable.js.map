{"version":3,"sources":["../../../../src/commands/doctor/healthchecks/androidHomeEnvVariable.ts"],"names":["URLS","darwin","win32","linux","label","platform","process","message","chalk","dim","getDiagnostics","needsToBeFixed","env","ANDROID_HOME","runAutomaticFix","loader","logManualInstallation","succeed","fail"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAGA;AACA,MAAMA,IAAI,GAAG;AACXC,EAAAA,MAAM,EAAE,8CADG;AAEXC,EAAAA,KAAK,EAAE,8CAFI;AAGXC,EAAAA,KAAK,EAAE;AAHI,CAAb;AAMA,MAAMC,KAAK,GAAG,cAAd,C,CAEA;AACA;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAACD,QAAzB;AAEA,MAAME,OAAO,GAAI,kCAAiCH,KAAM,OAAMI,iBAAMC,GAAN,CAC5DT,IAAI,CAACK,QAAD,CADwD,CAE5D,EAFF;eAIe;AACbD,EAAAA,KADa;AAEbM,EAAAA,cAAc,EAAE,aAAa;AAC3BC,IAAAA,cAAc,EAAE,CAACL,OAAO,CAACM,GAAR,CAAYC;AADF,GAAb,CAFH;AAKbC,EAAAA,eAAe,EAAE,OAAO;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAP,KAA2C;AAC1D;AACA,QAAIV,OAAO,CAACM,GAAR,CAAYC,YAAhB,EAA8B;AAC5BE,MAAAA,MAAM,CAACE,OAAP;AAEA;AACD;;AAEDF,IAAAA,MAAM,CAACG,IAAP;AAEAF,IAAAA,qBAAqB,CAAC;AACpBT,MAAAA;AADoB,KAAD,CAArB;AAGD;AAlBY,C","sourcesContent":["import chalk from 'chalk';\nimport {HealthCheckInterface} from '@react-native-community/cli-types';\n\n// List of answers on how to set `ANDROID_HOME` for each platform\nconst URLS = {\n  darwin: 'https://stackoverflow.com/a/28296325/4252781',\n  win32: 'https://stackoverflow.com/a/54888107/4252781',\n  linux: 'https://stackoverflow.com/a/39228100/4252781',\n};\n\nconst label = 'ANDROID_HOME';\n\n// Force the options for the platform to avoid providing a link\n// for `ANDROID_HOME` for every platform NodeJS supports\nconst platform = process.platform as 'darwin' | 'win32' | 'linux';\n\nconst message = `Read more about how to set the ${label} at ${chalk.dim(\n  URLS[platform],\n)}`;\n\nexport default {\n  label,\n  getDiagnostics: async () => ({\n    needsToBeFixed: !process.env.ANDROID_HOME,\n  }),\n  runAutomaticFix: async ({loader, logManualInstallation}) => {\n    // Variable could have been added if installing Android Studio so double checking\n    if (process.env.ANDROID_HOME) {\n      loader.succeed();\n\n      return;\n    }\n\n    loader.fail();\n\n    logManualInstallation({\n      message,\n    });\n  },\n} as HealthCheckInterface;\n"]}