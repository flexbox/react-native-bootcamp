{"version":3,"sources":["../../../../src/commands/doctor/healthchecks/androidStudio.ts"],"names":["label","description","getDiagnostics","IDEs","needsToBeFixed","missing","version","process","platform","androidStudioPath","replace","stdout","trim","win32AutomaticFix","loader","androidStudioUrl","installPath","downloadUrl","component","prefix","arch","binFolder","path","name","ico","succeed","runAutomaticFix","logManualInstallation","fail","healthcheck","url"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAIA;;AACA;;AACA;;AACA;;eAEe;AACbA,EAAAA,KAAK,EAAE,gBADM;AAEbC,EAAAA,WAAW,EAAE,0DAFA;AAGbC,EAAAA,cAAc,EAAE,OAAO;AAACC,IAAAA;AAAD,GAAP,KAAkB;AAChC,UAAMC,cAAc,GAAGD,IAAI,CAAC,gBAAD,CAAJ,KAA2B,WAAlD;AAEA,UAAME,OAAO,GAAG;AACdD,MAAAA,cADc;AAEdE,MAAAA,OAAO,EAAEH,IAAI,CAAC,gBAAD;AAFC,KAAhB,CAHgC,CAQhC;;AACA,QAAIC,cAAc,IAAIG,OAAO,CAACC,QAAR,KAAqB,OAA3C,EAAoD;AAClD,YAAMC,iBAAiB,GAAG,kBACxB,4CADwB,EAExB,gBAFwB,EAGxB,KAHwB,EAIxB,YAJwB,EAKxBC,OALwB,CAKhB,KALgB,EAKT,MALS,CAA1B;AAMA,YAAM;AAACC,QAAAA;AAAD,UAAW,MAAM,uCACpB,6BAA4BF,iBAAkB,eAD1B,CAAvB;AAGA,YAAMH,OAAO,GAAGK,MAAM,CAACD,OAAP,CAAe,gBAAf,EAAiC,EAAjC,EAAqCE,IAArC,EAAhB;;AAEA,UAAIN,OAAO,KAAK,EAAhB,EAAoB;AAClB,eAAOD,OAAP;AACD;;AAED,aAAO;AACLD,QAAAA,cAAc,EAAE,KADX;AAELE,QAAAA;AAFK,OAAP;AAID;;AAED,WAAOD,OAAP;AACD,GAnCY;AAoCbQ,EAAAA,iBAAiB,EAAE,OAAO;AAACC,IAAAA;AAAD,GAAP,KAAoB;AACrC;AACA,UAAMC,gBAAgB,GACpB,+GADF;AAGA,UAAMC,WAAW,GAAG,4CAApB;AACA,UAAM,wCAAiB;AACrBF,MAAAA,MADqB;AAErBG,MAAAA,WAAW,EAAEF,gBAFQ;AAGrBG,MAAAA,SAAS,EAAE,gBAHU;AAIrBF,MAAAA,WAAW,EAAEA;AAJQ,KAAjB,CAAN;AAOA,UAAMG,MAAM,GAAGZ,OAAO,CAACa,IAAR,KAAiB,KAAjB,GAAyB,IAAzB,GAAgC,EAA/C;AACA,UAAMC,SAAS,GAAG,kBAAKL,WAAL,EAAkB,gBAAlB,EAAoC,KAApC,CAAlB;AAEA,UAAM,oCAAe;AACnBM,MAAAA,IAAI,EAAE,kBAAKD,SAAL,EAAiB,SAAQF,MAAO,MAAhC,CADa;AAEnBI,MAAAA,IAAI,EAAE,gBAFa;AAGnBC,MAAAA,GAAG,EAAE,kBAAKH,SAAL,EAAgB,YAAhB;AAHc,KAAf,CAAN;AAMAP,IAAAA,MAAM,CAACW,OAAP,CACG,6CAA4CT,WAAY,IAD3D;AAGD,GA7DY;AA8DbU,EAAAA,eAAe,EAAE,OAAO;AAACZ,IAAAA,MAAD;AAASa,IAAAA;AAAT,GAAP,KAA2C;AAC1Db,IAAAA,MAAM,CAACc,IAAP;AAEA,WAAOD,qBAAqB,CAAC;AAC3BE,MAAAA,WAAW,EAAE,gBADc;AAE3BC,MAAAA,GAAG,EAAE;AAFsB,KAAD,CAA5B;AAID;AArEY,C","sourcesContent":["import {join} from 'path';\n\nimport {HealthCheckInterface} from '@react-native-community/cli-types';\n\nimport {downloadAndUnzip} from '../../../tools/downloadAndUnzip';\nimport {executeCommand} from '../../../tools/windows/executeWinCommand';\nimport {getUserAndroidPath} from '../../../tools/windows/androidWinHelpers';\nimport {createShortcut} from '../../../tools/windows/create-shortcut';\n\nexport default {\n  label: 'Android Studio',\n  description: 'Required for building and installing your app on Android',\n  getDiagnostics: async ({IDEs}) => {\n    const needsToBeFixed = IDEs['Android Studio'] === 'Not Found';\n\n    const missing = {\n      needsToBeFixed,\n      version: IDEs['Android Studio'],\n    };\n\n    // On Windows `doctor` installs Android Studio locally in a well-known place\n    if (needsToBeFixed && process.platform === 'win32') {\n      const androidStudioPath = join(\n        getUserAndroidPath(),\n        'android-studio',\n        'bin',\n        'studio.exe',\n      ).replace(/\\\\/g, '\\\\\\\\');\n      const {stdout} = await executeCommand(\n        `wmic datafile where name=\"${androidStudioPath}\" get Version`,\n      );\n      const version = stdout.replace(/(\\r\\n|\\n|\\r)/gm, '').trim();\n\n      if (version === '') {\n        return missing;\n      }\n\n      return {\n        needsToBeFixed: false,\n        version,\n      };\n    }\n\n    return missing;\n  },\n  win32AutomaticFix: async ({loader}) => {\n    // Need a GitHub action to update automatically. See #1180\n    const androidStudioUrl =\n      'https://redirector.gvt1.com/edgedl/android/studio/ide-zips/3.6.3.0/android-studio-ide-192.6392135-windows.zip';\n\n    const installPath = getUserAndroidPath();\n    await downloadAndUnzip({\n      loader,\n      downloadUrl: androidStudioUrl,\n      component: 'Android Studio',\n      installPath: installPath,\n    });\n\n    const prefix = process.arch === 'x64' ? '64' : '';\n    const binFolder = join(installPath, 'android-studio', 'bin');\n\n    await createShortcut({\n      path: join(binFolder, `studio${prefix}.exe`),\n      name: 'Android Studio',\n      ico: join(binFolder, 'studio.ico'),\n    });\n\n    loader.succeed(\n      `Android Studio installed successfully in \"${installPath}\".`,\n    );\n  },\n  runAutomaticFix: async ({loader, logManualInstallation}) => {\n    loader.fail();\n\n    return logManualInstallation({\n      healthcheck: 'Android Studio',\n      url: 'https://reactnative.dev/docs/environment-setup',\n    });\n  },\n} as HealthCheckInterface;\n"]}