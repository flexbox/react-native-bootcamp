{"version":3,"sources":["../../../src/commands/bundle/assetPathUtils.ts"],"names":["getAndroidAssetSuffix","scale","drawableFileTypes","Set","getAndroidResourceFolderName","asset","has","type","suffix","Error","JSON","stringify","androidFolder","getAndroidResourceIdentifier","folderPath","getBasePath","name","toLowerCase","replace","basePath","httpServerLocation","substr"],"mappings":";;;;;;;AAAA;;;;;;;;AAcA;;;;AAIA,SAASA,qBAAT,CAA+BC,KAA/B,EAAsD;AACpD,UAAQA,KAAR;AACE,SAAK,IAAL;AACE,aAAO,MAAP;;AACF,SAAK,CAAL;AACE,aAAO,MAAP;;AACF,SAAK,GAAL;AACE,aAAO,MAAP;;AACF,SAAK,CAAL;AACE,aAAO,OAAP;;AACF,SAAK,CAAL;AACE,aAAO,QAAP;;AACF,SAAK,CAAL;AACE,aAAO,SAAP;;AACF;AACE,aAAO,EAAP;AAdJ;AAgBD,C,CAED;;;AACA,MAAMC,iBAAiB,GAAG,IAAIC,GAAJ,CAAgB,CACxC,KADwC,EAExC,MAFwC,EAGxC,KAHwC,EAIxC,KAJwC,EAKxC,MALwC,EAMxC,KANwC,CAAhB,CAA1B;;AASA,SAASC,4BAAT,CACEC,KADF,EAEEJ,KAFF,EAGU;AACR,MAAI,CAACC,iBAAiB,CAACI,GAAlB,CAAsBD,KAAK,CAACE,IAA5B,CAAL,EAAwC;AACtC,WAAO,KAAP;AACD;;AACD,QAAMC,MAAM,GAAGR,qBAAqB,CAACC,KAAD,CAApC;;AACA,MAAI,CAACO,MAAL,EAAa;AACX,UAAM,IAAIC,KAAJ,CACH,8DAA6DC,IAAI,CAACC,SAAL,CAC5DN,KAD4D,CAE5D,EAHE,CAAN;AAKD;;AACD,QAAMO,aAAa,GAAI,YAAWJ,MAAO,EAAzC;AACA,SAAOI,aAAP;AACD;;AAED,SAASC,4BAAT,CAAsCR,KAAtC,EAAoE;AAClE,QAAMS,UAAU,GAAGC,WAAW,CAACV,KAAD,CAA9B;AACA,SAAQ,GAAES,UAAW,IAAGT,KAAK,CAACW,IAAK,EAA5B,CACJC,WADI,GAEJC,OAFI,CAEI,KAFJ,EAEW,GAFX,EAEgB;AAFhB,GAGJA,OAHI,CAGI,eAHJ,EAGqB,EAHrB,EAGyB;AAHzB,GAIJA,OAJI,CAII,UAJJ,EAIgB,EAJhB,CAAP,CAFkE,CAMtC;AAC7B;;AAED,SAASH,WAAT,CAAqBV,KAArB,EAAmD;AACjD,MAAIc,QAAQ,GAAGd,KAAK,CAACe,kBAArB;;AACA,MAAID,QAAQ,CAAC,CAAD,CAAR,KAAgB,GAApB,EAAyB;AACvBA,IAAAA,QAAQ,GAAGA,QAAQ,CAACE,MAAT,CAAgB,CAAhB,CAAX;AACD;;AACD,SAAOF,QAAP;AACD;;eAEc;AACbnB,EAAAA,qBADa;AAEbI,EAAAA,4BAFa;AAGbS,EAAAA,4BAHa;AAIbE,EAAAA;AAJa,C","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nexport interface PackagerAsset {\n  httpServerLocation: string;\n  name: string;\n  type: string;\n}\n\n/**\n * FIXME: using number to represent discrete scale numbers is fragile in essence because of\n * floating point numbers imprecision.\n */\nfunction getAndroidAssetSuffix(scale: number): string {\n  switch (scale) {\n    case 0.75:\n      return 'ldpi';\n    case 1:\n      return 'mdpi';\n    case 1.5:\n      return 'hdpi';\n    case 2:\n      return 'xhdpi';\n    case 3:\n      return 'xxhdpi';\n    case 4:\n      return 'xxxhdpi';\n    default:\n      return '';\n  }\n}\n\n// See https://developer.android.com/guide/topics/resources/drawable-resource.html\nconst drawableFileTypes = new Set<string>([\n  'gif',\n  'jpeg',\n  'jpg',\n  'png',\n  'webp',\n  'xml',\n]);\n\nfunction getAndroidResourceFolderName(\n  asset: PackagerAsset,\n  scale: number,\n): string {\n  if (!drawableFileTypes.has(asset.type)) {\n    return 'raw';\n  }\n  const suffix = getAndroidAssetSuffix(scale);\n  if (!suffix) {\n    throw new Error(\n      `Don't know which android drawable suffix to use for asset: ${JSON.stringify(\n        asset,\n      )}`,\n    );\n  }\n  const androidFolder = `drawable-${suffix}`;\n  return androidFolder;\n}\n\nfunction getAndroidResourceIdentifier(asset: PackagerAsset): string {\n  const folderPath = getBasePath(asset);\n  return `${folderPath}/${asset.name}`\n    .toLowerCase()\n    .replace(/\\//g, '_') // Encode folder structure in file name\n    .replace(/([^a-z0-9_])/g, '') // Remove illegal chars\n    .replace(/^assets_/, ''); // Remove \"assets_\" prefix\n}\n\nfunction getBasePath(asset: PackagerAsset): string {\n  let basePath = asset.httpServerLocation;\n  if (basePath[0] === '/') {\n    basePath = basePath.substr(1);\n  }\n  return basePath;\n}\n\nexport default {\n  getAndroidAssetSuffix,\n  getAndroidResourceFolderName,\n  getAndroidResourceIdentifier,\n  getBasePath,\n};\n"]}