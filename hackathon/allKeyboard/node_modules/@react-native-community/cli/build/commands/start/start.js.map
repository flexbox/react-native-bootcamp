{"version":3,"sources":["../../../src/commands/start/start.ts"],"names":["name","func","runServer","description","options","parse","Number","default","val","path","resolve","split","map","folder","workers"],"mappings":";;;;;;;AAQA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;;;;AATA;;;;;;;eAWe;AACbA,EAAAA,IAAI,EAAE,OADO;AAEbC,EAAAA,IAAI,EAAEC,kBAFO;AAGbC,EAAAA,WAAW,EAAE,sBAHA;AAIbC,EAAAA,OAAO,EAAE,CACP;AACEJ,IAAAA,IAAI,EAAE,iBADR;AAEEK,IAAAA,KAAK,EAAEC;AAFT,GADO,EAKP;AACEN,IAAAA,IAAI,EAAE,iBADR;AAEEO,IAAAA,OAAO,EAAE;AAFX,GALO,EASP;AACEP,IAAAA,IAAI,EAAE,sBADR;AAEEG,IAAAA,WAAW,EAAE,+BAFf;AAGEE,IAAAA,KAAK,EAAGG,GAAD,IAAiBC,gBAAKC,OAAL,CAAaF,GAAb;AAH1B,GATO,EAcP;AACER,IAAAA,IAAI,EAAE,uBADR;AAEEG,IAAAA,WAAW,EACT,8DAHJ;AAIEE,IAAAA,KAAK,EAAGG,GAAD,IACLA,GAAG,CAACG,KAAJ,CAAU,GAAV,EAAeC,GAAf,CAA4BC,MAAD,IAAoBJ,gBAAKC,OAAL,CAAaG,MAAb,CAA/C;AALJ,GAdO,EAqBP;AACEb,IAAAA,IAAI,EAAE,uBADR;AAEEG,IAAAA,WAAW,EACT,kFAHJ;AAIEE,IAAAA,KAAK,EAAGG,GAAD,IAAiBA,GAAG,CAACG,KAAJ,CAAU,GAAV;AAJ1B,GArBO,EA2BP;AACEX,IAAAA,IAAI,EAAE,qBADR;AAEEG,IAAAA,WAAW,EACT,qEAHJ;AAIEE,IAAAA,KAAK,EAAGG,GAAD,IAAiBA,GAAG,CAACG,KAAJ,CAAU,GAAV;AAJ1B,GA3BO,EAiCP;AACEX,IAAAA,IAAI,EAAE,wBADR;AAEEG,IAAAA,WAAW,EACT,6DACA,wEADA,GAEA,kCALJ;AAMEE,IAAAA,KAAK,EAAGS,OAAD,IAAqBR,MAAM,CAACQ,OAAD;AANpC,GAjCO,EAyCP;AACEd,IAAAA,IAAI,EAAE,wBADR;AAEEG,IAAAA,WAAW,EAAE;AAFf,GAzCO,EA6CP;AACEH,IAAAA,IAAI,EAAE,6BADR;AAEEG,IAAAA,WAAW,EAAE;AAFf,GA7CO,EAiDP;AACEH,IAAAA,IAAI,EAAE,8DADR;AAEEG,IAAAA,WAAW,EACT;AAHJ,GAjDO,EAsDP;AACEH,IAAAA,IAAI,EAAE,WADR;AAEEG,IAAAA,WAAW,EAAE;AAFf,GAtDO,EA0DP;AACEH,IAAAA,IAAI,EAAE,SADR;AAEEG,IAAAA,WAAW,EAAE;AAFf,GA1DO,EA8DP;AACEH,IAAAA,IAAI,EAAE,cADR;AAEEG,IAAAA,WAAW,EAAE;AAFf,GA9DO,EAkEP;AACEH,IAAAA,IAAI,EAAE,eADR;AAEEG,IAAAA,WAAW,EAAE;AAFf,GAlEO,EAsEP;AACEH,IAAAA,IAAI,EAAE,mBADR;AAEEG,IAAAA,WAAW,EAAE,oCAFf;AAGEE,IAAAA,KAAK,EAAGG,GAAD,IAAiBC,gBAAKC,OAAL,CAAaF,GAAb;AAH1B,GAtEO,EA2EP;AACER,IAAAA,IAAI,EAAE,kBADR;AAEEG,IAAAA,WAAW,EAAE;AAFf,GA3EO;AAJI,C","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport path from 'path';\nimport runServer from './runServer';\n\nexport default {\n  name: 'start',\n  func: runServer,\n  description: 'starts the webserver',\n  options: [\n    {\n      name: '--port <number>',\n      parse: Number,\n    },\n    {\n      name: '--host <string>',\n      default: '',\n    },\n    {\n      name: '--projectRoot <path>',\n      description: 'Path to a custom project root',\n      parse: (val: string) => path.resolve(val),\n    },\n    {\n      name: '--watchFolders <list>',\n      description:\n        'Specify any additional folders to be added to the watch list',\n      parse: (val: string) =>\n        val.split(',').map<string>((folder: string) => path.resolve(folder)),\n    },\n    {\n      name: '--assetPlugins <list>',\n      description:\n        'Specify any additional asset plugins to be used by the packager by full filepath',\n      parse: (val: string) => val.split(','),\n    },\n    {\n      name: '--sourceExts <list>',\n      description:\n        'Specify any additional source extensions to be used by the packager',\n      parse: (val: string) => val.split(','),\n    },\n    {\n      name: '--max-workers <number>',\n      description:\n        'Specifies the maximum number of workers the worker-pool ' +\n        'will spawn for transforming files. This defaults to the number of the ' +\n        'cores available on your machine.',\n      parse: (workers: string) => Number(workers),\n    },\n    {\n      name: '--transformer <string>',\n      description: 'Specify a custom transformer to be used',\n    },\n    {\n      name: '--reset-cache, --resetCache',\n      description: 'Removes cached files',\n    },\n    {\n      name: '--custom-log-reporter-path, --customLogReporterPath <string>',\n      description:\n        'Path to a JavaScript file that exports a log reporter as a replacement for TerminalReporter',\n    },\n    {\n      name: '--verbose',\n      description: 'Enables logging',\n    },\n    {\n      name: '--https',\n      description: 'Enables https connections to the server',\n    },\n    {\n      name: '--key <path>',\n      description: 'Path to custom SSL key',\n    },\n    {\n      name: '--cert <path>',\n      description: 'Path to custom SSL cert',\n    },\n    {\n      name: '--config <string>',\n      description: 'Path to the CLI configuration file',\n      parse: (val: string) => path.resolve(val),\n    },\n    {\n      name: '--no-interactive',\n      description: 'Disables interactive mode',\n    },\n  ],\n};\n"]}