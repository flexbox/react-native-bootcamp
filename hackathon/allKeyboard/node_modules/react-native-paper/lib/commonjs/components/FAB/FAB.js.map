{"version":3,"sources":["FAB.tsx"],"names":["getContrastingColor","FAB","small","icon","label","accessibilityLabel","accessibilityState","animated","color","customColor","disabled","onPress","onLongPress","theme","style","visible","uppercase","loading","testID","rest","current","visibility","React","useRef","Animated","Value","scale","animation","useEffect","timing","toValue","duration","useNativeDriver","start","IconComponent","CrossFadeIcon","Icon","disabledColor","dark","white","black","alpha","rgb","string","backgroundColor","colors","accent","StyleSheet","flatten","foregroundColor","rippleColor","opacity","transform","styles","container","touchable","content","extended","standard","uppercaseLabel","fonts","medium","create","borderRadius","elevation","height","width","paddingHorizontal","flexDirection","alignItems","justifyContent","marginHorizontal","textTransform","FABWithTheme"],"mappings":"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","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport {\n  Animated,\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  AccessibilityState,\n} from 'react-native';\nimport ActivityIndicator from '../ActivityIndicator';\nimport Surface from '../Surface';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Icon, { IconSource } from '../Icon';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport getContrastingColor from '../../utils/getContrastingColor';\nimport type { $RemoveChildren } from '../../types';\n\ngetContrastingColor;\n\ntype Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Optional label for extended `FAB`.\n   */\n  label?: string;\n  /**\n   * Make the label text uppercased.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityState?: AccessibilityState;\n  /**\n   * Whether an icon change is animated.\n   */\n  animated?: boolean;\n  /**\n   *  Whether FAB is mini-sized, used to create visual continuity with other elements. This has no effect if `label` is specified.\n   */\n  small?: boolean;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  testID?: string;\n};\n\n/**\n * A floating action button represents the primary action in an application.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-1.png\" />\n *   <img src=\"screenshots/fab-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { FAB } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <FAB\n *     style={styles.fab}\n *     small\n *     icon=\"plus\"\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * const styles = StyleSheet.create({\n *   fab: {\n *     position: 'absolute',\n *     margin: 16,\n *     right: 0,\n *     bottom: 0,\n *   },\n * })\n *\n * export default MyComponent;\n * ```\n */\nconst FAB = ({\n  small,\n  icon,\n  label,\n  accessibilityLabel = label,\n  accessibilityState,\n  animated = true,\n  color: customColor,\n  disabled,\n  onPress,\n  onLongPress,\n  theme,\n  style,\n  visible = true,\n  uppercase = true,\n  loading,\n  testID,\n  ...rest\n}: Props) => {\n  const { current: visibility } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n\n  const IconComponent = animated ? CrossFadeIcon : Icon;\n\n  const disabledColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  const {\n    backgroundColor = disabled ? disabledColor : theme.colors.accent,\n  } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n  let foregroundColor;\n\n  if (typeof customColor !== 'undefined') {\n    foregroundColor = customColor;\n  } else if (disabled) {\n    foregroundColor = color(theme.dark ? white : black)\n      .alpha(0.32)\n      .rgb()\n      .string();\n  } else {\n    foregroundColor = getContrastingColor(\n      backgroundColor,\n      white,\n      'rgba(0, 0, 0, .54)'\n    );\n  }\n\n  const rippleColor = color(foregroundColor).alpha(0.32).rgb().string();\n\n  return (\n    <Surface\n      {...rest}\n      style={\n        [\n          {\n            backgroundColor,\n            opacity: visibility,\n            transform: [\n              {\n                scale: visibility,\n              },\n            ],\n          },\n          styles.container,\n          disabled && styles.disabled,\n          style,\n        ] as StyleProp<ViewStyle>\n      }\n      pointerEvents={visible ? 'auto' : 'none'}\n    >\n      <TouchableRipple\n        borderless\n        onPress={onPress}\n        onLongPress={onLongPress}\n        rippleColor={rippleColor}\n        disabled={disabled}\n        accessibilityLabel={accessibilityLabel}\n        // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n        accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n        accessibilityComponentType=\"button\"\n        accessibilityRole=\"button\"\n        accessibilityState={{ ...accessibilityState, disabled }}\n        style={styles.touchable}\n        testID={testID}\n      >\n        <View\n          style={[\n            styles.content,\n            label ? styles.extended : small ? styles.small : styles.standard,\n          ]}\n          pointerEvents=\"none\"\n        >\n          {icon && loading !== true ? (\n            <IconComponent source={icon} size={24} color={foregroundColor} />\n          ) : null}\n          {loading ? (\n            <ActivityIndicator size={18} color={foregroundColor} />\n          ) : null}\n          {label ? (\n            <Text\n              selectable={false}\n              style={[\n                styles.label,\n                uppercase && styles.uppercaseLabel,\n                { color: foregroundColor, ...theme.fonts.medium },\n              ]}\n            >\n              {label}\n            </Text>\n          ) : null}\n        </View>\n      </TouchableRipple>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 28,\n    elevation: 6,\n  },\n  touchable: {\n    borderRadius: 28,\n  },\n  standard: {\n    height: 56,\n    width: 56,\n  },\n  small: {\n    height: 40,\n    width: 40,\n  },\n  extended: {\n    height: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    marginHorizontal: 8,\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  disabled: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(FAB);\n\n// @component-docs ignore-next-line\nconst FABWithTheme = withTheme(FAB);\n// @component-docs ignore-next-line\nexport { FABWithTheme as FAB };\n"]}