{"version":3,"sources":["TextInputFlat.tsx"],"names":["MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","LABEL_PADDING_TOP_DENSE","MIN_HEIGHT","MIN_DENSE_HEIGHT_WL","MIN_DENSE_HEIGHT","TextInputFlat","React","Component","render","disabled","editable","label","error","selectionColor","underlineColor","activeUnderlineColor","dense","style","theme","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","rest","props","isAndroid","Platform","OS","colors","fonts","font","regular","hasActiveOutline","focused","fontSize","fontSizeStyle","fontWeight","height","paddingHorizontal","textAlign","viewStyle","StyleSheet","flatten","MAXIMIZED_LABEL_FONT_SIZE","isPaddingHorizontalPassed","undefined","adornmentConfig","paddingLeft","paddingRight","leftLayout","rightLayout","rightAffixWidth","width","ADORNMENT_SIZE","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","inputOffset","FLAT_INPUT_OFFSET","mode","InputMode","Flat","inputTextColor","activeColor","underlineColorCustom","placeholderColor","errorColor","text","alpha","rgb","string","primary","placeholder","containerStyle","backgroundColor","dark","background","lighten","darken","borderTopLeftRadius","roundness","borderTopRightRadius","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelWidth","labelLayout","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","styles","inputFlatDense","inputFlat","pad","paddingFlat","baseLabelTranslateY","placeholderOpacity","labeled","measured","minHeight","flatHeight","iconTopPosition","leftAffixTopPosition","affixHeight","rightAffixTopPosition","labelProps","placeholderStyle","wiggleOffsetX","LABEL_WIGGLE_X_OFFSET","paddingOffset","affixTopPosition","AdornmentSide","Left","Right","onAffixChange","adornmentProps","AdornmentType","Affix","Icon","isTextInputFocused","length","textStyle","visible","labelContainer","absoluteFill","densePatchContainer","patchContainer","ref","underlineColorAndroid","input","color","textAlignVertical","outline","Underline","underline","transform","scaleY","create","position","bottom","zIndex","paddingTop","paddingBottom","flexGrow","margin"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  Animated,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\nimport InputLabel from './Label/InputLabel';\nimport TextInputAdornment, {\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  FLAT_INPUT_OFFSET,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingFlat,\n  Padding,\n  interpolatePlaceholder,\n  calculateFlatAffixTopPosition,\n  calculateFlatInputHorizontalPadding,\n} from './helpers';\nimport {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n} from './Adornment/TextInputAdornment';\nimport { AdornmentSide, AdornmentType, InputMode } from './Adornment/enums';\n\nconst MINIMIZED_LABEL_Y_OFFSET = -18;\n\nconst LABEL_PADDING_TOP = 30;\nconst LABEL_PADDING_TOP_DENSE = 24;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT_WL = 52;\nconst MIN_DENSE_HEIGHT = 40;\n\nclass TextInputFlat extends React.Component<ChildTextInputProps> {\n  static defaultProps = {\n    disabled: false,\n    error: false,\n    multiline: false,\n    editable: true,\n    render: (props: RenderProps) => <NativeTextInput {...props} />,\n  };\n\n  render() {\n    const {\n      disabled,\n      editable,\n      label,\n      error,\n      selectionColor,\n      underlineColor,\n      activeUnderlineColor,\n      dense,\n      style,\n      theme,\n      render,\n      multiline,\n      parentState,\n      innerRef,\n      onFocus,\n      forceFocus,\n      onBlur,\n      onChangeText,\n      onLayoutAnimatedText,\n      onLeftAffixLayoutChange,\n      onRightAffixLayoutChange,\n      left,\n      right,\n      placeholderTextColor,\n      ...rest\n    } = this.props;\n\n    const isAndroid = Platform.OS === 'android';\n\n    const { colors, fonts } = theme;\n    const font = fonts.regular;\n    const hasActiveOutline = parentState.focused || error;\n\n    const {\n      fontSize: fontSizeStyle,\n      fontWeight,\n      height,\n      paddingHorizontal,\n      textAlign,\n      ...viewStyle\n    } = (StyleSheet.flatten(style) || {}) as TextStyle;\n    const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n    const isPaddingHorizontalPassed =\n      paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n\n    const adornmentConfig = getAdornmentConfig({\n      left,\n      right,\n    });\n\n    let { paddingLeft, paddingRight } = calculateFlatInputHorizontalPadding({\n      adornmentConfig,\n    });\n\n    if (isPaddingHorizontalPassed) {\n      paddingLeft = paddingHorizontal as number;\n      paddingRight = paddingHorizontal as number;\n    }\n\n    const { leftLayout, rightLayout } = parentState;\n\n    const rightAffixWidth = right\n      ? rightLayout.width || ADORNMENT_SIZE\n      : ADORNMENT_SIZE;\n\n    const leftAffixWidth = left\n      ? leftLayout.width || ADORNMENT_SIZE\n      : ADORNMENT_SIZE;\n\n    const adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput(\n      {\n        adornmentConfig,\n        rightAffixWidth,\n        leftAffixWidth,\n        paddingHorizontal,\n        inputOffset: FLAT_INPUT_OFFSET,\n        mode: InputMode.Flat,\n      }\n    );\n\n    let inputTextColor,\n      activeColor,\n      underlineColorCustom,\n      placeholderColor,\n      errorColor;\n\n    if (disabled) {\n      inputTextColor = activeColor = color(colors.text)\n        .alpha(0.54)\n        .rgb()\n        .string();\n      placeholderColor = colors.disabled;\n      underlineColorCustom = 'transparent';\n    } else {\n      inputTextColor = colors.text;\n      activeColor = error\n        ? colors.error\n        : activeUnderlineColor || colors.primary;\n      placeholderColor = colors.placeholder;\n      errorColor = colors.error;\n      underlineColorCustom = underlineColor || colors.disabled;\n    }\n\n    const containerStyle = {\n      backgroundColor: theme.dark\n        ? color(colors.background).lighten(0.24).rgb().string()\n        : color(colors.background).darken(0.06).rgb().string(),\n      borderTopLeftRadius: theme.roundness,\n      borderTopRightRadius: theme.roundness,\n    };\n\n    const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n    const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n    const labelWidth = parentState.labelLayout.width;\n    const labelHeight = parentState.labelLayout.height;\n    const labelHalfWidth = labelWidth / 2;\n    const labelHalfHeight = labelHeight / 2;\n\n    const baseLabelTranslateX =\n      (I18nManager.isRTL ? 1 : -1) *\n        (labelHalfWidth - (labelScale * labelWidth) / 2) +\n      (1 - labelScale) * (I18nManager.isRTL ? -1 : 1) * paddingLeft;\n\n    const minInputHeight = dense\n      ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) -\n        LABEL_PADDING_TOP_DENSE\n      : MIN_HEIGHT - LABEL_PADDING_TOP;\n\n    const inputHeight = calculateInputHeight(\n      labelHeight,\n      height,\n      minInputHeight\n    );\n\n    const topPosition = calculateLabelTopPosition(\n      labelHeight,\n      inputHeight,\n      multiline && height ? 0 : !height ? minInputHeight / 2 : 0\n    );\n\n    if (height && typeof height !== 'number') {\n      // eslint-disable-next-line\n      console.warn('Currently we support only numbers in height prop');\n    }\n\n    const paddingSettings = {\n      height: height ? +height : null,\n      labelHalfHeight,\n      offset: FLAT_INPUT_OFFSET,\n      multiline: multiline ? multiline : null,\n      dense: dense ? dense : null,\n      topPosition,\n      fontSize,\n      label,\n      scale: fontScale,\n      isAndroid,\n      styles: StyleSheet.flatten(\n        dense ? styles.inputFlatDense : styles.inputFlat\n      ) as Padding,\n    };\n\n    const pad = calculatePadding(paddingSettings);\n\n    const paddingFlat = adjustPaddingFlat({\n      ...paddingSettings,\n      pad,\n    });\n\n    const baseLabelTranslateY =\n      -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n\n    const placeholderOpacity = hasActiveOutline\n      ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n      : parentState.labelLayout.measured\n      ? 1\n      : 0;\n\n    const minHeight =\n      height ||\n      (dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) : MIN_HEIGHT);\n\n    const flatHeight =\n      inputHeight +\n      (!height ? (dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP) : 0);\n\n    const iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n\n    const leftAffixTopPosition = leftLayout.height\n      ? calculateFlatAffixTopPosition({\n          height: flatHeight,\n          ...paddingFlat,\n          affixHeight: leftLayout.height,\n        })\n      : null;\n\n    const rightAffixTopPosition = rightLayout.height\n      ? calculateFlatAffixTopPosition({\n          height: flatHeight,\n          ...paddingFlat,\n          affixHeight: rightLayout.height,\n        })\n      : null;\n\n    const labelProps = {\n      label,\n      onLayoutAnimatedText,\n      placeholderOpacity,\n      error,\n      placeholderStyle: styles.placeholder,\n      baseLabelTranslateY,\n      baseLabelTranslateX,\n      font,\n      fontSize,\n      fontWeight,\n      labelScale,\n      wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n      topPosition,\n      paddingOffset: { paddingLeft, paddingRight },\n      hasActiveOutline,\n      activeColor,\n      placeholderColor,\n      errorColor,\n      roundness: theme.roundness,\n    };\n    const affixTopPosition = {\n      [AdornmentSide.Left]: leftAffixTopPosition,\n      [AdornmentSide.Right]: rightAffixTopPosition,\n    };\n    const onAffixChange = {\n      [AdornmentSide.Left]: onLeftAffixLayoutChange,\n      [AdornmentSide.Right]: onRightAffixLayoutChange,\n    };\n\n    let adornmentProps: TextInputAdornmentProps = {\n      paddingHorizontal,\n      adornmentConfig,\n      forceFocus,\n      topPosition: {\n        [AdornmentType.Affix]: affixTopPosition,\n        [AdornmentType.Icon]: iconTopPosition,\n      },\n      onAffixChange,\n      isTextInputFocused: this.props.parentState.focused,\n    };\n    if (adornmentConfig.length) {\n      adornmentProps = {\n        ...adornmentProps,\n        left,\n        right,\n        textStyle: { ...font, fontSize, fontWeight },\n        visible: this.props.parentState.labeled,\n      };\n    }\n\n    return (\n      <View style={[containerStyle, viewStyle]}>\n        <Underline\n          parentState={parentState}\n          underlineColorCustom={underlineColorCustom}\n          error={error}\n          colors={colors}\n          activeColor={activeColor}\n        />\n        <View\n          style={[\n            styles.labelContainer,\n            {\n              minHeight,\n            },\n          ]}\n        >\n          {!isAndroid && multiline && (\n            // Workaround for: https://github.com/callstack/react-native-paper/issues/2799\n            // Patch for a multiline TextInput with fixed height, which allow to avoid covering input label with its value.\n            <View\n              testID=\"patch-container\"\n              pointerEvents=\"none\"\n              style={[\n                StyleSheet.absoluteFill,\n                dense ? styles.densePatchContainer : styles.patchContainer,\n                {\n                  backgroundColor: containerStyle.backgroundColor,\n                  left: paddingLeft,\n                  right: paddingRight,\n                },\n              ]}\n            />\n          )}\n          <InputLabel parentState={parentState} labelProps={labelProps} />\n          {render?.({\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            placeholder: label\n              ? parentState.placeholder\n              : this.props.placeholder,\n            placeholderTextColor: placeholderTextColor ?? placeholderColor,\n            editable: !disabled && editable,\n            selectionColor:\n              typeof selectionColor === 'undefined'\n                ? activeColor\n                : selectionColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: [\n              styles.input,\n              { paddingLeft, paddingRight },\n              !multiline || (multiline && height) ? { height: flatHeight } : {},\n              paddingFlat,\n              {\n                ...font,\n                fontSize,\n                fontWeight,\n                color: inputTextColor,\n                textAlignVertical: multiline ? 'top' : 'center',\n                textAlign: textAlign\n                  ? textAlign\n                  : I18nManager.isRTL\n                  ? 'right'\n                  : 'left',\n              },\n              Platform.OS === 'web' && { outline: 'none' },\n              adornmentStyleAdjustmentForNativeInput,\n            ],\n          })}\n        </View>\n        <TextInputAdornment {...adornmentProps} />\n      </View>\n    );\n  }\n}\n\nexport default TextInputFlat;\n\ntype UnderlineProps = {\n  parentState: {\n    focused: boolean;\n  };\n  error?: boolean;\n  colors: {\n    error: string;\n  };\n  activeColor: string;\n  underlineColorCustom?: string;\n};\n\nconst Underline = ({\n  parentState,\n  error,\n  colors,\n  activeColor,\n  underlineColorCustom,\n}: UnderlineProps) => {\n  let backgroundColor = parentState.focused\n    ? activeColor\n    : underlineColorCustom;\n  if (error) backgroundColor = colors.error;\n  return (\n    <Animated.View\n      style={[\n        styles.underline,\n        {\n          backgroundColor,\n          // Underlines is thinner when input is not focused\n          transform: [{ scaleY: parentState.focused ? 1 : 0.5 }],\n        },\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n    zIndex: 1,\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4,\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2,\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2,\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2,\n  },\n});\n"]}