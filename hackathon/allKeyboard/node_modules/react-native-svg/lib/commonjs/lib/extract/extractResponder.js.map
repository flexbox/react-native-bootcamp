{"version":3,"sources":["extractResponder.ts"],"names":["responderKeys","Object","keys","PanResponder","create","panHandlers","numResponderKeys","length","extractResponder","o","props","ref","onPress","disabled","onPressIn","onPressOut","onLongPress","delayPressIn","delayPressOut","delayLongPress","pointerEvents","responsible","i","key","value","hasTouchableProperty","onResponderMove","touchableHandleResponderMove","onResponderGrant","touchableHandleResponderGrant","onResponderRelease","touchableHandleResponderRelease","onResponderTerminate","touchableHandleResponderTerminate","onStartShouldSetResponder","touchableHandleStartShouldSetResponder","onResponderTerminationRequest","touchableHandleResponderTerminationRequest"],"mappings":"uGAAA,yCAOA,GAAMA,CAAAA,aAAa,CAAGC,MAAM,CAACC,IAAP,CAAYC,0BAAaC,MAAb,CAAoB,EAApB,EAAwBC,WAApC,CAAtB,CACA,GAAMC,CAAAA,gBAAgB,CAAGN,aAAa,CAACO,MAAvC,CAEe,QAASC,CAAAA,gBAAT,CACbC,CADa,CAGbC,KAHa,CAIbC,GAJa,CAKb,IAEEC,CAAAA,OAFF,CAWIF,KAXJ,CAEEE,OAFF,CAGEC,QAHF,CAWIH,KAXJ,CAGEG,QAHF,CAIEC,SAJF,CAWIJ,KAXJ,CAIEI,SAJF,CAKEC,UALF,CAWIL,KAXJ,CAKEK,UALF,CAMEC,WANF,CAWIN,KAXJ,CAMEM,WANF,CAOEC,YAPF,CAWIP,KAXJ,CAOEO,YAPF,CAQEC,aARF,CAWIR,KAXJ,CAQEQ,aARF,CASEC,cATF,CAWIT,KAXJ,CASES,cATF,CAUEC,aAVF,CAWIV,KAXJ,CAUEU,aAVF,CAaA,GAAIC,CAAAA,WAAW,CAAG,KAAlB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGhB,gBAApB,CAAsCgB,CAAC,EAAvC,CAA2C,CACzC,GAAMC,CAAAA,GAAG,CAAGvB,aAAa,CAACsB,CAAD,CAAzB,CACA,GAAME,CAAAA,KAAK,CAAGd,KAAK,CAACa,GAAD,CAAnB,CACA,GAAIC,KAAJ,CAAW,CACTH,WAAW,CAAG,IAAd,CACAZ,CAAC,CAACc,GAAD,CAAD,CAASC,KAAT,CACD,CACF,CAED,GAAIJ,aAAJ,CAAmB,CACjBX,CAAC,CAACW,aAAF,CAAkBA,aAAlB,CACD,CAED,GAAMK,CAAAA,oBAAoB,CACxBZ,QAAQ,EAAI,IAAZ,EACAD,OADA,EAEAE,SAFA,EAGAC,UAHA,EAIAC,WAJA,EAKAC,YALA,EAMAC,aANA,EAOAC,cARF,CAUA,GAAIM,oBAAJ,CAA0B,CACxBJ,WAAW,CAAG,IAAd,CACAZ,CAAC,CAACiB,eAAF,CAAoBf,GAAG,CAACgB,4BAAxB,CACAlB,CAAC,CAACmB,gBAAF,CAAqBjB,GAAG,CAACkB,6BAAzB,CACApB,CAAC,CAACqB,kBAAF,CAAuBnB,GAAG,CAACoB,+BAA3B,CACAtB,CAAC,CAACuB,oBAAF,CAAyBrB,GAAG,CAACsB,iCAA7B,CACAxB,CAAC,CAACyB,yBAAF,CAA8BvB,GAAG,CAACwB,sCAAlC,CACA1B,CAAC,CAAC2B,6BAAF,CACEzB,GAAG,CAAC0B,0CADN,CAED,CAED,GAAIhB,WAAJ,CAAiB,CACfZ,CAAC,CAACY,WAAF,CAAgB,IAAhB,CACD,CACF","sourcesContent":["import { PanResponder } from 'react-native';\nimport {\n  extractedProps,\n  ResponderInstanceProps,\n  ResponderProps,\n} from './types';\n\nconst responderKeys = Object.keys(PanResponder.create({}).panHandlers);\nconst numResponderKeys = responderKeys.length;\n\nexport default function extractResponder(\n  o: extractedProps,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props: { [x: string]: any } & ResponderProps,\n  ref: ResponderInstanceProps,\n) {\n  const {\n    onPress,\n    disabled,\n    onPressIn,\n    onPressOut,\n    onLongPress,\n    delayPressIn,\n    delayPressOut,\n    delayLongPress,\n    pointerEvents,\n  } = props;\n\n  let responsible = false;\n  for (let i = 0; i < numResponderKeys; i++) {\n    const key = responderKeys[i];\n    const value = props[key];\n    if (value) {\n      responsible = true;\n      o[key] = value;\n    }\n  }\n\n  if (pointerEvents) {\n    o.pointerEvents = pointerEvents;\n  }\n\n  const hasTouchableProperty =\n    disabled != null ||\n    onPress ||\n    onPressIn ||\n    onPressOut ||\n    onLongPress ||\n    delayPressIn ||\n    delayPressOut ||\n    delayLongPress;\n\n  if (hasTouchableProperty) {\n    responsible = true;\n    o.onResponderMove = ref.touchableHandleResponderMove;\n    o.onResponderGrant = ref.touchableHandleResponderGrant;\n    o.onResponderRelease = ref.touchableHandleResponderRelease;\n    o.onResponderTerminate = ref.touchableHandleResponderTerminate;\n    o.onStartShouldSetResponder = ref.touchableHandleStartShouldSetResponder;\n    o.onResponderTerminationRequest =\n      ref.touchableHandleResponderTerminationRequest;\n  }\n\n  if (responsible) {\n    o.responsible = true;\n  }\n}\n"]}