{"version":3,"sources":["extractBrush.ts"],"names":["urlIdPattern","currentColorBrush","contextFillBrush","contextStrokeBrush","extractBrush","color","brush","match","int32ARGBColor","console","warn"],"mappings":"wLAAA,qEAGA,GAAMA,CAAAA,YAAY,CAAG,gBAArB,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,CAAC,CAAD,CAA1B,CACA,GAAMC,CAAAA,gBAAgB,CAAG,CAAC,CAAD,CAAzB,CACA,GAAMC,CAAAA,kBAAkB,CAAG,CAAC,CAAD,CAA3B,CAEe,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAAqC,CAClD,GAAI,MAAOA,CAAAA,KAAP,GAAiB,QAArB,CAA+B,CAC7B,GAAIA,KAAK,GAAK,CAAV,GAAgBA,KAAhB,EAAyBA,KAAK,EAAI,CAAlC,EAAuCA,KAAK,EAAI,UAApD,CAAgE,CAC9D,MAAO,+BAAaA,KAAb,CAAP,CACD,CACF,CAED,GAAI,CAACA,KAAD,EAAUA,KAAK,GAAK,MAAxB,CAAgC,CAC9B,MAAO,KAAP,CACD,CAED,GAAIA,KAAK,GAAK,cAAd,CAA8B,CAC5B,MAAOJ,CAAAA,iBAAP,CACD,CAED,GAAII,KAAK,GAAK,cAAd,CAA8B,CAC5B,MAAOH,CAAAA,gBAAP,CACD,CAED,GAAIG,KAAK,GAAK,gBAAd,CAAgC,CAC9B,MAAOF,CAAAA,kBAAP,CACD,CAED,GAAMG,CAAAA,KAAK,CAAG,MAAOD,CAAAA,KAAP,GAAiB,QAAjB,EAA6BA,KAAK,CAACE,KAAN,CAAYP,YAAZ,CAA3C,CACA,GAAIM,KAAJ,CAAW,CACT,MAAO,CAAC,CAAD,CAAIA,KAAK,CAAC,CAAD,CAAT,CAAP,CACD,CAED,GAAME,CAAAA,cAAc,CAAG,0BAAaH,KAAb,CAAvB,CACA,GAAI,MAAOG,CAAAA,cAAP,GAA0B,QAA9B,CAAwC,CACtC,MAAOA,CAAAA,cAAP,CACD,CAEDC,OAAO,CAACC,IAAR,aAAiBL,KAAjB,sCACA,MAAO,KAAP,CACD","sourcesContent":["import extractColor, { integerColor } from './extractColor';\nimport { Color } from './types';\n\nconst urlIdPattern = /^url\\(#(.+)\\)$/;\n\nconst currentColorBrush = [2];\nconst contextFillBrush = [3];\nconst contextStrokeBrush = [4];\n\nexport default function extractBrush(color?: Color) {\n  if (typeof color === 'number') {\n    if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {\n      return integerColor(color);\n    }\n  }\n\n  if (!color || color === 'none') {\n    return null;\n  }\n\n  if (color === 'currentColor') {\n    return currentColorBrush;\n  }\n\n  if (color === 'context-fill') {\n    return contextFillBrush;\n  }\n\n  if (color === 'context-stroke') {\n    return contextStrokeBrush;\n  }\n\n  const brush = typeof color === 'string' && color.match(urlIdPattern);\n  if (brush) {\n    return [1, brush[1]];\n  }\n\n  const int32ARGBColor = extractColor(color);\n  if (typeof int32ARGBColor === 'number') {\n    return int32ARGBColor;\n  }\n\n  console.warn(`\"${color}\" is not a valid color or brush`);\n  return null;\n}\n"]}