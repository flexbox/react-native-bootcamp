{"version":3,"sources":["extractColor.ts"],"names":["colors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","colorNames","name","hasOwnProperty","color","r","g","b","Object","freeze","hslToRgb","_h","_s","_l","a","h","s","l","t1","t2","t3","rgb","val","i","hwbToRgb","_w","_b","wh","bl","ratio","v","f","n","Math","floor","clamp","num","min","max","abbr","hex","rgba","per","keyword","rgbFromString","string","match","hexAlpha","i2","parseInt","slice","round","parseFloat","integerColor","hslRegEx","rgbFromHslString","alpha","isNaN","hwbRegEx","rgbFromHwbString","w","colorFromString","prefix","substring","toLowerCase","identity","x","toSignedInt32","Platform","OS","extractColor","parsedColor","Array","isArray","int32Color","undefined"],"mappings":"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","sourcesContent":["import { Platform } from 'react-native';\nimport { Color } from './types';\n\nexport const colors: { [colorname: string]: number[] } = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50],\n};\nexport const colorNames: { [colorname: string]: number | void } = {};\nfor (const name in colors) {\n  if (colors.hasOwnProperty(name)) {\n    const color: number[] = colors[name];\n    const r = color[0];\n    const g = color[1];\n    const b = color[2];\n    colorNames[name] = (0xff000000 | (r << 16) | (g << 8) | b) >>> 0;\n  }\n}\nObject.freeze(colorNames);\n\nfunction hslToRgb(_h: number, _s: number, _l: number, a: number) {\n  const h = _h / 360;\n  const s = _s / 100;\n  const l = _l / 100;\n  let t1;\n  let t2;\n  let t3;\n  let rgb;\n  let val;\n\n  if (s === 0) {\n    val = l;\n    return [val, val, val, a];\n  }\n\n  if (l < 0.5) {\n    t2 = l * (1 + s);\n  } else {\n    t2 = l + s - l * s;\n  }\n\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0, a];\n  for (let i = 0; i < 3; i++) {\n    t3 = h + (1 / 3) * -(i - 1);\n    if (t3 < 0) {\n      t3++;\n    }\n    if (t3 > 1) {\n      t3--;\n    }\n\n    if (6 * t3 < 1) {\n      val = t1 + (t2 - t1) * 6 * t3;\n    } else if (2 * t3 < 1) {\n      val = t2;\n    } else if (3 * t3 < 2) {\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    } else {\n      val = t1;\n    }\n\n    rgb[i] = val;\n  }\n\n  return rgb;\n}\n\nfunction hwbToRgb(_h: number, _w: number, _b: number, a: number) {\n  const h = _h / 360;\n  let wh = _w / 100;\n  let bl = _b / 100;\n  const ratio = wh + bl;\n  let i;\n  let v;\n  let f;\n  let n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n\n  if ((i & 0x01) !== 0) {\n    f = 1 - f;\n  }\n\n  n = wh + f * (v - wh); // linear interpolation\n\n  let r;\n  let g;\n  let b;\n  switch (i) {\n    default:\n    case 6:\n    case 0:\n      r = v;\n      g = n;\n      b = wh;\n      break;\n    case 1:\n      r = n;\n      g = v;\n      b = wh;\n      break;\n    case 2:\n      r = wh;\n      g = v;\n      b = n;\n      break;\n    case 3:\n      r = wh;\n      g = n;\n      b = v;\n      break;\n    case 4:\n      r = n;\n      g = wh;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = wh;\n      b = n;\n      break;\n  }\n\n  return [r, g, b, a];\n}\n\nfunction clamp(num: number, min: number, max: number) {\n  return Math.min(Math.max(min, num), max);\n}\n\nconst abbr = /^#([a-f0-9]{3,4})$/i;\nconst hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\nconst rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d.]+)\\s*)?\\)$/;\nconst per = /^rgba?\\(\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*(?:,\\s*([+-]?[\\d.]+)\\s*)?\\)$/;\nconst keyword = /(\\D+)/;\n\nfunction rgbFromString(string: string) {\n  let rgb = [0, 0, 0, 1];\n  let match;\n  let i;\n  let hexAlpha;\n\n  if ((match = string.match(hex))) {\n    hexAlpha = match[2];\n    match = match[1];\n\n    for (i = 0; i < 3; i++) {\n      // https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n      const i2 = i * 2;\n      rgb[i] = parseInt(match.slice(i2, i2 + 2), 16) / 255;\n    }\n\n    if (hexAlpha) {\n      rgb[3] = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n    }\n  } else if ((match = string.match(abbr))) {\n    match = match[1];\n    hexAlpha = match[3];\n\n    for (i = 0; i < 3; i++) {\n      rgb[i] = parseInt(match[i] + match[i], 16) / 255;\n    }\n\n    if (hexAlpha) {\n      rgb[3] =\n        Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n    }\n  } else if ((match = string.match(rgba))) {\n    for (i = 0; i < 3; i++) {\n      rgb[i] = parseInt(match[i + 1], 0) / 255;\n    }\n\n    if (match[4]) {\n      rgb[3] = parseFloat(match[4]);\n    }\n  } else if ((match = string.match(per))) {\n    for (i = 0; i < 3; i++) {\n      rgb[i] = parseFloat(match[i + 1]) / 100;\n    }\n\n    if (match[4]) {\n      rgb[3] = parseFloat(match[4]);\n    }\n  } else if ((match = string.match(keyword))) {\n    if (match[1] === 'transparent') {\n      return [0, 0, 0, 0];\n    }\n\n    let color = colorNames[match[1]];\n\n    if (!(typeof color === 'number')) {\n      return null;\n    }\n\n    return integerColor(color);\n  } else {\n    return null;\n  }\n\n  for (i = 0; i < 4; i++) {\n    rgb[i] = clamp(rgb[i], 0, 1);\n  }\n\n  return rgb;\n}\n\nconst hslRegEx = /^hsla?\\(\\s*([+-]?(?:\\d*\\.)?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*(?:,\\s*([+-]?[\\d.]+)\\s*)?\\)$/;\n\nfunction rgbFromHslString(string: string) {\n  const match = string.match(hslRegEx);\n  if (!match) {\n    return null;\n  }\n\n  const alpha = parseFloat(match[4]);\n  const h = (parseFloat(match[1]) + 360) % 360;\n  const s = clamp(parseFloat(match[2]), 0, 100);\n  const l = clamp(parseFloat(match[3]), 0, 100);\n  const a = isNaN(alpha) ? 1 : clamp(alpha, 0, 1);\n  return hslToRgb(h, s, l, a);\n}\n\nconst hwbRegEx = /^hwb\\(\\s*([+-]?\\d*[.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d.]+)%\\s*,\\s*([+-]?[\\d.]+)%\\s*(?:,\\s*([+-]?[\\d.]+)\\s*)?\\)$/;\n\nfunction rgbFromHwbString(string: string) {\n  const match = string.match(hwbRegEx);\n  if (!match) {\n    return null;\n  }\n\n  const alpha = parseFloat(match[4]);\n  const h = ((parseFloat(match[1]) % 360) + 360) % 360;\n  const w = clamp(parseFloat(match[2]), 0, 100);\n  const b = clamp(parseFloat(match[3]), 0, 100);\n  const a = isNaN(alpha) ? 1 : clamp(alpha, 0, 1);\n  return hwbToRgb(h, w, b, a);\n}\n\nfunction colorFromString(string: string) {\n  const prefix = string.substring(0, 3).toLowerCase();\n\n  switch (prefix) {\n    case 'hsl':\n      return rgbFromHslString(string);\n    case 'hwb':\n      return rgbFromHwbString(string);\n    default:\n      return rgbFromString(string);\n  }\n}\n\nconst identity = (x: number) => x;\n\nconst toSignedInt32 = (x: number) => x | 0x0;\n\n// Android use 32 bit *signed* integer to represent the color\n// We utilize the fact that bitwise operations in JS also operates on\n// signed 32 bit integers, so that we can use those to convert from\n// *unsigned* to *signed* 32bit in that way.\nexport const integerColor =\n  Platform.OS === 'android' ? toSignedInt32 : identity;\n\n// Returns 0xaarrggbb or null\nexport default function extractColor(color: Color | void) {\n  if (typeof color === 'number') {\n    if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {\n      return integerColor(color);\n    }\n    return null;\n  }\n\n  const parsedColor =\n    typeof color === 'string' ? colorFromString(color) : color;\n  if (!Array.isArray(parsedColor)) {\n    return parsedColor;\n  }\n\n  const r = parsedColor[0];\n  const g = parsedColor[1];\n  const b = parsedColor[2];\n  const a = parsedColor[3];\n\n  const int32Color =\n    ((a === undefined ? 0xff000000 : Math.round(a * 255) << 24) |\n      (Math.round(r * 255) << 16) |\n      (Math.round(g * 255) << 8) |\n      Math.round(b * 255)) >>>\n    0;\n\n  return integerColor(int32Color);\n}\n"]}