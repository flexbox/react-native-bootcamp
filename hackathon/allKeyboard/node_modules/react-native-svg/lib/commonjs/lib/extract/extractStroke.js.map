{"version":3,"sources":["extractStroke.ts"],"names":["caps","butt","square","round","joins","miter","bevel","vectorEffects","none","default","nonScalingStroke","inherit","uri","extractStroke","o","props","inherited","stroke","strokeOpacity","strokeLinecap","strokeLinejoin","strokeDasharray","strokeWidth","strokeDashoffset","strokeMiterlimit","vectorEffect","push","strokeDash","length","concat","parseFloat"],"mappings":"uLAAA,oEACA,wEACA,8EAGA,GAAMA,CAAAA,IAAI,CAAG,CACXC,IAAI,CAAE,CADK,CAEXC,MAAM,CAAE,CAFG,CAGXC,KAAK,CAAE,CAHI,CAAb,CAMA,GAAMC,CAAAA,KAAK,CAAG,CACZC,KAAK,CAAE,CADK,CAEZC,KAAK,CAAE,CAFK,CAGZH,KAAK,CAAE,CAHK,CAAd,CAMA,GAAMI,CAAAA,aAAa,CAAG,CACpBC,IAAI,CAAE,CADc,CAEpBC,OAAO,CAAE,CAFW,CAGpBC,gBAAgB,CAAE,CAHE,CAIpB,qBAAsB,CAJF,CAKpBC,OAAO,CAAE,CALW,CAMpBC,GAAG,CAAE,CANe,CAAtB,CASe,QAASC,CAAAA,aAAT,CACbC,CADa,CAEbC,KAFa,CAGbC,SAHa,CAIb,IAEEC,CAAAA,MAFF,CAWIF,KAXJ,CAEEE,MAFF,CAGEC,aAHF,CAWIH,KAXJ,CAGEG,aAHF,CAIEC,aAJF,CAWIJ,KAXJ,CAIEI,aAJF,CAKEC,cALF,CAWIL,KAXJ,CAKEK,cALF,CAMEC,eANF,CAWIN,KAXJ,CAMEM,eANF,CAOEC,WAPF,CAWIP,KAXJ,CAOEO,WAPF,CAQEC,gBARF,CAWIR,KAXJ,CAQEQ,gBARF,CASEC,gBATF,CAWIT,KAXJ,CASES,gBATF,CAUEC,YAVF,CAWIV,KAXJ,CAUEU,YAVF,CAaA,GAAIR,MAAM,EAAI,IAAd,CAAoB,CAClBD,SAAS,CAACU,IAAV,CAAe,QAAf,EACAZ,CAAC,CAACG,MAAF,CAAW,0BAAaA,MAAb,CAAX,CACD,CACD,GAAIK,WAAW,EAAI,IAAnB,CAAyB,CACvBN,SAAS,CAACU,IAAV,CAAe,aAAf,EACAZ,CAAC,CAACQ,WAAF,CAAgBA,WAAhB,CACD,CACD,GAAIJ,aAAa,EAAI,IAArB,CAA2B,CACzBF,SAAS,CAACU,IAAV,CAAe,eAAf,EACAZ,CAAC,CAACI,aAAF,CAAkB,4BAAeA,aAAf,CAAlB,CACD,CACD,GAAIG,eAAe,EAAI,IAAvB,CAA6B,CAC3BL,SAAS,CAACU,IAAV,CAAe,iBAAf,EACA,GAAMC,CAAAA,UAAU,CACd,CAACN,eAAD,EAAoBA,eAAe,GAAK,MAAxC,CACI,IADJ,CAEI,+BAAkBA,eAAlB,CAHN,CAIAP,CAAC,CAACO,eAAF,CACEM,UAAU,EAAIA,UAAU,CAACC,MAAX,CAAoB,CAApB,GAA0B,CAAxC,CACID,UAAU,CAACE,MAAX,CAAkBF,UAAlB,CADJ,CAEIA,UAHN,CAID,CACD,GAAIJ,gBAAgB,EAAI,IAAxB,CAA8B,CAC5BP,SAAS,CAACU,IAAV,CAAe,kBAAf,EACAZ,CAAC,CAACS,gBAAF,CACEF,eAAe,EAAIE,gBAAnB,CAAsC,CAACA,gBAAD,EAAqB,CAA3D,CAA+D,IADjE,CAED,CACD,GAAIJ,aAAa,EAAI,IAArB,CAA2B,CACzBH,SAAS,CAACU,IAAV,CAAe,eAAf,EACAZ,CAAC,CAACK,aAAF,CAAmBA,aAAa,EAAInB,IAAI,CAACmB,aAAD,CAAtB,EAA0C,CAA5D,CACD,CACD,GAAIC,cAAc,EAAI,IAAtB,CAA4B,CAC1BJ,SAAS,CAACU,IAAV,CAAe,gBAAf,EACAZ,CAAC,CAACM,cAAF,CAAoBA,cAAc,EAAIhB,KAAK,CAACgB,cAAD,CAAxB,EAA6C,CAAhE,CACD,CACD,GAAII,gBAAgB,EAAI,IAAxB,CAA8B,CAC5BR,SAAS,CAACU,IAAV,CAAe,kBAAf,EACAZ,CAAC,CAACU,gBAAF,CACE,CAACA,gBAAgB,EAAI,MAAOA,CAAAA,gBAAP,GAA4B,QAAhD,CACGM,UAAU,CAACN,gBAAD,CADb,CAEGA,gBAFJ,GAEyB,CAH3B,CAID,CACD,GAAIC,YAAY,EAAI,IAApB,CAA0B,CACxBX,CAAC,CAACW,YAAF,CAAkBA,YAAY,EAAIlB,aAAa,CAACkB,YAAD,CAA9B,EAAiD,CAAlE,CACD,CACF","sourcesContent":["import extractBrush from './extractBrush';\nimport extractOpacity from './extractOpacity';\nimport extractLengthList from './extractLengthList';\nimport { extractedProps, StrokeProps } from './types';\n\nconst caps = {\n  butt: 0,\n  square: 2,\n  round: 1,\n};\n\nconst joins = {\n  miter: 0,\n  bevel: 2,\n  round: 1,\n};\n\nconst vectorEffects = {\n  none: 0,\n  default: 0,\n  nonScalingStroke: 1,\n  'non-scaling-stroke': 1,\n  inherit: 2,\n  uri: 3,\n};\n\nexport default function extractStroke(\n  o: extractedProps,\n  props: StrokeProps,\n  inherited: string[],\n) {\n  const {\n    stroke,\n    strokeOpacity,\n    strokeLinecap,\n    strokeLinejoin,\n    strokeDasharray,\n    strokeWidth,\n    strokeDashoffset,\n    strokeMiterlimit,\n    vectorEffect,\n  } = props;\n\n  if (stroke != null) {\n    inherited.push('stroke');\n    o.stroke = extractBrush(stroke);\n  }\n  if (strokeWidth != null) {\n    inherited.push('strokeWidth');\n    o.strokeWidth = strokeWidth;\n  }\n  if (strokeOpacity != null) {\n    inherited.push('strokeOpacity');\n    o.strokeOpacity = extractOpacity(strokeOpacity);\n  }\n  if (strokeDasharray != null) {\n    inherited.push('strokeDasharray');\n    const strokeDash =\n      !strokeDasharray || strokeDasharray === 'none'\n        ? null\n        : extractLengthList(strokeDasharray);\n    o.strokeDasharray =\n      strokeDash && strokeDash.length % 2 === 1\n        ? strokeDash.concat(strokeDash)\n        : strokeDash;\n  }\n  if (strokeDashoffset != null) {\n    inherited.push('strokeDashoffset');\n    o.strokeDashoffset =\n      strokeDasharray && strokeDashoffset ? +strokeDashoffset || 0 : null;\n  }\n  if (strokeLinecap != null) {\n    inherited.push('strokeLinecap');\n    o.strokeLinecap = (strokeLinecap && caps[strokeLinecap]) || 0;\n  }\n  if (strokeLinejoin != null) {\n    inherited.push('strokeLinejoin');\n    o.strokeLinejoin = (strokeLinejoin && joins[strokeLinejoin]) || 0;\n  }\n  if (strokeMiterlimit != null) {\n    inherited.push('strokeMiterlimit');\n    o.strokeMiterlimit =\n      (strokeMiterlimit && typeof strokeMiterlimit !== 'number'\n        ? parseFloat(strokeMiterlimit)\n        : strokeMiterlimit) || 4;\n  }\n  if (vectorEffect != null) {\n    o.vectorEffect = (vectorEffect && vectorEffects[vectorEffect]) || 0;\n  }\n}\n"]}