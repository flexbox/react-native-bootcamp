{"version":3,"sources":["xml.tsx"],"names":["tags","svg","Svg","circle","Circle","ellipse","Ellipse","g","G","text","Text","tspan","TSpan","textPath","TextPath","path","Path","polygon","Polygon","polyline","Polyline","line","Line","rect","Rect","use","Use","image","Image","symbol","Symbol","defs","Defs","linearGradient","LinearGradient","radialGradient","RadialGradient","stop","Stop","clipPath","ClipPath","pattern","Pattern","mask","Mask","marker","Marker","missingTag","SvgAst","ast","override","props","children","err","console","error","bind","SvgXml","onError","xml","parse","fetchText","uri","fetch","response","SvgUri","setXml","then","catch","SvgFromXml","prevProps","setState","e","state","Component","SvgFromUri","upperCase","_match","letter","toUpperCase","camelCase","phrase","replace","getStyle","string","style","declarations","split","length","i","declaration","property","value","trim","astToReact","index","Tag","map","repeat","str","result","toSpaces","tabs","locate","source","lines","nLines","column","before","slice","beforeExec","exec","beforeLine","after","afterExec","afterLine","pad","snippet","validNameCharacters","whitespace","quotemarks","middleware","currentElement","metadata","root","stack","message","Error","test","neutral","char","push","openingTag","start","comment","end","cdata","closingTag","tag","getName","element","parent","getAttributes","styles","selfClosing","indexOf","pop","name","allowSpaces","getAttributeValue","isNaN","getQuotedAttributeValue","getUnquotedAttributeValue","quotemark","escaped","jsx"],"mappings":"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","sourcesContent":["import React, {\n  Component,\n  ComponentType,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport Rect from './elements/Rect';\nimport Circle from './elements/Circle';\nimport Ellipse from './elements/Ellipse';\nimport Polygon from './elements/Polygon';\nimport Polyline from './elements/Polyline';\nimport Line from './elements/Line';\nimport Svg from './elements/Svg';\nimport Path from './elements/Path';\nimport G from './elements/G';\nimport Text from './elements/Text';\nimport TSpan from './elements/TSpan';\nimport TextPath from './elements/TextPath';\nimport Use from './elements/Use';\nimport Image from './elements/Image';\nimport Symbol from './elements/Symbol';\nimport Defs from './elements/Defs';\nimport LinearGradient from './elements/LinearGradient';\nimport RadialGradient from './elements/RadialGradient';\nimport Stop from './elements/Stop';\nimport ClipPath from './elements/ClipPath';\nimport Pattern from './elements/Pattern';\nimport Mask from './elements/Mask';\nimport Marker from './elements/Marker';\n\nexport const tags: { [tag: string]: ComponentType } = {\n  svg: Svg,\n  circle: Circle,\n  ellipse: Ellipse,\n  g: G,\n  text: Text,\n  tspan: TSpan,\n  textPath: TextPath,\n  path: Path,\n  polygon: Polygon,\n  polyline: Polyline,\n  line: Line,\n  rect: Rect,\n  use: Use,\n  image: Image,\n  symbol: Symbol,\n  defs: Defs,\n  linearGradient: LinearGradient,\n  radialGradient: RadialGradient,\n  stop: Stop,\n  clipPath: ClipPath,\n  pattern: Pattern,\n  mask: Mask,\n  marker: Marker,\n};\n\nfunction missingTag() {\n  return null;\n}\n\nexport interface AST {\n  tag: string;\n  style?: Styles;\n  styles?: string;\n  priority?: Map<string, boolean | undefined>;\n  parent: AST | null;\n  children: (AST | string)[] | (JSX.Element | string)[];\n  props: {\n    [prop: string]: Styles | string | undefined;\n  };\n  Tag: ComponentType;\n}\n\nexport interface XmlAST extends AST {\n  children: (XmlAST | string)[];\n  parent: XmlAST | null;\n}\n\nexport interface JsxAST extends AST {\n  children: (JSX.Element | string)[];\n}\n\nexport type AdditionalProps = {\n  onError?: (error: Error) => void;\n  override?: Object;\n};\n\nexport type UriProps = { uri: string | null } & AdditionalProps;\nexport type UriState = { xml: string | null };\n\nexport type XmlProps = { xml: string | null } & AdditionalProps;\nexport type XmlState = { ast: JsxAST | null };\n\nexport type AstProps = { ast: JsxAST | null } & AdditionalProps;\n\nexport function SvgAst({ ast, override }: AstProps) {\n  if (!ast) {\n    return null;\n  }\n  const { props, children } = ast;\n  return (\n    <Svg {...props} {...override}>\n      {children}\n    </Svg>\n  );\n}\n\nexport const err = console.error.bind(console);\n\nexport function SvgXml(props: XmlProps) {\n  const { onError = err, xml, override } = props;\n  const ast = useMemo<JsxAST | null>(() => (xml !== null ? parse(xml) : null), [\n    xml,\n  ]);\n\n  try {\n    return <SvgAst ast={ast} override={override || props} />;\n  } catch (error) {\n    onError(error);\n    return null;\n  }\n}\n\nexport async function fetchText(uri: string) {\n  const response = await fetch(uri);\n  return await response.text();\n}\n\nexport function SvgUri(props: UriProps) {\n  const { onError = err, uri } = props;\n  const [xml, setXml] = useState<string | null>(null);\n  useEffect(() => {\n    uri\n      ? fetchText(uri)\n          .then(setXml)\n          .catch(onError)\n      : setXml(null);\n  }, [onError, uri]);\n  return <SvgXml xml={xml} override={props} />;\n}\n\n// Extending Component is required for Animated support.\n\nexport class SvgFromXml extends Component<XmlProps, XmlState> {\n  state = { ast: null };\n  componentDidMount() {\n    this.parse(this.props.xml);\n  }\n  componentDidUpdate(prevProps: { xml: string | null }) {\n    const { xml } = this.props;\n    if (xml !== prevProps.xml) {\n      this.parse(xml);\n    }\n  }\n  parse(xml: string | null) {\n    try {\n      this.setState({ ast: xml ? parse(xml) : null });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  render() {\n    const {\n      props,\n      state: { ast },\n    } = this;\n    return <SvgAst ast={ast} override={props.override || props} />;\n  }\n}\n\nexport class SvgFromUri extends Component<UriProps, UriState> {\n  state = { xml: null };\n  componentDidMount() {\n    this.fetch(this.props.uri);\n  }\n  componentDidUpdate(prevProps: { uri: string | null }) {\n    const { uri } = this.props;\n    if (uri !== prevProps.uri) {\n      this.fetch(uri);\n    }\n  }\n  async fetch(uri: string | null) {\n    try {\n      this.setState({ xml: uri ? await fetchText(uri) : null });\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  render() {\n    const {\n      props,\n      state: { xml },\n    } = this;\n    return <SvgFromXml xml={xml} override={props} />;\n  }\n}\n\nconst upperCase = (_match: string, letter: string) => letter.toUpperCase();\n\nexport const camelCase = (phrase: string) =>\n  phrase.replace(/[:-]([a-z])/g, upperCase);\n\nexport type Styles = { [property: string]: string };\n\nexport function getStyle(string: string): Styles {\n  const style: Styles = {};\n  const declarations = string.split(';');\n  const { length } = declarations;\n  for (let i = 0; i < length; i++) {\n    const declaration = declarations[i];\n    if (declaration.length !== 0) {\n      const split = declaration.split(':');\n      const property = split[0];\n      const value = split[1];\n      style[camelCase(property.trim())] = value.trim();\n    }\n  }\n  return style;\n}\n\nexport function astToReact(\n  value: AST | string,\n  index: number,\n): JSX.Element | string {\n  if (typeof value === 'object') {\n    const { Tag, props, children } = value;\n    return (\n      <Tag key={index} {...props}>\n        {(children as (AST | string)[]).map(astToReact)}\n      </Tag>\n    );\n  }\n  return value;\n}\n\n// slimmed down parser based on https://github.com/Rich-Harris/svg-parser\n\nfunction repeat(str: string, i: number) {\n  let result = '';\n  while (i--) {\n    result += str;\n  }\n  return result;\n}\n\nconst toSpaces = (tabs: string) => repeat('  ', tabs.length);\n\nfunction locate(source: string, i: number) {\n  const lines = source.split('\\n');\n  const nLines = lines.length;\n  let column = i;\n  let line = 0;\n  for (; line < nLines; line++) {\n    const { length } = lines[line];\n    if (column >= length) {\n      column -= length;\n    } else {\n      break;\n    }\n  }\n  const before = source.slice(0, i).replace(/^\\t+/, toSpaces);\n  const beforeExec = /(^|\\n).*$/.exec(before);\n  const beforeLine = (beforeExec && beforeExec[0]) || '';\n  const after = source.slice(i);\n  const afterExec = /.*(\\n|$)/.exec(after);\n  const afterLine = afterExec && afterExec[0];\n  const pad = repeat(' ', beforeLine.length);\n  const snippet = `${beforeLine}${afterLine}\\n${pad}^`;\n  return { line, column, snippet };\n}\n\nconst validNameCharacters = /[a-zA-Z0-9:_-]/;\nconst whitespace = /[\\s\\t\\r\\n]/;\nconst quotemarks = /['\"]/;\n\nexport type Middleware = (ast: XmlAST) => XmlAST;\n\nexport function parse(source: string, middleware?: Middleware): JsxAST | null {\n  const length = source.length;\n  let currentElement: XmlAST | null = null;\n  let state = metadata;\n  let children = null;\n  let root: XmlAST | undefined;\n  let stack: XmlAST[] = [];\n\n  function error(message: string) {\n    const { line, column, snippet } = locate(source, i);\n    throw new Error(\n      `${message} (${line}:${column}). If this is valid SVG, it's probably a bug. Please raise an issue\\n\\n${snippet}`,\n    );\n  }\n\n  function metadata() {\n    while (\n      i + 1 < length &&\n      (source[i] !== '<' || !validNameCharacters.test(source[i + 1]))\n    ) {\n      i++;\n    }\n\n    return neutral();\n  }\n\n  function neutral() {\n    let text = '';\n    let char;\n    while (i < length && (char = source[i]) !== '<') {\n      text += char;\n      i += 1;\n    }\n\n    if (/\\S/.test(text)) {\n      children.push(text);\n    }\n\n    if (source[i] === '<') {\n      return openingTag;\n    }\n\n    return neutral;\n  }\n\n  function openingTag() {\n    const char = source[i];\n\n    if (char === '?') {\n      return neutral;\n    } // <?xml...\n\n    if (char === '!') {\n      const start = i + 1;\n      if (source.slice(start, i + 3) === '--') {\n        return comment;\n      }\n      const end = i + 8;\n      if (source.slice(start, end) === '[CDATA[') {\n        return cdata;\n      }\n      if (/doctype/i.test(source.slice(start, end))) {\n        return neutral;\n      }\n    }\n\n    if (char === '/') {\n      return closingTag;\n    }\n\n    const tag = getName();\n    const props: { [prop: string]: Styles | string | undefined } = {};\n    const element: XmlAST = {\n      tag,\n      props,\n      children: [],\n      parent: currentElement,\n      Tag: tags[tag] || missingTag,\n    };\n\n    if (currentElement) {\n      children.push(element);\n    } else {\n      root = element;\n    }\n\n    getAttributes(props);\n\n    const { style } = props;\n    if (typeof style === 'string') {\n      element.styles = style;\n      props.style = getStyle(style);\n    }\n\n    let selfClosing = false;\n\n    if (source[i] === '/') {\n      i += 1;\n      selfClosing = true;\n    }\n\n    if (source[i] !== '>') {\n      error('Expected >');\n    }\n\n    if (!selfClosing) {\n      currentElement = element;\n      ({ children } = element);\n      stack.push(element);\n    }\n\n    return neutral;\n  }\n\n  function comment() {\n    const index = source.indexOf('-->', i);\n    if (!~index) {\n      error('expected -->');\n    }\n\n    i = index + 2;\n    return neutral;\n  }\n\n  function cdata() {\n    const index = source.indexOf(']]>', i);\n    if (!~index) {\n      error('expected ]]>');\n    }\n\n    children.push(source.slice(i + 7, index));\n\n    i = index + 2;\n    return neutral;\n  }\n\n  function closingTag() {\n    const tag = getName();\n\n    if (!tag) {\n      error('Expected tag name');\n    }\n\n    if (currentElement && tag !== currentElement.tag) {\n      error(\n        `Expected closing tag </${tag}> to match opening tag <${currentElement.tag}>`,\n      );\n    }\n\n    if (source[i] !== '>') {\n      error('Expected >');\n    }\n\n    stack.pop();\n    currentElement = stack[stack.length - 1];\n    if (currentElement) {\n      ({ children } = currentElement);\n    }\n\n    return neutral;\n  }\n\n  function getName() {\n    let name = '';\n    let char;\n    while (i < length && validNameCharacters.test((char = source[i]))) {\n      name += char;\n      i += 1;\n    }\n\n    return name;\n  }\n\n  function getAttributes(props: {\n    [x: string]: Styles | string | number | boolean | undefined;\n    style?: string | Styles | undefined;\n  }) {\n    while (i < length) {\n      if (!whitespace.test(source[i])) {\n        return;\n      }\n      allowSpaces();\n\n      const name = getName();\n      if (!name) {\n        return;\n      }\n\n      let value: boolean | number | string = true;\n\n      allowSpaces();\n      if (source[i] === '=') {\n        i += 1;\n        allowSpaces();\n\n        value = getAttributeValue();\n        if (!isNaN(+value) && value.trim() !== '') {\n          value = +value;\n        }\n      }\n\n      props[camelCase(name)] = value;\n    }\n  }\n\n  function getAttributeValue(): string {\n    return quotemarks.test(source[i])\n      ? getQuotedAttributeValue()\n      : getUnquotedAttributeValue();\n  }\n\n  function getUnquotedAttributeValue() {\n    let value = '';\n    do {\n      const char = source[i];\n      if (char === ' ' || char === '>' || char === '/') {\n        return value;\n      }\n\n      value += char;\n      i += 1;\n    } while (i < length);\n\n    return value;\n  }\n\n  function getQuotedAttributeValue() {\n    const quotemark = source[i++];\n\n    let value = '';\n    let escaped = false;\n\n    while (i < length) {\n      const char = source[i++];\n      if (char === quotemark && !escaped) {\n        return value;\n      }\n\n      if (char === '\\\\' && !escaped) {\n        escaped = true;\n      }\n\n      value += escaped ? `\\\\${char}` : char;\n      escaped = false;\n    }\n\n    return value;\n  }\n\n  function allowSpaces() {\n    while (i < length && whitespace.test(source[i])) {\n      i += 1;\n    }\n  }\n\n  let i = 0;\n  while (i < length) {\n    if (!state) {\n      error('Unexpected character');\n    }\n    state = state();\n    i += 1;\n  }\n\n  if (state !== neutral) {\n    error('Unexpected end of input');\n  }\n\n  if (root) {\n    const xml: XmlAST = (middleware ? middleware(root) : root) || root;\n    const ast: (JSX.Element | string)[] = xml.children.map(astToReact);\n    const jsx: JsxAST = xml as JsxAST;\n    jsx.children = ast;\n    return jsx;\n  }\n\n  return null;\n}\n"]}