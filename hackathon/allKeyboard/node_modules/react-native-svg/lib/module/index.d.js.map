{"version":3,"sources":["index.d.ts"],"names":["Circle","ClipPath","Defs","Ellipse","G","ForeignObject","Image","Line","LinearGradient","Path","Pattern","Polygon","Polyline","RadialGradient","Rect","Stop","Svg","Symbol","TSpan","Text","TextPath","Use","EMaskUnits","Mask","MarkerUnits","Orient","Marker","SvgAst","SvgXml","SvgFromXml","SvgUri","SvgFromUri","SvgCss","SvgWithCss","SvgCssUri","SvgWithCssUri","inlineStyles"],"mappings":"qqBA8OO,GAAMA,CAAAA,MAAN,C,sBAMA,GAAMC,CAAAA,QAAN,C,0BAGA,GAAMC,CAAAA,IAAN,C,kBAUA,GAAMC,CAAAA,OAAN,C,wBAMA,GAAMC,CAAAA,CAAN,C,YASA,GAAMC,CAAAA,aAAN,C,oCAmBA,GAAMC,CAAAA,KAAN,C,oBAUA,GAAMC,CAAAA,IAAN,C,kBAYA,GAAMC,CAAAA,cAAN,C,sCAOA,GAAMC,CAAAA,IAAN,C,kBAeA,GAAMC,CAAAA,OAAN,C,wBAOA,GAAMC,CAAAA,OAAN,C,wBAOA,GAAMC,CAAAA,QAAN,C,0BAeA,GAAMC,CAAAA,cAAN,C,sCAYA,GAAMC,CAAAA,IAAN,C,kBAQA,GAAMC,CAAAA,IAAN,C,kBAaA,GAAMC,CAAAA,GAAN,C,6BAEQA,G,0BAQR,GAAMC,CAAAA,MAAN,C,sBAWA,GAAMC,CAAAA,KAAN,C,oBAsBA,GAAMC,CAAAA,IAAN,C,kBAWA,GAAMC,CAAAA,QAAN,C,0BAYA,GAAMC,CAAAA,GAAN,C,mBAGKC,CAAAA,U,yCAAAA,U,EAAAA,U,uCAAAA,U,+CAAAA,U,sBAAAA,U,MAmBL,GAAMC,CAAAA,IAAN,C,qBAGKC,CAAAA,W,2CAAAA,W,EAAAA,W,+BAAAA,W,0CAAAA,W,uBAAAA,W,SAKAC,CAAAA,M,iCAAAA,M,EAAAA,M,gBAAAA,M,+CAAAA,M,kBAAAA,M,MAgBL,GAAMC,CAAAA,MAAN,C,sBAgDA,GAAMC,CAAAA,MAAN,C,sBAEA,GAAMC,CAAAA,MAAN,C,sBACA,GAAMC,CAAAA,UAAN,C,8BAEA,GAAMC,CAAAA,MAAN,C,sBACA,GAAMC,CAAAA,UAAN,C,8BAEA,GAAMC,CAAAA,MAAN,C,sBACA,GAAMC,CAAAA,UAAN,C,8BAEA,GAAMC,CAAAA,SAAN,C,4BACA,GAAMC,CAAAA,aAAN,C,oCAEA,GAAMC,CAAAA,YAAN,C","sourcesContent":["import * as React from 'react';\nimport * as ReactNative from 'react-native';\nimport { GestureResponderEvent } from 'react-native';\n\n// Common props\nexport type NumberProp = string | number;\nexport type NumberArray = NumberProp[] | NumberProp;\n\nexport type FillRule = 'evenodd' | 'nonzero';\nexport type Units = 'userSpaceOnUse' | 'objectBoundingBox';\n\nexport type TextAnchor = 'start' | 'middle' | 'end';\nexport type FontStyle = 'normal' | 'italic' | 'oblique';\nexport type FontVariant = 'normal' | 'small-caps';\nexport type FontWeight =\n  | NumberProp\n  | 'normal'\n  | 'bold'\n  | 'bolder'\n  | 'lighter'\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\nexport type FontStretch =\n  | 'normal'\n  | 'wider'\n  | 'narrower'\n  | 'ultra-condensed'\n  | 'extra-condensed'\n  | 'condensed'\n  | 'semi-condensed'\n  | 'semi-expanded'\n  | 'expanded'\n  | 'extra-expanded'\n  | 'ultra-expanded';\nexport type TextDecoration =\n  | 'none'\n  | 'underline'\n  | 'overline'\n  | 'line-through'\n  | 'blink';\nexport type FontVariantLigatures = 'normal' | 'none';\nexport type AlignmentBaseline =\n  | 'baseline'\n  | 'text-bottom'\n  | 'alphabetic'\n  | 'ideographic'\n  | 'middle'\n  | 'central'\n  | 'mathematical'\n  | 'text-top'\n  | 'bottom'\n  | 'center'\n  | 'top'\n  | 'text-before-edge'\n  | 'text-after-edge'\n  | 'before-edge'\n  | 'after-edge'\n  | 'hanging';\nexport type BaselineShift =\n  | 'sub'\n  | 'super'\n  | 'baseline'\n  | ReadonlyArray<NumberProp>\n  | NumberProp;\nexport type LengthAdjust = 'spacing' | 'spacingAndGlyphs';\n\nexport type TextPathMethod = 'align' | 'stretch';\nexport type TextPathSpacing = 'auto' | 'exact';\nexport type TextPathMidLine = 'sharp' | 'smooth';\n\nexport type Linecap = 'butt' | 'square' | 'round';\nexport type Linejoin = 'miter' | 'bevel' | 'round';\n\nexport interface TouchableProps {\n  disabled?: boolean;\n  onPress?: (event: GestureResponderEvent) => void;\n  onPressIn?: (event: GestureResponderEvent) => void;\n  onPressOut?: (event: GestureResponderEvent) => void;\n  onLongPress?: (event: GestureResponderEvent) => void;\n  delayPressIn?: number;\n  delayPressOut?: number;\n  delayLongPress?: number;\n}\n\nexport interface ResponderProps extends ReactNative.GestureResponderHandlers {\n  pointerEvents?: 'box-none' | 'none' | 'box-only' | 'auto';\n}\n\n// rgba values inside range 0 to 1 inclusive\n// rgbaArray = [r, g, b, a]\nexport type rgbaArray = ReadonlyArray<number>;\n\n// argb values inside range 0x00 to 0xff inclusive\n// int32ARGBColor = 0xaarrggbb\nexport type int32ARGBColor = number;\n\nexport type Color = int32ARGBColor | rgbaArray | string;\n\nexport interface FillProps {\n  fill?: Color;\n  fillOpacity?: NumberProp;\n  fillRule?: FillRule;\n}\n\nexport interface ClipProps {\n  clipRule?: FillRule;\n  clipPath?: string;\n}\n\nexport interface VectorEffectProps {\n  vectorEffect?:\n    | 'none'\n    | 'non-scaling-stroke'\n    | 'nonScalingStroke'\n    | 'default'\n    | 'inherit'\n    | 'uri';\n}\n\nexport interface DefinitionProps {\n  id?: string;\n}\n\nexport interface StrokeProps {\n  stroke?: Color;\n  strokeWidth?: NumberProp;\n  strokeOpacity?: NumberProp;\n  strokeDasharray?: ReadonlyArray<NumberProp> | NumberProp;\n  strokeDashoffset?: NumberProp;\n  strokeLinecap?: Linecap;\n  strokeLinejoin?: Linejoin;\n  strokeMiterlimit?: NumberProp;\n}\n\nexport interface FontObject {\n  fontStyle?: FontStyle;\n  fontVariant?: FontVariant;\n  fontWeight?: FontWeight;\n  fontStretch?: FontStretch;\n  fontSize?: NumberProp;\n  fontFamily?: string;\n  textAnchor?: TextAnchor;\n  textDecoration?: TextDecoration;\n  letterSpacing?: NumberProp;\n  wordSpacing?: NumberProp;\n  kerning?: NumberProp;\n  fontFeatureSettings?: string;\n  fontVariantLigatures?: FontVariantLigatures;\n  fontVariationSettings?: string;\n}\n\nexport interface FontProps extends FontObject {\n  font?: FontObject;\n}\n\nexport interface TransformObject {\n  translate?: NumberArray;\n  translateX?: NumberProp;\n  translateY?: NumberProp;\n  origin?: NumberArray;\n  originX?: NumberProp;\n  originY?: NumberProp;\n  scale?: NumberArray;\n  scaleX?: NumberProp;\n  scaleY?: NumberProp;\n  skew?: NumberArray;\n  skewX?: NumberProp;\n  skewY?: NumberProp;\n  rotation?: NumberProp;\n  x?: NumberArray;\n  y?: NumberArray;\n}\n\n/*\n\n  ColumnMajorTransformMatrix\n\n  [a, b, c, d, tx, ty]\n\n  This matrix can be visualized as:\n\n  ╔═      ═╗\n  ║ a c tx ║\n  ║ b d ty ║\n  ║ 0 0 1  ║\n  ╚═      ═╝\n\n*/\nexport type ColumnMajorTransformMatrix = [\n  number,\n  number,\n  number,\n  number,\n  number,\n  number,\n];\n\nexport interface TransformProps extends TransformObject {\n  transform?: ColumnMajorTransformMatrix | string | TransformObject;\n}\n\nexport interface CommonMaskProps {\n  mask?: string;\n}\n\nexport interface CommonMarkerProps {\n  marker?: string;\n  markerStart?: string;\n  markerMid?: string;\n  markerEnd?: string;\n}\n\nexport interface CommonPathProps\n  extends FillProps,\n    StrokeProps,\n    ClipProps,\n    TransformProps,\n    VectorEffectProps,\n    ResponderProps,\n    TouchableProps,\n    DefinitionProps,\n    CommonMarkerProps,\n    CommonMaskProps {}\n\n// Element props\nexport interface CircleProps extends CommonPathProps {\n  cx?: NumberProp;\n  cy?: NumberProp;\n  opacity?: NumberProp;\n  r?: NumberProp;\n}\nexport const Circle: React.ComponentClass<CircleProps>;\nexport type Circle = React.ComponentClass<CircleProps>;\n\nexport interface ClipPathProps {\n  id?: string;\n}\nexport const ClipPath: React.ComponentClass<ClipPathProps>;\nexport type ClipPath = React.ComponentClass<ClipPathProps>;\n\nexport const Defs: React.ComponentClass<{}>;\nexport type Defs = React.ComponentClass<{}>;\n\nexport interface EllipseProps extends CommonPathProps {\n  cx?: NumberProp;\n  cy?: NumberProp;\n  opacity?: NumberProp;\n  rx?: NumberProp;\n  ry?: NumberProp;\n}\nexport const Ellipse: React.ComponentClass<EllipseProps>;\nexport type Ellipse = React.ComponentClass<EllipseProps>;\n\nexport interface GProps extends CommonPathProps {\n  opacity?: NumberProp;\n}\nexport const G: React.ComponentClass<GProps>;\nexport type G = React.ComponentClass<GProps>;\n\nexport interface ForeignObjectProps {\n  x?: NumberProp;\n  y?: NumberProp;\n  width?: NumberProp;\n  height?: NumberProp;\n}\nexport const ForeignObject: React.ComponentClass<ForeignObjectProps>;\nexport type ForeignObject = React.ComponentClass<ForeignObjectProps>;\n\nexport interface ImageProps\n  extends ResponderProps,\n    CommonMaskProps,\n    ClipProps,\n    TouchableProps {\n  x?: NumberProp;\n  y?: NumberProp;\n  width?: NumberProp;\n  height?: NumberProp;\n  xlinkHref?: ReactNative.ImageProps['source'];\n  href?: ReactNative.ImageProps['source'];\n  preserveAspectRatio?: string;\n  opacity?: NumberProp;\n  clipPath?: string;\n  id?: string;\n}\nexport const Image: React.ComponentClass<ImageProps>;\nexport type Image = React.ComponentClass<ImageProps>;\n\nexport interface LineProps extends CommonPathProps {\n  opacity?: NumberProp;\n  x1?: NumberProp;\n  x2?: NumberProp;\n  y1?: NumberProp;\n  y2?: NumberProp;\n}\nexport const Line: React.ComponentClass<LineProps>;\nexport type Line = React.ComponentClass<LineProps>;\n\nexport interface LinearGradientProps {\n  x1?: NumberProp;\n  x2?: NumberProp;\n  y1?: NumberProp;\n  y2?: NumberProp;\n  gradientUnits?: Units;\n  gradientTransform?: ColumnMajorTransformMatrix | string;\n  id?: string;\n}\nexport const LinearGradient: React.ComponentClass<LinearGradientProps>;\nexport type LinearGradient = React.ComponentClass<LinearGradientProps>;\n\nexport interface PathProps extends CommonPathProps {\n  d?: string;\n  opacity?: NumberProp;\n}\nexport const Path: React.ComponentClass<PathProps>;\nexport type Path = React.ComponentClass<PathProps>;\n\nexport interface PatternProps {\n  id?: string;\n  x?: NumberProp;\n  y?: NumberProp;\n  width?: NumberProp;\n  height?: NumberProp;\n  patternTransform?: ColumnMajorTransformMatrix | string;\n  patternUnits?: Units;\n  patternContentUnits?: Units;\n  viewBox?: string;\n  preserveAspectRatio?: string;\n}\nexport const Pattern: React.ComponentClass<PatternProps>;\nexport type Pattern = React.ComponentClass<PatternProps>;\n\nexport interface PolygonProps extends CommonPathProps {\n  opacity?: NumberProp;\n  points?: string | ReadonlyArray<NumberProp>;\n}\nexport const Polygon: React.ComponentClass<PolygonProps>;\nexport type Polygon = React.ComponentClass<PolygonProps>;\n\nexport interface PolylineProps extends CommonPathProps {\n  opacity?: NumberProp;\n  points?: string | ReadonlyArray<NumberProp>;\n}\nexport const Polyline: React.ComponentClass<PolylineProps>;\nexport type Polyline = React.ComponentClass<PolylineProps>;\n\nexport interface RadialGradientProps {\n  fx?: NumberProp;\n  fy?: NumberProp;\n  rx?: NumberProp;\n  ry?: NumberProp;\n  cx?: NumberProp;\n  cy?: NumberProp;\n  r?: NumberProp;\n  gradientUnits?: Units;\n  gradientTransform?: ColumnMajorTransformMatrix | string;\n  id?: string;\n}\nexport const RadialGradient: React.ComponentClass<RadialGradientProps>;\nexport type RadialGradient = React.ComponentClass<RadialGradientProps>;\n\nexport interface RectProps extends CommonPathProps {\n  x?: NumberProp;\n  y?: NumberProp;\n  width?: NumberProp;\n  height?: NumberProp;\n  rx?: NumberProp;\n  ry?: NumberProp;\n  opacity?: NumberProp;\n}\nexport const Rect: React.ComponentClass<RectProps>;\nexport type Rect = React.ComponentClass<RectProps>;\n\nexport interface StopProps {\n  stopColor?: Color;\n  stopOpacity?: NumberProp;\n  offset?: NumberProp;\n}\nexport const Stop: React.ComponentClass<StopProps>;\nexport type Stop = React.ComponentClass<StopProps>;\n\nexport interface SvgProps extends GProps, ReactNative.ViewProperties {\n  width?: NumberProp;\n  height?: NumberProp;\n  viewBox?: string;\n  preserveAspectRatio?: string;\n  color?: Color;\n  title?: string;\n}\n\n// Svg is both regular and default exported\nexport const Svg: React.ComponentClass<SvgProps>;\nexport type Svg = React.ComponentClass<SvgProps>;\nexport default Svg;\n\nexport interface SymbolProps {\n  id?: string;\n  viewBox?: string;\n  preserveAspectRatio?: string;\n  opacity?: NumberProp;\n}\nexport const Symbol: React.ComponentClass<SymbolProps>;\nexport type Symbol = React.ComponentClass<SymbolProps>;\n\nexport interface TSpanProps extends CommonPathProps, FontProps {\n  x?: NumberArray;\n  y?: NumberArray;\n  dx?: NumberArray;\n  dy?: NumberArray;\n  rotate?: NumberArray;\n  inlineSize?: NumberProp;\n}\nexport const TSpan: React.ComponentClass<TSpanProps>;\nexport type TSpan = React.ComponentClass<TSpanProps>;\n\nexport interface TextSpecificProps extends CommonPathProps, FontProps {\n  alignmentBaseline?: AlignmentBaseline;\n  baselineShift?: BaselineShift;\n  verticalAlign?: NumberProp;\n  lengthAdjust?: LengthAdjust;\n  textLength?: NumberProp;\n  fontData?: null | { [name: string]: unknown };\n  fontFeatureSettings?: string;\n}\n\nexport interface TextProps extends TextSpecificProps {\n  x?: NumberArray;\n  y?: NumberArray;\n  dx?: NumberArray;\n  dy?: NumberArray;\n  rotate?: NumberArray;\n  opacity?: NumberProp;\n  inlineSize?: NumberProp;\n}\nexport const Text: React.ComponentClass<TextProps>;\nexport type Text = React.ComponentClass<TextProps>;\n\nexport interface TextPathProps extends TextSpecificProps {\n  xlinkHref?: string;\n  href?: string;\n  startOffset?: NumberProp;\n  method?: TextPathMethod;\n  spacing?: TextPathSpacing;\n  midLine?: TextPathMidLine;\n}\nexport const TextPath: React.ComponentClass<TextPathProps>;\nexport type TextPath = React.ComponentClass<TextPathProps>;\n\nexport interface UseProps extends CommonPathProps {\n  xlinkHref?: string;\n  href?: string;\n  width?: NumberProp;\n  height?: NumberProp;\n  x?: NumberProp;\n  y?: NumberProp;\n  opacity?: NumberProp;\n}\nexport const Use: React.ComponentClass<UseProps>;\nexport type Use = React.ComponentClass<UseProps>;\n\nexport enum EMaskUnits {\n  USER_SPACE_ON_USE = 'userSpaceOnUse',\n  OBJECT_BOUNDING_BOX = 'objectBoundingBox',\n}\n\nexport type TMaskUnits =\n  | EMaskUnits.USER_SPACE_ON_USE\n  | EMaskUnits.OBJECT_BOUNDING_BOX;\n\nexport interface MaskProps extends CommonPathProps {\n  id?: string;\n  x?: NumberProp;\n  y?: NumberProp;\n  width?: NumberProp;\n  height?: NumberProp;\n  maskTransform?: ColumnMajorTransformMatrix | string;\n  maskUnits?: TMaskUnits;\n  maskContentUnits?: TMaskUnits;\n}\nexport const Mask: React.ComponentClass<MaskProps>;\nexport type Mask = React.ComponentClass<MaskProps>;\n\nexport enum MarkerUnits {\n  STROKE_WIDTH = 'strokeWidth',\n  USER_SPACE_ON_USE = 'userSpaceOnUse',\n}\n\nexport enum Orient {\n  AUTO = 'auto',\n  AUTO_START_REVERSE = 'auto-start-reverse',\n}\n\nexport interface MarkerProps {\n  id?: string;\n  viewBox?: string;\n  preserveAspectRatio?: string;\n  refX?: NumberProp;\n  refY?: NumberProp;\n  markerWidth?: NumberProp;\n  markerHeight?: NumberProp;\n  markerUnits?: MarkerUnits;\n  orient?: Orient | NumberProp;\n}\nexport const Marker: React.ComponentClass<MarkerProps>;\nexport type Marker = React.ComponentClass<MarkerProps>;\n\nexport type Styles = { [property: string]: string };\n\nexport interface AST {\n  tag: string;\n  style?: Styles;\n  styles?: string;\n  priority?: Map<string, boolean | undefined>;\n  parent: AST | null;\n  children: (AST | string)[] | (JSX.Element | string)[];\n  props: {\n    [prop: string]: Styles | string | undefined;\n  };\n  Tag: React.ComponentType;\n}\n\nexport interface XmlAST extends AST {\n  children: (XmlAST | string)[];\n  parent: XmlAST | null;\n}\n\nexport interface JsxAST extends AST {\n  children: (JSX.Element | string)[];\n}\n\nexport interface UriProps extends SvgProps {\n  uri: string | null;\n  override?: SvgProps;\n}\nexport type UriState = { xml: string | null };\n\nexport interface XmlProps extends SvgProps {\n  xml: string | null;\n  override?: SvgProps;\n}\nexport type XmlState = { ast: JsxAST | null };\n\nexport interface AstProps extends SvgProps {\n  ast: JsxAST | null;\n  override?: SvgProps;\n}\n\nexport type Middleware = (ast: XmlAST) => XmlAST;\n\nexport function parse(source: string, middleware?: Middleware): JsxAST | null;\n\nexport const SvgAst: React.FunctionComponent<AstProps>;\n\nexport const SvgXml: React.FunctionComponent<XmlProps>;\nexport const SvgFromXml: React.ComponentClass<XmlProps, XmlState>;\n\nexport const SvgUri: React.FunctionComponent<UriProps>;\nexport const SvgFromUri: React.ComponentClass<UriProps, UriState>;\n\nexport const SvgCss: React.FunctionComponent<XmlProps>;\nexport const SvgWithCss: React.ComponentClass<XmlProps, XmlState>;\n\nexport const SvgCssUri: React.FunctionComponent<UriProps>;\nexport const SvgWithCssUri: React.ComponentClass<UriProps, UriState>;\n\nexport const inlineStyles: Middleware;\n"]}