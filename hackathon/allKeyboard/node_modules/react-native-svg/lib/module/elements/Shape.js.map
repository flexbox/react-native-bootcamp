{"version":3,"sources":["Shape.tsx"],"names":["RNSVGRenderableManager","NativeModules","multiply_matrices","l","r","al","a","bl","b","cl","c","dl","d","el","e","fl","f","ar","br","cr","dr","er","fr","invert","n","deg2rad","Math","PI","SVGMatrix","matrix","secondMatrix","x","y","scaleFactor","scaleFactorX","scaleFactorY","angle","cos","sin","atan2","tan","matrixTransform","point","SVGPoint","ownerSVGElement","createSVGPoint","createSVGMatrix","Shape","props","context","instance","root","setNativeProps","options","fill","stroke","markers","clipped","handle","getBBox","getCTM","getScreenCTM","isPointInFill","isPointInStroke","getTotalLength","length","getPointAtLength","Component","prototype"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport SvgTouchableMixin from '../lib/SvgTouchableMixin';\nimport {\n  NativeModules,\n  findNodeHandle,\n  NativeMethodsMixinStatic,\n} from 'react-native';\nimport { TransformProps } from '../lib/extract/types';\nconst { RNSVGRenderableManager } = NativeModules;\n\nexport interface SVGBoundingBoxOptions {\n  fill?: boolean;\n  stroke?: boolean;\n  markers?: boolean;\n  clipped?: boolean;\n}\n\nexport interface DOMPointInit {\n  x?: number;\n  y?: number;\n  z?: number;\n  w?: number;\n}\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nexport interface SVGPoint extends Point {\n  constructor(point?: Point): SVGPoint;\n  matrixTransform(matrix: Matrix): SVGPoint;\n}\n\nexport interface Rect {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\nexport interface SVGRect extends Rect {}\n\nexport interface Matrix {\n  a: number;\n  b: number;\n  c: number;\n  d: number;\n  e: number;\n  f: number;\n}\n\nexport interface SVGMatrix extends Matrix {\n  constructor(matrix?: Matrix): SVGMatrix;\n  multiply(secondMatrix: Matrix): SVGMatrix;\n  inverse(): SVGMatrix;\n  translate(x: number, y: number): SVGMatrix;\n  scale(scaleFactor: number): SVGMatrix;\n  scaleNonUniform(scaleFactorX: number, scaleFactorY: number): SVGMatrix;\n  rotate(angle: number): SVGMatrix;\n  rotateFromVector(x: number, y: number): SVGMatrix;\n  flipX(): SVGMatrix;\n  flipY(): SVGMatrix;\n  skewX(angle: number): SVGMatrix;\n  skewY(angle: number): SVGMatrix;\n}\n\nexport function multiply_matrices(l: Matrix, r: Matrix): Matrix {\n  const { a: al, b: bl, c: cl, d: dl, e: el, f: fl } = l;\n  const { a: ar, b: br, c: cr, d: dr, e: er, f: fr } = r;\n\n  const a = al * ar + cl * br;\n  const c = al * cr + cl * dr;\n  const e = al * er + cl * fr + el;\n  const b = bl * ar + dl * br;\n  const d = bl * cr + dl * dr;\n  const f = bl * er + dl * fr + fl;\n\n  return { a, c, e, b, d, f };\n}\n\nexport function invert({ a, b, c, d, e, f }: Matrix): Matrix {\n  const n = a * d - b * c;\n  return {\n    a: d / n,\n    b: -b / n,\n    c: -c / n,\n    d: a / n,\n    e: (c * f - d * e) / n,\n    f: -(a * f - b * e) / n,\n  };\n}\n\nconst deg2rad = Math.PI / 180;\n\nexport class SVGMatrix implements SVGMatrix {\n  constructor(matrix?: Matrix) {\n    if (matrix) {\n      const { a, b, c, d, e, f } = matrix;\n      this.a = a;\n      this.b = b;\n      this.c = c;\n      this.d = d;\n      this.e = e;\n      this.f = f;\n    } else {\n      this.a = 1;\n      this.b = 0;\n      this.c = 0;\n      this.d = 1;\n      this.e = 0;\n      this.f = 0;\n    }\n  }\n  multiply(secondMatrix: Matrix): SVGMatrix {\n    return new SVGMatrix(multiply_matrices(this, secondMatrix));\n  }\n  inverse(): SVGMatrix {\n    return new SVGMatrix(invert(this));\n  }\n  translate(x: number, y: number): SVGMatrix {\n    return new SVGMatrix(\n      multiply_matrices(this, { a: 1, b: 0, c: 0, d: 1, e: x, f: y }),\n    );\n  }\n  scale(scaleFactor: number): SVGMatrix {\n    return new SVGMatrix(\n      multiply_matrices(this, {\n        a: scaleFactor,\n        b: 0,\n        c: 0,\n        d: scaleFactor,\n        e: 0,\n        f: 0,\n      }),\n    );\n  }\n  scaleNonUniform(scaleFactorX: number, scaleFactorY: number): SVGMatrix {\n    return new SVGMatrix(\n      multiply_matrices(this, {\n        a: scaleFactorX,\n        b: 0,\n        c: 0,\n        d: scaleFactorY,\n        e: 0,\n        f: 0,\n      }),\n    );\n  }\n  rotate(angle: number): SVGMatrix {\n    const cos = Math.cos(deg2rad * angle);\n    const sin = Math.sin(deg2rad * angle);\n    return new SVGMatrix(\n      multiply_matrices(this, { a: cos, b: sin, c: -sin, d: cos, e: 0, f: 0 }),\n    );\n  }\n  rotateFromVector(x: number, y: number): SVGMatrix {\n    const angle = Math.atan2(y, x);\n    const cos = Math.cos(deg2rad * angle);\n    const sin = Math.sin(deg2rad * angle);\n    return new SVGMatrix(\n      multiply_matrices(this, { a: cos, b: sin, c: -sin, d: cos, e: 0, f: 0 }),\n    );\n  }\n  flipX(): SVGMatrix {\n    return new SVGMatrix(\n      multiply_matrices(this, { a: -1, b: 0, c: 0, d: 1, e: 0, f: 0 }),\n    );\n  }\n  flipY(): SVGMatrix {\n    return new SVGMatrix(\n      multiply_matrices(this, { a: 1, b: 0, c: 0, d: -1, e: 0, f: 0 }),\n    );\n  }\n  skewX(angle: number): SVGMatrix {\n    return new SVGMatrix(\n      multiply_matrices(this, {\n        a: 1,\n        b: 0,\n        c: Math.tan(deg2rad * angle),\n        d: 1,\n        e: 0,\n        f: 0,\n      }),\n    );\n  }\n  skewY(angle: number): SVGMatrix {\n    return new SVGMatrix(\n      multiply_matrices(this, {\n        a: 1,\n        b: Math.tan(deg2rad * angle),\n        c: 0,\n        d: 1,\n        e: 0,\n        f: 0,\n      }),\n    );\n  }\n}\n\nexport function matrixTransform(matrix: Matrix, point: Point): Point {\n  const { a, b, c, d, e, f } = matrix;\n  const { x, y } = point;\n  return {\n    x: a * x + c * y + e,\n    y: b * x + d * y + f,\n  };\n}\n\nexport class SVGPoint implements SVGPoint {\n  constructor(point?: Point) {\n    if (point) {\n      const { x, y } = point;\n      this.x = x;\n      this.y = y;\n    } else {\n      this.x = 0;\n      this.y = 0;\n    }\n  }\n  matrixTransform(matrix: Matrix): SVGPoint {\n    return new SVGPoint(matrixTransform(matrix, this));\n  }\n}\n\nexport const ownerSVGElement = {\n  createSVGPoint(): SVGPoint {\n    return new SVGPoint();\n  },\n  createSVGMatrix(): SVGMatrix {\n    return new SVGMatrix();\n  },\n};\n\nexport default class Shape<P> extends Component<P> {\n  [x: string]: unknown;\n  root: (Shape<P> & NativeMethodsMixinStatic) | null = null;\n  constructor(props: P, context: {}) {\n    super(props, context);\n    SvgTouchableMixin(this);\n  }\n  refMethod: (\n    instance: (Shape<P> & NativeMethodsMixinStatic) | null,\n  ) => void = (instance: (Shape<P> & NativeMethodsMixinStatic) | null) => {\n    this.root = instance;\n  };\n  setNativeProps = (\n    props: Object & {\n      matrix?: [number, number, number, number, number, number];\n    } & TransformProps,\n  ) => {\n    this.root && this.root.setNativeProps(props);\n  };\n  /*\n   * The following native methods are experimental and likely broken in some\n   * ways. If you have a use case for these, please open an issue with a\n   * representative example / reproduction.\n   * */\n  getBBox = (options?: SVGBoundingBoxOptions): SVGRect => {\n    const { fill = true, stroke = true, markers = true, clipped = true } =\n      options || {};\n    const handle = findNodeHandle(this.root as Component);\n    return RNSVGRenderableManager.getBBox(handle, {\n      fill,\n      stroke,\n      markers,\n      clipped,\n    });\n  };\n  getCTM = (): SVGMatrix => {\n    const handle = findNodeHandle(this.root as Component);\n    return new SVGMatrix(RNSVGRenderableManager.getCTM(handle));\n  };\n  getScreenCTM = (): SVGMatrix => {\n    const handle = findNodeHandle(this.root as Component);\n    return new SVGMatrix(RNSVGRenderableManager.getScreenCTM(handle));\n  };\n  isPointInFill = (options: DOMPointInit): boolean => {\n    const handle = findNodeHandle(this.root as Component);\n    return RNSVGRenderableManager.isPointInFill(handle, options);\n  };\n  isPointInStroke = (options: DOMPointInit): boolean => {\n    const handle = findNodeHandle(this.root as Component);\n    return RNSVGRenderableManager.isPointInStroke(handle, options);\n  };\n  getTotalLength = (): number => {\n    const handle = findNodeHandle(this.root as Component);\n    return RNSVGRenderableManager.getTotalLength(handle);\n  };\n  getPointAtLength = (length: number): SVGPoint => {\n    const handle = findNodeHandle(this.root as Component);\n    return new SVGPoint(\n      RNSVGRenderableManager.getPointAtLength(handle, { length }),\n    );\n  };\n}\nShape.prototype.ownerSVGElement = ownerSVGElement;\n"]}