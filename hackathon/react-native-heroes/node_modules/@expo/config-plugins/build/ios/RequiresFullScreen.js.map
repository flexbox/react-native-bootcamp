{"version":3,"sources":["../../src/ios/RequiresFullScreen.ts"],"names":["withRequiresFullScreen","setRequiresFullScreen","getRequiresFullScreen","config","ios","hasOwnProperty","requireFullScreen","iPadInterfaceKey","requiredIPadInterface","isStringArray","value","Array","isArray","every","hasMinimumOrientations","masks","mask","includes","resolveExistingIpadInterfaceOrientations","interfaceOrientations","length","existingList","join","infoPlist","requiresFullScreen","existing","Set","concat","UIRequiresFullScreen"],"mappings":";;;;;;;;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGO,MAAMA,sBAAsB,GAAG,yCACpCC,qBADoC,EAEpC,wBAFoC,CAA/B,C,CAKP;AACA;;;;AACO,SAASC,qBAAT,CAA+BC,MAA/B,EAA+E;AAAA;;AACpF;AACA;AACA,qBAAIA,MAAM,CAACC,GAAX,wCAAI,YAAYC,cAAZ,CAA2B,mBAA3B,CAAJ,EAAqD;AACnD,WAAO,CAAC,CAACF,MAAM,CAACC,GAAP,CAAWE,iBAApB;AACD,GAFD,MAEO;AACL;AACA,QACE,+BAAcH,MAAd,EAAsB,QAAtB,CADF,CAEE;AACA;AAHF,MAIE;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD;AACF;;AAED,MAAMI,gBAAgB,GAAG,uCAAzB;AAEA,MAAMC,qBAAqB,GAAG,CAC5B,gCAD4B,EAE5B,0CAF4B,EAG5B,qCAH4B,EAI5B,sCAJ4B,CAA9B;;AAOA,SAASC,aAAT,CAAuBC,KAAvB,EAAsD;AACpD,SAAOC,KAAK,CAACC,OAAN,CAAcF,KAAd,KAAwBA,KAAK,CAACG,KAAN,CAAYH,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAAtC,CAA/B;AACD;;AAED,SAASI,sBAAT,CAAgCC,KAAhC,EAA0D;AACxD,SAAOP,qBAAqB,CAACK,KAAtB,CAA4BG,IAAI,IAAID,KAAK,CAACE,QAAN,CAAeD,IAAf,CAApC,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,wCAAT,CAAkDC,qBAAlD,EAAwF;AACtF,OACE;AACAV,EAAAA,aAAa,CAACU,qBAAD,CAAb,IACA;AACAA,EAAAA,qBAAqB,CAACC,MAFtB,IAGA;AACA,GAACN,sBAAsB,CAACK,qBAAD,CANzB,EAOE;AACA,UAAME,YAAY,GAAGF,qBAAqB,CAAEG,IAAvB,CAA4B,IAA5B,CAArB;AACA,mCACE,uBADF,EAEG,oCAAmCf,gBAAiB,wMAAuMc,YAAa,EAF3Q;AAIA,WAAOF,qBAAP;AACD;;AACD,SAAO,EAAP;AACD,C,CAED;;;AACO,SAASlB,qBAAT,CACLE,MADK,EAELoB,SAFK,EAGM;AACX,QAAMC,kBAAkB,GAAGtB,qBAAqB,CAACC,MAAD,CAAhD;;AACA,MAAI,CAACqB,kBAAL,EAAyB;AACvB,UAAMC,QAAQ,GAAGP,wCAAwC,CAACK,SAAS,CAAChB,gBAAD,CAAV,CAAzD,CADuB,CAGvB;AACA;AACA;AAEA;;AACAgB,IAAAA,SAAS,CAAChB,gBAAD,CAAT,GAA8B,CAAC,GAAG,IAAImB,GAAJ,CAAQD,QAAQ,CAACE,MAAT,CAAgBnB,qBAAhB,CAAR,CAAJ,CAA9B;AACD;;AAED,SAAO,EACL,GAAGe,SADE;AAELK,IAAAA,oBAAoB,EAAEJ;AAFjB,GAAP;AAID","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { createInfoPlistPlugin } from '../plugins/ios-plugins';\nimport { gteSdkVersion } from '../utils/versions';\nimport { addWarningIOS } from '../utils/warnings';\nimport { InfoPlist } from './IosConfig.types';\n\nexport const withRequiresFullScreen = createInfoPlistPlugin(\n  setRequiresFullScreen,\n  'withRequiresFullScreen'\n);\n\n// NOTES: This is defaulted to `true` for now to match the behavior prior to SDK\n// 34, but will change to `false` in SDK +43.\nexport function getRequiresFullScreen(config: Pick<ExpoConfig, 'ios' | 'sdkVersion'>) {\n  // Yes, the property is called ios.requireFullScreen, without the s - not \"requires\"\n  // This is confusing indeed because the actual property name does have the s\n  if (config.ios?.hasOwnProperty('requireFullScreen')) {\n    return !!config.ios.requireFullScreen;\n  } else {\n    // In SDK 43, the `requireFullScreen` default has been changed to false.\n    if (\n      gteSdkVersion(config, '43.0.0')\n      // TODO: Uncomment after SDK 43 is released.\n      // || !config.sdkVersion\n    ) {\n      return false;\n    }\n    return true;\n  }\n}\n\nconst iPadInterfaceKey = 'UISupportedInterfaceOrientations~ipad';\n\nconst requiredIPadInterface = [\n  'UIInterfaceOrientationPortrait',\n  'UIInterfaceOrientationPortraitUpsideDown',\n  'UIInterfaceOrientationLandscapeLeft',\n  'UIInterfaceOrientationLandscapeRight',\n];\n\nfunction isStringArray(value: any): value is string[] {\n  return Array.isArray(value) && value.every(value => typeof value === 'string');\n}\n\nfunction hasMinimumOrientations(masks: string[]): boolean {\n  return requiredIPadInterface.every(mask => masks.includes(mask));\n}\n\n/**\n * Require full screen being disabled requires all ipad interfaces to to be added,\n * otherwise submissions to the iOS App Store will fail.\n *\n * ERROR ITMS-90474: \"Invalid Bundle. iPad Multitasking support requires these orientations: 'UIInterfaceOrientationPortrait,UIInterfaceOrientationPortraitUpsideDown,UIInterfaceOrientationLandscapeLeft,UIInterfaceOrientationLandscapeRight'. Found 'UIInterfaceOrientationPortrait,UIInterfaceOrientationPortraitUpsideDown' in bundle 'com.bacon.app'.\"\n *\n * @param interfaceOrientations\n * @returns\n */\nfunction resolveExistingIpadInterfaceOrientations(interfaceOrientations: any): string[] {\n  if (\n    // Ensure type.\n    isStringArray(interfaceOrientations) &&\n    // Don't warn if it's an empty array, this is invalid regardless.\n    interfaceOrientations.length &&\n    // Check if the minimum requirements are met.\n    !hasMinimumOrientations(interfaceOrientations)\n  ) {\n    const existingList = interfaceOrientations!.join(', ');\n    addWarningIOS(\n      'ios.requireFullScreen',\n      `iPad multitasking requires all \\`${iPadInterfaceKey}\\` orientations to be defined in the Info.plist. The Info.plist currently defines values that are incompatible with multitasking, these will be overwritten to prevent submission failure. Existing: ${existingList}`\n    );\n    return interfaceOrientations;\n  }\n  return [];\n}\n\n// Whether requires full screen on iPad\nexport function setRequiresFullScreen(\n  config: Pick<ExpoConfig, 'ios'>,\n  infoPlist: InfoPlist\n): InfoPlist {\n  const requiresFullScreen = getRequiresFullScreen(config);\n  if (!requiresFullScreen) {\n    const existing = resolveExistingIpadInterfaceOrientations(infoPlist[iPadInterfaceKey]);\n\n    // There currently exists no mechanism to safely undo this feature besides `expo prebuild --clear`,\n    // this seems ok though because anyone using `UISupportedInterfaceOrientations~ipad` probably\n    // wants them to be defined to this value anyways. This is also the default value used in the Xcode iOS template.\n\n    // Merge any previous interfaces with the required interfaces.\n    infoPlist[iPadInterfaceKey] = [...new Set(existing.concat(requiredIPadInterface))];\n  }\n\n  return {\n    ...infoPlist,\n    UIRequiresFullScreen: requiresFullScreen,\n  };\n}\n"],"file":"RequiresFullScreen.js"}