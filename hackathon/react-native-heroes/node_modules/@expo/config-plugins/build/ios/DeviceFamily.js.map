{"version":3,"sources":["../../src/ios/DeviceFamily.ts"],"names":["withDeviceFamily","config","modResults","setDeviceFamily","project","getSupportsTablet","ios","supportsTablet","getIsTabletOnly","isTabletOnly","getDeviceFamilies","formatDeviceFamilies","deviceFamilies","join","configurations","pbxXCBuildConfigurationSection","buildSettings","Object","values","PRODUCT_NAME","TARGETED_DEVICE_FAMILY"],"mappings":";;;;;;;;;;;;AAIA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEO,MAAMA,gBAA8B,GAAGC,MAAM,IAAI;AACtD,SAAO,oCAAiBA,MAAjB,EAAyB,MAAMA,MAAN,IAAgB;AAC9CA,IAAAA,MAAM,CAACC,UAAP,GAAoB,MAAMC,eAAe,CAACF,MAAD,EAAS;AAChDG,MAAAA,OAAO,EAAEH,MAAM,CAACC;AADgC,KAAT,CAAzC;AAGA,WAAOD,MAAP;AACD,GALM,CAAP;AAMD,CAPM;;;;AASA,SAASI,iBAAT,CAA2BJ,MAA3B,EAAqE;AAAA;;AAC1E,SAAO,CAAC,iBAACA,MAAM,CAACK,GAAR,wCAAC,YAAYC,cAAb,CAAR;AACD;;AAEM,SAASC,eAAT,CAAyBP,MAAzB,EAAmE;AAAA;;AACxE,SAAO,CAAC,EAACA,MAAD,aAACA,MAAD,+BAACA,MAAM,CAAEK,GAAT,yCAAC,aAAaG,YAAd,CAAR;AACD;;AAEM,SAASC,iBAAT,CAA2BT,MAA3B,EAAsE;AAAA;;AAC3E,QAAMM,cAAc,GAAGF,iBAAiB,CAACJ,MAAD,CAAxC;AACA,QAAMQ,YAAY,GAAGD,eAAe,CAACP,MAAD,CAApC;;AAEA,MAAIQ,YAAY,IAAI,iBAAAR,MAAM,CAACK,GAAP,8DAAYC,cAAZ,MAA+B,KAAnD,EAA0D;AACxD,mCACE,oBADF,EAEG,2HAFH;AAID,GAT0E,CAW3E;;;AACA,MAAIE,YAAJ,EAAkB;AAChB,WAAO,CAAC,CAAD,CAAP;AACD,GAFD,MAEO,IAAIF,cAAJ,EAAoB;AACzB,WAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;AACD,GAFM,MAEA;AACL;AACA,WAAO,CAAC,CAAD,CAAP;AACD;AACF;AAED;AACA;AACA;AACA;AACA;;;AACO,SAASI,oBAAT,CAA8BC,cAA9B,EAAgE;AACrE,SAAQ,IAAGA,cAAc,CAACC,IAAf,CAAoB,GAApB,CAAyB,GAApC;AACD;AAED;AACA;AACA;;;AACO,SAASV,eAAT,CACLF,MADK,EAEL;AAAEG,EAAAA;AAAF,CAFK,EAGS;AACd,QAAMQ,cAAc,GAAGD,oBAAoB,CAACD,iBAAiB,CAACT,MAAD,CAAlB,CAA3C;AAEA,QAAMa,cAAc,GAAGV,OAAO,CAACW,8BAAR,EAAvB,CAHc,CAId;;AACA,OAAK,MAAM;AAAEC,IAAAA;AAAF,GAAX,IAAgCC,MAAM,CAACC,MAAP,CAAcJ,cAAc,IAAI,EAAhC,CAAhC,EAAqE;AACnE;AACA;AACA,QAAI,QAAOE,aAAP,aAAOA,aAAP,uBAAOA,aAAa,CAAEG,YAAtB,MAAuC,WAA3C,EAAwD;AACtDH,MAAAA,aAAa,CAACI,sBAAd,GAAuCR,cAAvC;AACD;AACF;;AAED,SAAOR,OAAP;AACD","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\nimport { XcodeProject } from 'xcode';\n\nimport { ConfigPlugin } from '../Plugin.types';\nimport { withXcodeProject } from '../plugins/ios-plugins';\nimport { addWarningIOS } from '../utils/warnings';\n\nexport const withDeviceFamily: ConfigPlugin = config => {\n  return withXcodeProject(config, async config => {\n    config.modResults = await setDeviceFamily(config, {\n      project: config.modResults,\n    });\n    return config;\n  });\n};\n\nexport function getSupportsTablet(config: Pick<ExpoConfig, 'ios'>): boolean {\n  return !!config.ios?.supportsTablet;\n}\n\nexport function getIsTabletOnly(config: Pick<ExpoConfig, 'ios'>): boolean {\n  return !!config?.ios?.isTabletOnly;\n}\n\nexport function getDeviceFamilies(config: Pick<ExpoConfig, 'ios'>): number[] {\n  const supportsTablet = getSupportsTablet(config);\n  const isTabletOnly = getIsTabletOnly(config);\n\n  if (isTabletOnly && config.ios?.supportsTablet === false) {\n    addWarningIOS(\n      'ios.supportsTablet',\n      `Found contradictory values: \\`{ ios: { isTabletOnly: true, supportsTablet: false } }\\`. Using \\`{ isTabletOnly: true }\\`.`\n    );\n  }\n\n  // 1 is iPhone, 2 is iPad\n  if (isTabletOnly) {\n    return [2];\n  } else if (supportsTablet) {\n    return [1, 2];\n  } else {\n    // is iPhone only\n    return [1];\n  }\n}\n\n/**\n * Wrapping the families in double quotes is the only way to set a value with a comma in it.\n *\n * @param deviceFamilies\n */\nexport function formatDeviceFamilies(deviceFamilies: number[]): string {\n  return `\"${deviceFamilies.join(',')}\"`;\n}\n\n/**\n * Add to pbxproj under TARGETED_DEVICE_FAMILY\n */\nexport function setDeviceFamily(\n  config: Pick<ExpoConfig, 'ios'>,\n  { project }: { project: XcodeProject }\n): XcodeProject {\n  const deviceFamilies = formatDeviceFamilies(getDeviceFamilies(config));\n\n  const configurations = project.pbxXCBuildConfigurationSection();\n  // @ts-ignore\n  for (const { buildSettings } of Object.values(configurations || {})) {\n    // Guessing that this is the best way to emulate Xcode.\n    // Using `project.addToBuildSettings` modifies too many targets.\n    if (typeof buildSettings?.PRODUCT_NAME !== 'undefined') {\n      buildSettings.TARGETED_DEVICE_FAMILY = deviceFamilies;\n    }\n  }\n\n  return project;\n}\n"],"file":"DeviceFamily.js"}