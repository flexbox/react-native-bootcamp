{"version":3,"sources":["../../src/android/WindowSoftInputMode.ts"],"names":["ANDROID_WINDOW_SOFT_INPUT_MODE","MAPPING","pan","resize","withWindowSoftInputMode","config","modResults","setWindowSoftInputModeMode","androidManifest","app","$","getWindowSoftInputModeMode","value","android","softwareKeyboardLayoutMode"],"mappings":";;;;;;;;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA,MAAMA,8BAA8B,GAAG,6BAAvC;AAEA,MAAMC,OAA+B,GAAG;AACtCC,EAAAA,GAAG,EAAE,WADiC;AAEtCC,EAAAA,MAAM,EAAE;AAF8B,CAAxC;;AAKO,MAAMC,uBAAqC,GAAGC,MAAM,IAAI;AAC7D,SAAO,2CAAoBA,MAApB,EAA4B,MAAMA,MAAN,IAAgB;AACjDA,IAAAA,MAAM,CAACC,UAAP,GAAoBC,0BAA0B,CAACF,MAAD,EAASA,MAAM,CAACC,UAAhB,CAA9C;AACA,WAAOD,MAAP;AACD,GAHM,CAAP;AAID,CALM;;;;AAOA,SAASE,0BAAT,CACLF,MADK,EAELG,eAFK,EAGL;AACA,QAAMC,GAAG,GAAG,wCAAuBD,eAAvB,CAAZ;AACAC,EAAAA,GAAG,CAACC,CAAJ,CAAMV,8BAAN,IAAwCW,0BAA0B,CAACN,MAAD,CAAlE;AACA,SAAOG,eAAP;AACD;;AAEM,SAASG,0BAAT,CAAoCN,MAApC,EAAyE;AAAA;;AAC9E,QAAMO,KAAK,sBAAGP,MAAM,CAACQ,OAAV,oDAAG,gBAAgBC,0BAA9B;;AAEA,MAAI,CAACF,KAAL,EAAY;AACV;AACA,WAAO,cAAP;AACD;;AACD,2BAAOX,OAAO,CAACW,KAAD,CAAd,2DAAyBA,KAAzB;AACD","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { ConfigPlugin } from '../Plugin.types';\nimport { withAndroidManifest } from '../plugins/android-plugins';\nimport { AndroidManifest, getMainActivityOrThrow } from './Manifest';\n\nconst ANDROID_WINDOW_SOFT_INPUT_MODE = 'android:windowSoftInputMode';\n\nconst MAPPING: Record<string, string> = {\n  pan: 'adjustPan',\n  resize: 'adjustResize',\n};\n\nexport const withWindowSoftInputMode: ConfigPlugin = config => {\n  return withAndroidManifest(config, async config => {\n    config.modResults = setWindowSoftInputModeMode(config, config.modResults);\n    return config;\n  });\n};\n\nexport function setWindowSoftInputModeMode(\n  config: Pick<ExpoConfig, 'android' | 'userInterfaceStyle'>,\n  androidManifest: AndroidManifest\n) {\n  const app = getMainActivityOrThrow(androidManifest);\n  app.$[ANDROID_WINDOW_SOFT_INPUT_MODE] = getWindowSoftInputModeMode(config);\n  return androidManifest;\n}\n\nexport function getWindowSoftInputModeMode(config: Pick<ExpoConfig, 'android'>) {\n  const value = config.android?.softwareKeyboardLayoutMode;\n\n  if (!value) {\n    // Default to `adjustResize` or `resize`.\n    return 'adjustResize';\n  }\n  return MAPPING[value] ?? value;\n}\n"],"file":"WindowSoftInputMode.js"}