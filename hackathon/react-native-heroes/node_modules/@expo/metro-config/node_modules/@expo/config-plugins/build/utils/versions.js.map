{"version":3,"sources":["../../src/utils/versions.ts"],"names":["gteSdkVersion","exp","sdkVersion","semver","gte","e","Error","lteSdkVersion","lte"],"mappings":";;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEO,SAASA,aAAT,CAAuBC,GAAvB,EAA4DC,UAA5D,EAAyF;AAC9F,MAAI,CAACD,GAAG,CAACC,UAAT,EAAqB;AACnB,WAAO,KAAP;AACD;;AAED,MAAID,GAAG,CAACC,UAAJ,KAAmB,aAAvB,EAAsC;AACpC,WAAO,IAAP;AACD;;AAED,MAAI;AACF,WAAOC,kBAAOC,GAAP,CAAWH,GAAG,CAACC,UAAf,EAA2BA,UAA3B,CAAP;AACD,GAFD,CAEE,OAAOG,CAAP,EAAU;AACV,UAAM,IAAIC,KAAJ,CAAW,GAAEL,GAAG,CAACC,UAAW,uDAA5B,CAAN;AACD;AACF;;AAEM,SAASK,aAAT,CAAuBN,GAAvB,EAA4DC,UAA5D,EAAyF;AAC9F,MAAI,CAACD,GAAG,CAACC,UAAT,EAAqB;AACnB,WAAO,KAAP;AACD;;AAED,MAAID,GAAG,CAACC,UAAJ,KAAmB,aAAvB,EAAsC;AACpC,WAAO,KAAP;AACD;;AAED,MAAI;AACF,WAAOC,kBAAOK,GAAP,CAAWP,GAAG,CAACC,UAAf,EAA2BA,UAA3B,CAAP;AACD,GAFD,CAEE,OAAOG,CAAP,EAAU;AACV,UAAM,IAAIC,KAAJ,CAAW,GAAEL,GAAG,CAACC,UAAW,uDAA5B,CAAN;AACD;AACF","sourcesContent":["import type { ExpoConfig } from '@expo/config-types';\nimport semver from 'semver';\n\nexport function gteSdkVersion(exp: Pick<ExpoConfig, 'sdkVersion'>, sdkVersion: string): boolean {\n  if (!exp.sdkVersion) {\n    return false;\n  }\n\n  if (exp.sdkVersion === 'UNVERSIONED') {\n    return true;\n  }\n\n  try {\n    return semver.gte(exp.sdkVersion, sdkVersion);\n  } catch (e) {\n    throw new Error(`${exp.sdkVersion} is not a valid version. Must be in the form of x.y.z`);\n  }\n}\n\nexport function lteSdkVersion(exp: Pick<ExpoConfig, 'sdkVersion'>, sdkVersion: string): boolean {\n  if (!exp.sdkVersion) {\n    return false;\n  }\n\n  if (exp.sdkVersion === 'UNVERSIONED') {\n    return false;\n  }\n\n  try {\n    return semver.lte(exp.sdkVersion, sdkVersion);\n  } catch (e) {\n    throw new Error(`${exp.sdkVersion} is not a valid version. Must be in the form of x.y.z`);\n  }\n}\n"],"file":"versions.js"}