{"version":3,"sources":["../../src/utils/resolvePackageRootFolder.ts"],"names":["resolvePackageRootFolder","fromDirectory","moduleId","resolved","resolveFrom","silent","packageJson","findUp","sync","cwd","path","dirname"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;AAEO,SAASA,wBAAT,CAAkCC,aAAlC,EAAyDC,QAAzD,EAA0F;AAC/F,QAAMC,QAAQ,GAAGC,uBAAYC,MAAZ,CAAmBJ,aAAnB,EAAkCC,QAAlC,CAAjB;;AACA,MAAI,CAACC,QAAL,EAAe,OAAO,IAAP,CAFgF,CAG/F;;AACA,QAAMG,WAAW,GAAGC,kBAAOC,IAAP,CAAY,cAAZ,EAA4B;AAAEC,IAAAA,GAAG,EAAEN;AAAP,GAA5B,CAApB;;AACA,MAAI,CAACG,WAAL,EAAkB,OAAO,IAAP,CAL6E,CAM/F;;AACA,SAAOI,IAAI,GAACC,OAAL,CAAaL,WAAb,CAAP;AACD","sourcesContent":["import findUp from 'find-up';\nimport * as path from 'path';\nimport resolveFrom from 'resolve-from';\n\nexport function resolvePackageRootFolder(fromDirectory: string, moduleId: string): string | null {\n  const resolved = resolveFrom.silent(fromDirectory, moduleId);\n  if (!resolved) return null;\n  // Get the closest package.json to the node module\n  const packageJson = findUp.sync('package.json', { cwd: resolved });\n  if (!packageJson) return null;\n  // resolve the root folder for the node module\n  return path.dirname(packageJson);\n}\n"],"file":"resolvePackageRootFolder.js"}