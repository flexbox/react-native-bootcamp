{"version":3,"file":"getCacheKey.js","sourceRoot":"","sources":["../../src/transformer/getCacheKey.ts"],"names":[],"mappings":";;;;;;AAAA,oDAA4B;AAC5B,2BAAkC;AAErB,QAAA,aAAa,GAAG;IAC3B,iBAAY,CAAC,UAAU,CAAC;IACxB,oEAAoE;IACpE,sEAAsE;IACtE,OAAO,CAAC,GAAG,CAAC,4BAA4B,IAAI,OAAO;IACnD,uDAAuD;CACxD,CAAC;AAEF,mBAAmB;AACnB,SAAgB,WAAW;IACzB,MAAM,GAAG,GAAG,gBAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACrC,qBAAa,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAChD,OAAO,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC3B,CAAC;AAJD,kCAIC","sourcesContent":["import crypto from 'crypto';\nimport { readFileSync } from 'fs';\n\nexport const cacheKeyParts = [\n  readFileSync(__filename),\n  // Since babel-preset-fbjs cannot be safely resolved relative to the\n  // project root, use this environment variable that we define earlier.\n  process.env.EXPO_METRO_CACHE_KEY_VERSION || '3.3.0',\n  //   require('babel-preset-fbjs/package.json').version,\n];\n\n// Matches upstream\nexport function getCacheKey(): string {\n  const key = crypto.createHash('md5');\n  cacheKeyParts.forEach(part => key.update(part));\n  return key.digest('hex');\n}\n"]}