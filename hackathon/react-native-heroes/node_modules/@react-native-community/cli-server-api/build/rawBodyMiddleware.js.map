{"version":3,"sources":["../src/rawBodyMiddleware.ts"],"names":["rawBodyMiddleware","req","_res","next","rawBody","setEncoding","on","chunk"],"mappings":";;;;;;;AAAA;;;;;;AAQe,SAASA,iBAAT,CACbC,GADa,EAEbC,IAFa,EAGbC,IAHa,EAIb;AACCF,EAAAA,GAAD,CAAkDG,OAAlD,GAA4D,EAA5D;AACAH,EAAAA,GAAG,CAACI,WAAJ,CAAgB,MAAhB;AAEAJ,EAAAA,GAAG,CAACK,EAAJ,CAAO,MAAP,EAAgBC,KAAD,IAAmB;AAC/BN,IAAAA,GAAD,CAAkDG,OAAlD,IAA6DG,KAA7D;AACD,GAFD;AAIAN,EAAAA,GAAG,CAACK,EAAJ,CAAO,KAAP,EAAc,MAAM;AAClBH,IAAAA,IAAI;AACL,GAFD;AAGD","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport http from 'http';\n\nexport default function rawBodyMiddleware(\n  req: http.IncomingMessage,\n  _res: http.ServerResponse,\n  next: (err?: any) => void,\n) {\n  (req as http.IncomingMessage & {rawBody: string}).rawBody = '';\n  req.setEncoding('utf8');\n\n  req.on('data', (chunk: string) => {\n    (req as http.IncomingMessage & {rawBody: string}).rawBody += chunk;\n  });\n\n  req.on('end', () => {\n    next();\n  });\n}\n"]}