{"version":3,"sources":["../../../../src/commands/doctor/healthchecks/index.ts"],"names":["HEALTHCHECK_TYPES","ERROR","WARNING","getHealthchecks","contributor","additionalChecks","config","healthChecks","common","label","healthchecks","nodeJS","yarn","npm","process","platform","watchman","android","jdk","androidStudio","androidSDK","androidHomeEnvVariable","androidNDK","ios","xcode","cocoaPods","iosDeploy"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAKA;;;;AAEO,MAAMA,iBAAiB,GAAG;AAC/BC,EAAAA,KAAK,EAAE,OADwB;AAE/BC,EAAAA,OAAO,EAAE;AAFsB,CAA1B;;;AAUA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA0C;AACvE,MAAIC,gBAAuC,GAAG,EAA9C,CADuE,CAGvE;;AACA,MAAI;AACF,QAAIC,MAAM,GAAG,sBAAb;AACAD,IAAAA,gBAAgB,GAAGC,MAAM,CAACC,YAA1B;AACD,GAHD,CAGE,MAAM,CAAE;;AAEV,SAAO;AACLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,QADD;AAENC,MAAAA,YAAY,EAAE,CACZC,eADY,EAEZC,qBAFY,EAGZC,oBAHY,EAIZ,IAAIC,OAAO,CAACC,QAAR,KAAqB,QAArB,GAAgC,CAACC,iBAAD,CAAhC,GAA6C,EAAjD,CAJY;AAFR,KADH;AAULC,IAAAA,OAAO,EAAE;AACPR,MAAAA,KAAK,EAAE,SADA;AAEPC,MAAAA,YAAY,EAAE,CACZQ,YADY,EAEZC,sBAFY,EAGZC,mBAHY,EAIZC,+BAJY,EAKZ,IAAIjB,WAAW,GAAG,CAACkB,mBAAD,CAAH,GAAkB,EAAjC,CALY;AAFP,KAVJ;AAoBL,QAAIR,OAAO,CAACC,QAAR,KAAqB,QAArB,GACA;AACEQ,MAAAA,GAAG,EAAE;AACHd,QAAAA,KAAK,EAAE,KADJ;AAEHC,QAAAA,YAAY,EAAE,CAACc,cAAD,EAAQC,kBAAR,EAAmBC,kBAAnB;AAFX;AADP,KADA,GAOA,EAPJ,CApBK;AA4BL,OAAGrB;AA5BE,GAAP;AA8BD,CAvCM","sourcesContent":["import nodeJS from './nodeJS';\nimport {yarn, npm} from './packageManagers';\nimport jdk from './jdk';\nimport watchman from './watchman';\nimport androidHomeEnvVariable from './androidHomeEnvVariable';\nimport androidStudio from './androidStudio';\nimport androidSDK from './androidSDK';\nimport androidNDK from './androidNDK';\nimport xcode from './xcode';\nimport cocoaPods from './cocoaPods';\nimport iosDeploy from './iosDeploy';\nimport {\n  Healthchecks,\n  HealthCheckCategory,\n} from '@react-native-community/cli-types';\nimport loadConfig from '../../../tools/config';\n\nexport const HEALTHCHECK_TYPES = {\n  ERROR: 'ERROR',\n  WARNING: 'WARNING',\n};\n\ntype Options = {\n  fix: boolean | void;\n  contributor: boolean | void;\n};\n\nexport const getHealthchecks = ({contributor}: Options): Healthchecks => {\n  let additionalChecks: HealthCheckCategory[] = [];\n\n  // Doctor can run in a detached mode, where there isn't a config so this can fail\n  try {\n    let config = loadConfig();\n    additionalChecks = config.healthChecks;\n  } catch {}\n\n  return {\n    common: {\n      label: 'Common',\n      healthchecks: [\n        nodeJS,\n        yarn,\n        npm,\n        ...(process.platform === 'darwin' ? [watchman] : []),\n      ],\n    },\n    android: {\n      label: 'Android',\n      healthchecks: [\n        jdk,\n        androidStudio,\n        androidSDK,\n        androidHomeEnvVariable,\n        ...(contributor ? [androidNDK] : []),\n      ],\n    },\n    ...(process.platform === 'darwin'\n      ? {\n          ios: {\n            label: 'iOS',\n            healthchecks: [xcode, cocoaPods, iosDeploy],\n          },\n        }\n      : {}),\n    ...additionalChecks,\n  };\n};\n"]}