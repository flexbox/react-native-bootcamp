{"version":3,"sources":["../../../src/tools/windows/environmentVariables.ts"],"names":["setEnvironment","variable","value","command","process","env","updateEnvironment","envVariable","includes"],"mappings":";;;;;;;AAAA;;AAEA;;;AAGA,MAAMA,cAAc,GAAG,OAAOC,QAAP,EAAyBC,KAAzB,KAA2C;AAChE;AACA,QAAMC,OAAO,GAAI,QAAOF,QAAS,KAAIC,KAAM,GAA3C;AAEA,QAAM,uCAAeC,OAAf,CAAN;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,IAAwBC,KAAxB;AACD,CAPD;AASA;;;;;;;;;;AAMA,MAAMI,iBAAiB,GAAG,OAAOL,QAAP,EAAyBC,KAAzB,KAA2C;AACnE;AACA;AACA;AACA,QAAMK,WAAW,GAAGH,OAAO,CAACC,GAAR,CAAYJ,QAAZ,KAAyB,EAA7C;;AACA,MAAIA,QAAQ,KAAK,MAAb,IAAuBM,WAAW,CAACC,QAAZ,CAAsB,GAAEN,KAAM,GAA9B,CAA3B,EAA8D;AAC5D;AACD,GAPkE,CAQnE;;;AACA,QAAMC,OAAO,GAAI,oEAAmEF,QAAS,8BAA6BA,QAAS,KAAIC,KAAM,wBAAuBD,QAAS,KAAIC,KAAM;GAAvL;AAGA,QAAM,uCAAeC,OAAf,CAAN;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,IAAyB,GAAEG,OAAO,CAACC,GAAR,CAAYJ,QAAZ,CAAsB,GAAEC,KAAM,GAAzD;AACD,CAfD","sourcesContent":["import {executeCommand} from './executeWinCommand';\n\n/**\n * Creates a new variable in the user's environment\n */\nconst setEnvironment = async (variable: string, value: string) => {\n  // https://superuser.com/a/601034\n  const command = `setx ${variable} \"${value}\"`;\n\n  await executeCommand(command);\n\n  process.env[variable] = value;\n};\n\n/**\n * Prepends the given `value` to the user's environment `variable`.\n * @param {string} variable The environment variable to modify\n * @param {string} value The value to add to the variable\n * @returns {Promise<void>}\n */\nconst updateEnvironment = async (variable: string, value: string) => {\n  // Avoid adding the value multiple times to PATH\n  // Need to do the following to avoid TSLint complaining about possible\n  // undefined values even if I check before via `typeof` or another way\n  const envVariable = process.env[variable] || '';\n  if (variable === 'PATH' && envVariable.includes(`${value};`)) {\n    return;\n  }\n  // https://superuser.com/a/601034\n  const command = `for /f \"skip=2 tokens=3*\" %a in ('reg query HKCU\\\\Environment /v ${variable}') do @if [%b]==[] ( @setx ${variable} \"${value};%~a\" ) else ( @setx ${variable} \"${value};%~a %~b\" )\n  `;\n\n  await executeCommand(command);\n\n  process.env[variable] = `${process.env[variable]}${value};`;\n};\n\nexport {setEnvironment, updateEnvironment};\n"]}