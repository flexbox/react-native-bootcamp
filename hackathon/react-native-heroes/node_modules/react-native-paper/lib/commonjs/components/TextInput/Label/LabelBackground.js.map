{"version":3,"sources":["LabelBackground.tsx"],"names":["LabelBackground","parentState","labelProps","placeholderStyle","baseLabelTranslateX","topPosition","hasActiveOutline","label","backgroundColor","roundness","labelStyle","hasFocus","value","opacity","labeled","interpolate","inputRange","outputRange","labelTranslationX","transform","translateX","StyleSheet","absoluteFill","styles","view","maxHeight","Math","max","bottom","outlinedLabel","top","scaleY","maxWidth","labelLayout","width","paddingHorizontal","create","position","left","color"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\n\nimport AnimatedText from '../../Typography/AnimatedText';\n\nimport type { LabelBackgroundProps } from '../types';\n\nconst LabelBackground = ({\n  parentState,\n  labelProps: {\n    placeholderStyle,\n    baseLabelTranslateX,\n    topPosition,\n    hasActiveOutline,\n    label,\n    backgroundColor,\n    roundness,\n  },\n  labelStyle,\n}: LabelBackgroundProps) => {\n  const hasFocus = hasActiveOutline || parentState.value;\n  const opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0],\n  });\n\n  const labelTranslationX = {\n    transform: [\n      {\n        translateX: parentState.labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [-baseLabelTranslateX, 0],\n        }),\n      },\n    ],\n  };\n\n  return label\n    ? [\n        <Animated.View\n          key=\"labelBackground-view\"\n          pointerEvents=\"none\"\n          style={[\n            StyleSheet.absoluteFill,\n            styles.view,\n            {\n              backgroundColor,\n              maxHeight: Math.max(roundness / 3, 2),\n              opacity,\n              bottom: Math.max(roundness, 2),\n            },\n            labelTranslationX,\n          ]}\n        />,\n        <AnimatedText\n          key=\"labelBackground-text\"\n          style={[\n            placeholderStyle,\n            labelStyle,\n            styles.outlinedLabel,\n            {\n              top: topPosition + 1,\n              backgroundColor,\n              opacity,\n              transform: [\n                ...labelStyle.transform,\n                {\n                  scaleY: parentState.labeled.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0.2, 1],\n                  }),\n                },\n              ],\n              maxWidth:\n                parentState.labelLayout.width -\n                2 * placeholderStyle.paddingHorizontal,\n            },\n          ]}\n          numberOfLines={1}\n        >\n          {label}\n        </AnimatedText>,\n      ]\n    : null;\n};\n\nexport default LabelBackground;\n\nconst styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12,\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent',\n  },\n});\n"]}