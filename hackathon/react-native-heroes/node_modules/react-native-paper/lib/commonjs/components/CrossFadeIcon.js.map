{"version":3,"sources":["CrossFadeIcon.tsx"],"names":["CrossFadeIcon","color","size","source","theme","currentIcon","setCurrentIcon","React","useState","previousIcon","setPreviousIcon","current","fade","useRef","Animated","Value","scale","animation","useEffect","setValue","timing","duration","toValue","useNativeDriver","start","opacityPrev","opacityNext","interpolate","inputRange","outputRange","rotatePrev","rotateNext","styles","content","height","width","icon","opacity","transform","rotate","StyleSheet","create","alignItems","justifyContent","position","top","left","right","bottom"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;AAqBA,MAAMA,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,MAAf;AAAuBC,EAAAA;AAAvB,CAAD,KAA2C;AAC/D,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCC,KAAK,CAACC,QAAN,CACpC,MAAML,MAD8B,CAAtC;AAGA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCH,KAAK,CAACC,QAAN,CACtC,IADsC,CAAxC;AAGA,QAAM;AAAEG,IAAAA,OAAO,EAAEC;AAAX,MAAoBL,KAAK,CAACM,MAAN,CAA6B,IAAIC,sBAASC,KAAb,CAAmB,CAAnB,CAA7B,CAA1B;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAYZ,KAAK,CAACa,SAAxB;;AAEA,MAAIZ,WAAW,KAAKF,MAApB,EAA4B;AAC1BO,IAAAA,eAAe,CAAC,MAAML,WAAP,CAAf;AACAC,IAAAA,cAAc,CAAC,MAAMH,MAAP,CAAd;AACD;;AAEDI,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpB,QAAI,uBAAYT,YAAZ,KAA6B,CAAC,uBAAYA,YAAZ,EAA0BJ,WAA1B,CAAlC,EAA0E;AACxEO,MAAAA,IAAI,CAACO,QAAL,CAAc,CAAd;;AAEAL,4BAASM,MAAT,CAAgBR,IAAhB,EAAsB;AACpBS,QAAAA,QAAQ,EAAEL,KAAK,GAAG,GADE;AAEpBM,QAAAA,OAAO,EAAE,CAFW;AAGpBC,QAAAA,eAAe,EAAE;AAHG,OAAtB,EAIGC,KAJH;AAKD;AACF,GAVD,EAUG,CAACnB,WAAD,EAAcI,YAAd,EAA4BG,IAA5B,EAAkCI,KAAlC,CAVH;AAYA,QAAMS,WAAW,GAAGb,IAApB;AACA,QAAMc,WAAW,GAAGjB,YAAY,GAC5BG,IAAI,CAACe,WAAL,CAAiB;AACfC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADG;AAEfC,IAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ;AAFE,GAAjB,CAD4B,GAK5B,CALJ;AAOA,QAAMC,UAAU,GAAGlB,IAAI,CAACe,WAAL,CAAiB;AAClCC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADsB;AAElCC,IAAAA,WAAW,EAAE,CAAC,QAAD,EAAW,MAAX;AAFqB,GAAjB,CAAnB;AAKA,QAAME,UAAU,GAAGtB,YAAY,GAC3BG,IAAI,CAACe,WAAL,CAAiB;AACfC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADG;AAEfC,IAAAA,WAAW,EAAE,CAAC,MAAD,EAAS,SAAT;AAFE,GAAjB,CAD2B,GAK3B,MALJ;AAOA,sBACE,oBAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACLG,MAAM,CAACC,OADF,EAEL;AACEC,MAAAA,MAAM,EAAEhC,IADV;AAEEiC,MAAAA,KAAK,EAAEjC;AAFT,KAFK;AADT,KASGO,YAAY,gBACX,oBAAC,qBAAD,CAAU,IAAV;AACE,IAAA,KAAK,EAAE,CACLuB,MAAM,CAACI,IADF,EAEL;AACEC,MAAAA,OAAO,EAAEZ,WADX;AAEEa,MAAAA,SAAS,EAAE,CAAC;AAAEC,QAAAA,MAAM,EAAET;AAAV,OAAD;AAFb,KAFK;AADT,kBASE,oBAAC,aAAD;AAAM,IAAA,MAAM,EAAErB,YAAd;AAA4B,IAAA,IAAI,EAAEP,IAAlC;AAAwC,IAAA,KAAK,EAAED;AAA/C,IATF,CADW,GAYT,IArBN,eAsBE,oBAAC,qBAAD,CAAU,IAAV;AACE,IAAA,KAAK,EAAE,CACL+B,MAAM,CAACI,IADF,EAEL;AACEC,MAAAA,OAAO,EAAEX,WADX;AAEEY,MAAAA,SAAS,EAAE,CAAC;AAAEC,QAAAA,MAAM,EAAER;AAAV,OAAD;AAFb,KAFK;AADT,kBASE,oBAAC,aAAD;AAAM,IAAA,MAAM,EAAE1B,WAAd;AAA2B,IAAA,IAAI,EAAEH,IAAjC;AAAuC,IAAA,KAAK,EAAED;AAA9C,IATF,CAtBF,CADF;AAoCD,CApFD;;eAsFe,wBAAUD,aAAV,C;;;;AAEf,MAAMgC,MAAM,GAAGQ,wBAAWC,MAAX,CAAkB;AAC/BR,EAAAA,OAAO,EAAE;AACPS,IAAAA,UAAU,EAAE,QADL;AAEPC,IAAAA,cAAc,EAAE;AAFT,GADsB;AAK/BP,EAAAA,IAAI,EAAE;AACJQ,IAAAA,QAAQ,EAAE,UADN;AAEJC,IAAAA,GAAG,EAAE,CAFD;AAGJC,IAAAA,IAAI,EAAE,CAHF;AAIJC,IAAAA,KAAK,EAAE,CAJH;AAKJC,IAAAA,MAAM,EAAE;AALJ;AALyB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport Icon, { isValidIcon, IconSource, isEqualIcon } from './Icon';\n\nimport { withTheme } from '../core/theming';\n\ntype Props = {\n  /**\n   * Icon to display for the `CrossFadeIcon`.\n   */\n  source: IconSource;\n  /**\n   * Color of the icon.\n   */\n  color: string;\n  /**\n   * Size of the icon.\n   */\n  size: number;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst CrossFadeIcon = ({ color, size, source, theme }: Props) => {\n  const [currentIcon, setCurrentIcon] = React.useState<IconSource>(\n    () => source\n  );\n  const [previousIcon, setPreviousIcon] = React.useState<IconSource | null>(\n    null\n  );\n  const { current: fade } = React.useRef<Animated.Value>(new Animated.Value(1));\n\n  const { scale } = theme.animation;\n\n  if (currentIcon !== source) {\n    setPreviousIcon(() => currentIcon);\n    setCurrentIcon(() => source);\n  }\n\n  React.useEffect(() => {\n    if (isValidIcon(previousIcon) && !isEqualIcon(previousIcon, currentIcon)) {\n      fade.setValue(1);\n\n      Animated.timing(fade, {\n        duration: scale * 200,\n        toValue: 0,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [currentIcon, previousIcon, fade, scale]);\n\n  const opacityPrev = fade;\n  const opacityNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0],\n      })\n    : 1;\n\n  const rotatePrev = fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['-90deg', '0deg'],\n  });\n\n  const rotateNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '-180deg'],\n      })\n    : '0deg';\n\n  return (\n    <View\n      style={[\n        styles.content,\n        {\n          height: size,\n          width: size,\n        },\n      ]}\n    >\n      {previousIcon ? (\n        <Animated.View\n          style={[\n            styles.icon,\n            {\n              opacity: opacityPrev,\n              transform: [{ rotate: rotatePrev }],\n            },\n          ]}\n        >\n          <Icon source={previousIcon} size={size} color={color} />\n        </Animated.View>\n      ) : null}\n      <Animated.View\n        style={[\n          styles.icon,\n          {\n            opacity: opacityNext,\n            transform: [{ rotate: rotateNext }],\n          },\n        ]}\n      >\n        <Icon source={currentIcon} size={size} color={color} />\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default withTheme(CrossFadeIcon);\n\nconst styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"]}