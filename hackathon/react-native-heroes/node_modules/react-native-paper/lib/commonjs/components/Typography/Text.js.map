{"version":3,"sources":["Text.tsx"],"names":["Text","style","theme","rest","ref","root","React","useRef","useImperativeHandle","setNativeProps","args","current","fonts","regular","color","colors","text","styles","StyleSheet","create","textAlign","forwardRef"],"mappings":";;;;;;;AAAA;;AACA;;AAMA;;;;;;;;AAUA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMA,IAA6C,GAAG,CACpD;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgB,KAAGC;AAAnB,CADoD,EAEpDC,GAFoD,KAGjD;AACH,QAAMC,IAAI,GAAGC,KAAK,CAACC,MAAN,CAAgC,IAAhC,CAAb;AAEAD,EAAAA,KAAK,CAACE,mBAAN,CAA0BJ,GAA1B,EAA+B,OAAO;AACpCK,IAAAA,cAAc,EAAGC,IAAD;AAAA;;AAAA,8BAAkBL,IAAI,CAACM,OAAvB,kDAAkB,cAAcF,cAAd,CAA6BC,IAA7B,CAAlB;AAAA;AADoB,GAAP,CAA/B;AAIA,sBACE,oBAAC,iBAAD,eACMP,IADN;AAEE,IAAA,GAAG,EAAEE,IAFP;AAGE,IAAA,KAAK,EAAE,CACL,EACE,GAAGH,KAAK,CAACU,KAAN,CAAYC,OADjB;AAEEC,MAAAA,KAAK,EAAEZ,KAAK,CAACa,MAAN,CAAaC;AAFtB,KADK,EAKLC,MAAM,CAACD,IALF,EAMLf,KANK;AAHT,KADF;AAcD,CAxBD;;AA0BA,MAAMgB,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BH,EAAAA,IAAI,EAAE;AACJI,IAAAA,SAAS,EAAE;AADP;AADyB,CAAlB,CAAf;;eAMe,sCAAUd,KAAK,CAACe,UAAN,CAAiBrB,IAAjB,CAAV,C","sourcesContent":["import * as React from 'react';\nimport {\n  Text as NativeText,\n  TextStyle,\n  StyleProp,\n  StyleSheet,\n} from 'react-native';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof NativeText> & {\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n// @component-group Typography\n\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\nconst Text: React.RefForwardingComponent<{}, Props> = (\n  { style, theme, ...rest }: Props,\n  ref\n) => {\n  const root = React.useRef<NativeText | null>(null);\n\n  React.useImperativeHandle(ref, () => ({\n    setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n  }));\n\n  return (\n    <NativeText\n      {...rest}\n      ref={root}\n      style={[\n        {\n          ...theme.fonts.regular,\n          color: theme.colors.text,\n        },\n        styles.text,\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport default withTheme(React.forwardRef(Text));\n"]}