{"version":3,"sources":["utils.ts"],"names":["getCombinedStyles","isAnimatedFromRight","isIconStatic","distance","animFAB","isRTL","I18nManager","defaultPositionStyles","left","right","undefined","combinedStyles","innerWrapper","iconWrapper","absoluteFill","animatedFromRight","animatedFromRightRTL","animatedFromLeft","animatedFromLeftRTL","transform","translateX","interpolate","inputRange","outputRange","Math","abs"],"mappings":"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","sourcesContent":["import { Animated, I18nManager, ViewStyle } from 'react-native';\n\ntype GetCombinedStylesProps = {\n  isAnimatedFromRight: boolean;\n  isIconStatic: boolean;\n  distance: number;\n  animFAB: Animated.Value;\n};\n\ntype CombinedStyles = {\n  innerWrapper: Animated.WithAnimatedValue<ViewStyle>;\n  iconWrapper: Animated.WithAnimatedValue<ViewStyle>;\n  absoluteFill: Animated.WithAnimatedValue<ViewStyle>;\n};\n\nexport const getCombinedStyles = ({\n  isAnimatedFromRight,\n  isIconStatic,\n  distance,\n  animFAB,\n}: GetCombinedStylesProps): CombinedStyles => {\n  const { isRTL } = I18nManager;\n\n  const defaultPositionStyles = { left: -distance, right: undefined };\n\n  const combinedStyles: CombinedStyles = {\n    innerWrapper: {\n      ...defaultPositionStyles,\n    },\n    iconWrapper: {\n      ...defaultPositionStyles,\n    },\n    absoluteFill: {},\n  };\n\n  const animatedFromRight = isAnimatedFromRight && !isRTL;\n  const animatedFromRightRTL = isAnimatedFromRight && isRTL;\n  const animatedFromLeft = !isAnimatedFromRight && !isRTL;\n  const animatedFromLeftRTL = !isAnimatedFromRight && isRTL;\n\n  if (animatedFromRight) {\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [distance, 0],\n        }),\n      },\n    ];\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic ? 0 : animFAB,\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [Math.abs(distance) / 2, Math.abs(distance)],\n        }),\n      },\n    ];\n  } else if (animatedFromRightRTL) {\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic\n          ? 0\n          : animFAB.interpolate({\n              inputRange: [distance, 0],\n              outputRange: [-distance, 0],\n            }),\n      },\n    ];\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [-distance, 0],\n        }),\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [distance, 0],\n          outputRange: [0, distance],\n        }),\n      },\n    ];\n  } else if (animatedFromLeft) {\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic\n          ? distance\n          : animFAB.interpolate({\n              inputRange: [0, distance],\n              outputRange: [distance, distance * 2],\n            }),\n      },\n    ];\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB,\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [0, distance],\n          outputRange: [0, Math.abs(distance) / 2],\n        }),\n      },\n    ];\n  } else if (animatedFromLeftRTL) {\n    combinedStyles.iconWrapper.transform = [\n      {\n        translateX: isIconStatic\n          ? animFAB.interpolate({\n              inputRange: [0, distance],\n              outputRange: [-distance, -distance * 2],\n            })\n          : -distance,\n      },\n    ];\n    combinedStyles.innerWrapper.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [0, distance],\n          outputRange: [0, -distance],\n        }),\n      },\n    ];\n    combinedStyles.absoluteFill.transform = [\n      {\n        translateX: animFAB.interpolate({\n          inputRange: [0, distance],\n          outputRange: [0, -distance],\n        }),\n      },\n    ];\n  }\n\n  return combinedStyles;\n};\n"]}