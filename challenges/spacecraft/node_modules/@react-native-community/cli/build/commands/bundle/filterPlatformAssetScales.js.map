{"version":3,"sources":["../../../src/commands/bundle/filterPlatformAssetScales.ts"],"names":["ALLOWED_SCALES","ios","filterPlatformAssetScales","platform","scales","whitelist","result","filter","scale","indexOf","length","maxScale","push"],"mappings":";;;;;;;AAAA;;;;;;;AAQA,MAAMA,cAAyC,GAAG;AAChDC,EAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAD2C,CAAlD;;AAIA,SAASC,yBAAT,CACEC,QADF,EAEEC,MAFF,EAGyB;AACvB,QAAMC,SAAmB,GAAGL,cAAc,CAACG,QAAD,CAA1C;;AACA,MAAI,CAACE,SAAL,EAAgB;AACd,WAAOD,MAAP;AACD;;AACD,QAAME,MAAM,GAAGF,MAAM,CAACG,MAAP,CAAeC,KAAD,IAAWH,SAAS,CAACI,OAAV,CAAkBD,KAAlB,IAA2B,CAAC,CAArD,CAAf;;AACA,MAAIF,MAAM,CAACI,MAAP,KAAkB,CAAlB,IAAuBN,MAAM,CAACM,MAAP,GAAgB,CAA3C,EAA8C;AAC5C;AACA;AACA;AACA,UAAMC,QAAQ,GAAGN,SAAS,CAACA,SAAS,CAACK,MAAV,GAAmB,CAApB,CAA1B;;AACA,SAAK,MAAMF,KAAX,IAAoBJ,MAApB,EAA4B;AAC1B,UAAII,KAAK,GAAGG,QAAZ,EAAsB;AACpBL,QAAAA,MAAM,CAACM,IAAP,CAAYJ,KAAZ;AACA;AACD;AACF,KAV2C,CAY5C;;;AACA,QAAIF,MAAM,CAACI,MAAP,KAAkB,CAAtB,EAAyB;AACvBJ,MAAAA,MAAM,CAACM,IAAP,CAAYR,MAAM,CAACA,MAAM,CAACM,MAAP,GAAgB,CAAjB,CAAlB;AACD;AACF;;AACD,SAAOJ,MAAP;AACD;;eAEcJ,yB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst ALLOWED_SCALES: {[key: string]: number[]} = {\n  ios: [1, 2, 3],\n};\n\nfunction filterPlatformAssetScales(\n  platform: string,\n  scales: ReadonlyArray<number>,\n): ReadonlyArray<number> {\n  const whitelist: number[] = ALLOWED_SCALES[platform];\n  if (!whitelist) {\n    return scales;\n  }\n  const result = scales.filter((scale) => whitelist.indexOf(scale) > -1);\n  if (result.length === 0 && scales.length > 0) {\n    // No matching scale found, but there are some available. Ideally we don't\n    // want to be in this situation and should throw, but for now as a fallback\n    // let's just use the closest larger image\n    const maxScale = whitelist[whitelist.length - 1];\n    for (const scale of scales) {\n      if (scale > maxScale) {\n        result.push(scale);\n        break;\n      }\n    }\n\n    // There is no larger scales available, use the largest we have\n    if (result.length === 0) {\n      result.push(scales[scales.length - 1]);\n    }\n  }\n  return result;\n}\n\nexport default filterPlatformAssetScales;\n"]}