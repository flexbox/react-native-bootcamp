{"version":3,"sources":["../../../src/tools/generator/promptSync.ts"],"names":["term","create","prompt","ask","value","opts","insert","echo","masked","fd","process","platform","stdin","fs","openSync","wasRaw","isRaw","setRawMode","buf","Buffer","alloc","str","character","read","stdout","write","readSync","toString","replace","length","closeSync","exit","slice","String","fromCharCode","Array","join"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n// Simplified version of:\n// https://github.com/0x00A/prompt-sync/blob/master/index.js\n\nimport fs from 'fs';\n\ntype Options = {\n  echo?: string;\n  ask?: string;\n  value?: string;\n  autocomplete?: string[] | Function;\n};\n\nconst term = 13; // carriage return\n\nfunction create() {\n  return prompt;\n\n  function prompt(\n    ask?: string | Options,\n    value?: string | Options,\n    opts?: Options,\n  ) {\n    let insert = 0;\n    opts = opts || {};\n\n    if (typeof ask === 'object') {\n      opts = ask;\n      ask = opts.ask;\n    } else if (typeof value === 'object') {\n      opts = value;\n      value = opts.value;\n    }\n    ask = ask || '';\n    const echo = opts.echo;\n    const masked = 'echo' in opts;\n\n    let fd;\n    if (process.platform === 'win32') {\n      // @ts-ignore\n      fd = process.stdin.fd;\n    } else {\n      fd = fs.openSync('/dev/tty', 'rs');\n    }\n\n    const wasRaw = process.stdin.isRaw;\n    if (!wasRaw && process.stdin.setRawMode) {\n      process.stdin.setRawMode(true);\n    }\n\n    let buf = Buffer.alloc(3);\n    let str = '';\n\n    let character;\n\n    let read;\n\n    if (ask) {\n      process.stdout.write(ask);\n    }\n\n    while (true) {\n      read = fs.readSync(fd, buf, 0, 3, null);\n      if (read > 1) {\n        // received a control sequence\n        if (buf.toString()) {\n          str += buf.toString();\n          str = str.replace(/\\0/g, '');\n          insert = str.length;\n          process.stdout.write(`\\u001b[2K\\u001b[0G${ask}${str}`);\n          process.stdout.write(`\\u001b[${insert + ask.length + 1}G`);\n          buf = Buffer.alloc(3);\n        }\n        continue; // any other 3 character sequence is ignored\n      }\n\n      // if it is not a control character seq, assume only one character is read\n      character = buf[read - 1];\n\n      // catch a ^C and return null\n      if (character === 3) {\n        process.stdout.write('^C\\n');\n        fs.closeSync(fd);\n        process.exit(130);\n        if (process.stdin.setRawMode) {\n          process.stdin.setRawMode!(!!wasRaw);\n        }\n        return null;\n      }\n\n      // catch the terminating character\n      if (character === term) {\n        fs.closeSync(fd);\n        break;\n      }\n\n      if (\n        character === 127 ||\n        (process.platform === 'win32' && character === 8)\n      ) {\n        // backspace\n        if (!insert) {\n          continue;\n        }\n        str = str.slice(0, insert - 1) + str.slice(insert);\n        insert--;\n        process.stdout.write('\\u001b[2D');\n      } else {\n        if (character < 32 || character > 126) {\n          continue;\n        }\n        str =\n          str.slice(0, insert) +\n          String.fromCharCode(character) +\n          str.slice(insert);\n        insert++;\n      }\n\n      if (masked) {\n        process.stdout.write(\n          `\\u001b[2K\\u001b[0G${ask}${Array(str.length + 1).join(echo)}`,\n        );\n      } else {\n        process.stdout.write('\\u001b[s');\n        if (insert === str.length) {\n          process.stdout.write(`\\u001b[2K\\u001b[0G${ask}${str}`);\n        } else if (ask) {\n          process.stdout.write(`\\u001b[2K\\u001b[0G${ask}${str}`);\n        } else {\n          process.stdout.write(\n            `\\u001b[2K\\u001b[0G${str}\\u001b[${str.length - insert}D`,\n          );\n        }\n        process.stdout.write('\\u001b[u');\n        process.stdout.write('\\u001b[1C');\n      }\n    }\n\n    process.stdout.write('\\n');\n\n    if (process.stdin.setRawMode) {\n      process.stdin.setRawMode(!!wasRaw);\n    }\n\n    return str || value || '';\n  }\n}\n\nexport default create;\n"]}