{"version":3,"sources":["DialogActions.tsx"],"names":["React","StyleSheet","View","DialogActions","props","styles","container","style","Children","map","children","child","isValidElement","cloneElement","compact","displayName","create","flexDirection","alignItems","justifyContent","padding"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAgCC,IAAhC,QAAuD,cAAvD;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,aAAa,GAAIC,KAAD,iBACpB,oBAAC,IAAD,eAAUA,KAAV;AAAiB,EAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmBF,KAAK,CAACG,KAAzB;AAAxB,IACGP,KAAK,CAACQ,QAAN,CAAeC,GAAf,CAAmBL,KAAK,CAACM,QAAzB,EAAoCC,KAAD,IAClC,aAAAX,KAAK,CAACY,cAAN,CAAqBD,KAArB,iBACIX,KAAK,CAACa,YAAN,CAAmBF,KAAnB,EAA0B;AACxBG,EAAAA,OAAO,EAAE;AADe,CAA1B,CADJ,GAIIH,KALL,CADH,CADF;;AAYAR,aAAa,CAACY,WAAd,GAA4B,gBAA5B;AAEA,MAAMV,MAAM,GAAGJ,UAAU,CAACe,MAAX,CAAkB;AAC/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE,UAHP;AAITC,IAAAA,OAAO,EAAE;AAJA;AADoB,CAAlB,CAAf;AASA,eAAejB,aAAf","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DialogActions`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a list of actions in a Dialog.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/dialog-actions.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Button, Dialog, Portal } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Actions>\n *           <Button onPress={() => console.log('Cancel')}>Cancel</Button>\n *           <Button onPress={() => console.log('Ok')}>Ok</Button>\n *         </Dialog.Actions>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogActions = (props: Props) => (\n  <View {...props} style={[styles.container, props.style]}>\n    {React.Children.map(props.children, (child) =>\n      React.isValidElement(child)\n        ? React.cloneElement(child, {\n            compact: true,\n          })\n        : child\n    )}\n  </View>\n);\n\nDialogActions.displayName = 'Dialog.Actions';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: 8,\n  },\n});\n\nexport default DialogActions;\n"]}