{"version":3,"sources":["AnimatedFAB.tsx"],"names":["React","color","Animated","View","StyleSheet","Easing","ScrollView","Text","Platform","I18nManager","Surface","Icon","TouchableRipple","withTheme","white","black","AnimatedText","getCombinedStyles","SIZE","BORDER_RADIUS","SCALE","AnimatedFAB","icon","label","accessibilityLabel","accessibilityState","customColor","disabled","onPress","onLongPress","theme","style","visible","uppercase","testID","animateFrom","extended","iconMode","rest","isIOS","OS","isAnimatedFromRight","isIconStatic","isRTL","current","visibility","useRef","Value","animFAB","scale","animation","textWidth","setTextWidth","useState","textHeight","setTextHeight","useEffect","timing","toValue","duration","useNativeDriver","start","disabledColor","dark","alpha","rgb","string","backgroundColor","colors","accent","flatten","foregroundColor","isLight","rippleColor","extendedWidth","distance","easing","linear","onTextLayout","nativeEvent","currentWidth","Math","ceil","lines","width","currentHeight","height","propForDirection","right","reverse","combinedStyles","opacity","transform","elevation","styles","container","scaleY","interpolate","inputRange","outputRange","standard","absoluteFill","shadowWrapper","shadow","borderRadius","innerWrapper","touchable","iconWrapper","undefined","minWidth","top","translateX","uppercaseLabel","fonts","medium","textPlaceholderContainer","create","position","flexDirection","overflow","alignItems","justifyContent","textTransform"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport {\n  Animated,\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  Easing,\n  ScrollView,\n  Text,\n  Platform,\n  I18nManager,\n} from 'react-native';\nimport Surface from '../../Surface';\nimport Icon from '../../Icon';\nimport TouchableRipple from '../../TouchableRipple/TouchableRipple';\nimport type { $RemoveChildren } from '../../../types';\nimport type { IconSource } from '../../Icon';\nimport { withTheme } from '../../../core/theming';\nimport type {\n  AccessibilityState,\n  NativeSyntheticEvent,\n  TextLayoutEventData,\n} from 'react-native';\nimport { white, black } from '../../../styles/colors';\nimport AnimatedText from '../../Typography/AnimatedText';\nimport { getCombinedStyles } from './utils';\n\nexport type AnimatedFABIconMode = 'static' | 'dynamic';\nexport type AnimatedFABAnimateFrom = 'left' | 'right';\n\ntype Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Label for extended `FAB`.\n   */\n  label: string;\n  /**\n   * Make the label text uppercased.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityState?: AccessibilityState;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Whether icon should be translated to the end of extended `FAB` or be static and stay in the same place. The default value is `dynamic`.\n   */\n  iconMode?: AnimatedFABIconMode;\n  /**\n   * Indicates from which direction animation should be performed. The default value is `right`.\n   */\n  animateFrom?: AnimatedFABAnimateFrom;\n  /**\n   * Whether `FAB` should start animation to extend.\n   */\n  extended: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  testID?: string;\n};\n\nconst SIZE = 56;\nconst BORDER_RADIUS = SIZE / 2;\nconst SCALE = 0.9;\n\nconst AnimatedFAB = ({\n  icon,\n  label,\n  accessibilityLabel = label,\n  accessibilityState,\n  color: customColor,\n  disabled,\n  onPress,\n  onLongPress,\n  theme,\n  style,\n  visible = true,\n  uppercase = true,\n  testID,\n  animateFrom = 'right',\n  extended = false,\n  iconMode = 'dynamic',\n  ...rest\n}: Props) => {\n  const isIOS = Platform.OS === 'ios';\n  const isAnimatedFromRight = animateFrom === 'right';\n  const isIconStatic = iconMode === 'static';\n  const { isRTL } = I18nManager;\n  const { current: visibility } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const { current: animFAB } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { scale } = theme.animation;\n\n  const [textWidth, setTextWidth] = React.useState<number>(0);\n  const [textHeight, setTextHeight] = React.useState<number>(0);\n\n  React.useEffect(() => {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n\n  const disabledColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  const { backgroundColor = disabled ? disabledColor : theme.colors.accent } =\n    StyleSheet.flatten<ViewStyle>(style) || {};\n\n  let foregroundColor: string;\n\n  if (typeof customColor !== 'undefined') {\n    foregroundColor = customColor;\n  } else if (disabled) {\n    foregroundColor = color(theme.dark ? white : black)\n      .alpha(0.32)\n      .rgb()\n      .string();\n  } else {\n    foregroundColor = !color(backgroundColor as string).isLight()\n      ? white\n      : 'rgba(0, 0, 0, .54)';\n  }\n\n  const rippleColor = color(foregroundColor).alpha(0.32).rgb().string();\n\n  const extendedWidth = textWidth + 1.5 * SIZE;\n\n  const distance = isAnimatedFromRight\n    ? -textWidth - BORDER_RADIUS\n    : textWidth + BORDER_RADIUS;\n\n  React.useEffect(() => {\n    Animated.timing(animFAB, {\n      toValue: !extended ? 0 : distance,\n      duration: 150 * scale,\n      useNativeDriver: true,\n      easing: Easing.linear,\n    }).start();\n  }, [animFAB, scale, distance, extended]);\n\n  const onTextLayout = ({\n    nativeEvent,\n  }: NativeSyntheticEvent<TextLayoutEventData>) => {\n    const currentWidth = Math.ceil(nativeEvent.lines[0].width);\n    const currentHeight = Math.ceil(nativeEvent.lines[0].height);\n\n    if (currentWidth !== textWidth || currentHeight !== textHeight) {\n      setTextHeight(currentHeight);\n\n      if (isIOS) {\n        return setTextWidth(currentWidth - 12);\n      }\n\n      setTextWidth(currentWidth);\n    }\n  };\n\n  const propForDirection = <T,>(right: T[]): T[] => {\n    if (isAnimatedFromRight) {\n      return right;\n    }\n\n    return right.reverse();\n  };\n\n  const combinedStyles = getCombinedStyles({\n    isAnimatedFromRight,\n    isIconStatic,\n    distance,\n    animFAB,\n  });\n\n  return (\n    <Surface\n      {...rest}\n      style={\n        [\n          {\n            opacity: visibility,\n            transform: [\n              {\n                scale: visibility,\n              },\n            ],\n            elevation: isIOS ? 6 : 0,\n          },\n          styles.container,\n          disabled && styles.disabled,\n          style,\n        ] as StyleProp<ViewStyle>\n      }\n    >\n      <Animated.View\n        style={[\n          {\n            transform: [\n              {\n                scaleY: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([SCALE, 1]),\n                }),\n              },\n            ],\n          },\n          styles.standard,\n        ]}\n      >\n        <View style={[StyleSheet.absoluteFill, styles.shadowWrapper]}>\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              styles.shadow,\n              {\n                width: extendedWidth,\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([1, 0.15, 0]),\n                }),\n              },\n            ]}\n          />\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              styles.shadow,\n              {\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([0, 0.85, 1]),\n                }),\n                width: SIZE,\n                borderRadius: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([\n                    SIZE / (extendedWidth / SIZE),\n                    BORDER_RADIUS,\n                  ]),\n                }),\n              },\n              combinedStyles.absoluteFill,\n            ]}\n          />\n        </View>\n        <Animated.View pointerEvents=\"box-none\" style={[styles.innerWrapper]}>\n          <Animated.View\n            style={[\n              styles.standard,\n              {\n                width: extendedWidth,\n                backgroundColor,\n              },\n              combinedStyles.innerWrapper,\n            ]}\n          >\n            <TouchableRipple\n              borderless\n              onPress={onPress}\n              onLongPress={onLongPress}\n              rippleColor={rippleColor}\n              disabled={disabled}\n              accessibilityLabel={accessibilityLabel}\n              // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n              accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n              accessibilityComponentType=\"button\"\n              accessibilityRole=\"button\"\n              accessibilityState={{ ...accessibilityState, disabled }}\n              testID={testID}\n              style={styles.touchable}\n            >\n              <View\n                style={[\n                  styles.standard,\n                  {\n                    width: extendedWidth,\n                  },\n                ]}\n              />\n            </TouchableRipple>\n          </Animated.View>\n        </Animated.View>\n      </Animated.View>\n\n      <Animated.View\n        style={[styles.iconWrapper, combinedStyles.iconWrapper]}\n        pointerEvents=\"none\"\n      >\n        <Icon source={icon} size={24} color={foregroundColor} />\n      </Animated.View>\n\n      <View pointerEvents=\"none\">\n        <AnimatedText\n          numberOfLines={1}\n          onTextLayout={isIOS ? onTextLayout : undefined}\n          ellipsizeMode={'tail'}\n          style={[\n            {\n              [isAnimatedFromRight || isRTL ? 'right' : 'left']: isIconStatic\n                ? isIOS\n                  ? SIZE - 10\n                  : SIZE - 12\n                : BORDER_RADIUS,\n            },\n            {\n              minWidth: textWidth,\n              top: -BORDER_RADIUS - textHeight / 2,\n              opacity: animFAB.interpolate({\n                inputRange: propForDirection([distance, 0.7 * distance, 0]),\n                outputRange: propForDirection([1, 0, 0]),\n              }),\n              transform: [\n                {\n                  translateX: animFAB.interpolate({\n                    inputRange: propForDirection([distance, 0]),\n                    outputRange: propForDirection([0, SIZE]),\n                  }),\n                },\n              ],\n            },\n            styles.label,\n            uppercase && styles.uppercaseLabel,\n            {\n              color: foregroundColor,\n              ...theme.fonts.medium,\n            },\n          ]}\n        >\n          {label}\n        </AnimatedText>\n      </View>\n\n      {!isIOS && (\n        // Method `onTextLayout` on Android returns sizes of text visible on the screen,\n        // however during render the text in `FAB` isn't fully visible. In order to get\n        // proper text measurements there is a need to additionaly render that text, but\n        // wrapped in absolutely positioned `ScrollView` which height is 0.\n        <ScrollView style={styles.textPlaceholderContainer}>\n          <Text onTextLayout={onTextLayout}>{label}</Text>\n        </ScrollView>\n      )}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  standard: {\n    height: SIZE,\n    borderRadius: BORDER_RADIUS,\n  },\n  disabled: {\n    elevation: 0,\n  },\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    borderRadius: BORDER_RADIUS,\n  },\n  innerWrapper: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n    borderRadius: BORDER_RADIUS,\n  },\n  shadowWrapper: {\n    elevation: 0,\n  },\n  shadow: {\n    elevation: 6,\n    borderRadius: BORDER_RADIUS,\n  },\n  touchable: {\n    borderRadius: BORDER_RADIUS,\n  },\n  iconWrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    height: SIZE,\n    width: SIZE,\n  },\n  label: {\n    position: 'absolute',\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  textPlaceholderContainer: {\n    height: 0,\n    position: 'absolute',\n  },\n});\n\nexport default withTheme(AnimatedFAB);\n"]}