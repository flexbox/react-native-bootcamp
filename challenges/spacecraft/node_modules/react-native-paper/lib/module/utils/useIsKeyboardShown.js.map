{"version":3,"sources":["useIsKeyboardShown.tsx"],"names":["React","Keyboard","Platform","useIsKeyboardShown","onShow","onHide","useEffect","willShowSubscription","willHideSubscription","didShowSubscription","didHideSubscription","OS","addListener","remove","removeListener"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAA4CC,QAA5C,QAA4D,cAA5D;AAMA,eAAe,SAASC,kBAAT,OAAuD;AAAA,MAA3B;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAA2B;AACpEL,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AACpB,QAAIC,oBAAJ;AACA,QAAIC,oBAAJ;AACA,QAAIC,mBAAJ;AACA,QAAIC,mBAAJ;;AAEA,QAAIR,QAAQ,CAACS,EAAT,KAAgB,KAApB,EAA2B;AACzBJ,MAAAA,oBAAoB,GAAGN,QAAQ,CAACW,WAAT,CAAqB,kBAArB,EAAyCR,MAAzC,CAAvB;AACAI,MAAAA,oBAAoB,GAAGP,QAAQ,CAACW,WAAT,CAAqB,kBAArB,EAAyCP,MAAzC,CAAvB;AACD,KAHD,MAGO;AACLI,MAAAA,mBAAmB,GAAGR,QAAQ,CAACW,WAAT,CAAqB,iBAArB,EAAwCR,MAAxC,CAAtB;AACAM,MAAAA,mBAAmB,GAAGT,QAAQ,CAACW,WAAT,CAAqB,iBAArB,EAAwCP,MAAxC,CAAtB;AACD;;AAED,WAAO,MAAM;AACX,UAAIH,QAAQ,CAACS,EAAT,KAAgB,KAApB,EAA2B;AAAA;;AACzB,qCAAIJ,oBAAJ,kDAAI,sBAAsBM,MAA1B,EAAkC;AAChCN,UAAAA,oBAAoB,CAACM,MAArB;AACD,SAFD,MAEO;AACLZ,UAAAA,QAAQ,CAACa,cAAT,CAAwB,kBAAxB,EAA4CV,MAA5C;AACD;;AAED,qCAAII,oBAAJ,kDAAI,sBAAsBK,MAA1B,EAAkC;AAChCL,UAAAA,oBAAoB,CAACK,MAArB;AACD,SAFD,MAEO;AACLZ,UAAAA,QAAQ,CAACa,cAAT,CAAwB,kBAAxB,EAA4CT,MAA5C;AACD;AACF,OAZD,MAYO;AAAA;;AACL,oCAAII,mBAAJ,iDAAI,qBAAqBI,MAAzB,EAAiC;AAC/BJ,UAAAA,mBAAmB,CAACI,MAApB;AACD,SAFD,MAEO;AACLZ,UAAAA,QAAQ,CAACa,cAAT,CAAwB,iBAAxB,EAA2CV,MAA3C;AACD;;AAED,oCAAIM,mBAAJ,iDAAI,qBAAqBG,MAAzB,EAAiC;AAC/BH,UAAAA,mBAAmB,CAACG,MAApB;AACD,SAFD,MAEO;AACLZ,UAAAA,QAAQ,CAACa,cAAT,CAAwB,iBAAxB,EAA2CT,MAA3C;AACD;AACF;AACF,KA1BD;AA2BD,GAzCD,EAyCG,CAACA,MAAD,EAASD,MAAT,CAzCH;AA0CD","sourcesContent":["import * as React from 'react';\nimport { Keyboard, NativeEventSubscription, Platform } from 'react-native';\n\ntype Props = {\n  onShow: () => void;\n  onHide: () => void;\n};\nexport default function useIsKeyboardShown({ onShow, onHide }: Props) {\n  React.useEffect(() => {\n    let willShowSubscription: NativeEventSubscription | undefined;\n    let willHideSubscription: NativeEventSubscription | undefined;\n    let didShowSubscription: NativeEventSubscription | undefined;\n    let didHideSubscription: NativeEventSubscription | undefined;\n\n    if (Platform.OS === 'ios') {\n      willShowSubscription = Keyboard.addListener('keyboardWillShow', onShow);\n      willHideSubscription = Keyboard.addListener('keyboardWillHide', onHide);\n    } else {\n      didShowSubscription = Keyboard.addListener('keyboardDidShow', onShow);\n      didHideSubscription = Keyboard.addListener('keyboardDidHide', onHide);\n    }\n\n    return () => {\n      if (Platform.OS === 'ios') {\n        if (willShowSubscription?.remove) {\n          willShowSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardWillShow', onShow);\n        }\n\n        if (willHideSubscription?.remove) {\n          willHideSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardWillHide', onHide);\n        }\n      } else {\n        if (didShowSubscription?.remove) {\n          didShowSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidShow', onShow);\n        }\n\n        if (didHideSubscription?.remove) {\n          didHideSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidHide', onHide);\n        }\n      }\n    };\n  }, [onHide, onShow]);\n}\n"]}