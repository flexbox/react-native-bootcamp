{"version":3,"sources":["CheckboxItem.tsx"],"names":["CheckboxItem","style","status","label","onPress","labelStyle","theme","testID","mode","position","disabled","props","checkboxProps","isLeading","checkbox","checked","styles","container","color","colors","text","textAlign","displayName","CheckboxItemWithTheme","StyleSheet","create","flexDirection","alignItems","justifyContent","paddingVertical","paddingHorizontal","fontSize","flexShrink","flexGrow"],"mappings":";;;;;;;AAAA;;AAEA;;AAQA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,YAAY,GAAG,QAYR;AAAA,MAZS;AACpBC,IAAAA,KADoB;AAEpBC,IAAAA,MAFoB;AAGpBC,IAAAA,KAHoB;AAIpBC,IAAAA,OAJoB;AAKpBC,IAAAA,UALoB;AAMpBC,IAAAA,KANoB;AAOpBC,IAAAA,MAPoB;AAQpBC,IAAAA,IARoB;AASpBC,IAAAA,QAAQ,GAAG,UATS;AAUpBC,IAAAA,QAVoB;AAWpB,OAAGC;AAXiB,GAYT;AACX,QAAMC,aAAa,GAAG,EAAE,GAAGD,KAAL;AAAYT,IAAAA,MAAZ;AAAoBI,IAAAA,KAApB;AAA2BI,IAAAA;AAA3B,GAAtB;AACA,QAAMG,SAAS,GAAGJ,QAAQ,KAAK,SAA/B;AACA,MAAIK,QAAJ;;AAEA,MAAIN,IAAI,KAAK,SAAb,EAAwB;AACtBM,IAAAA,QAAQ,gBAAG,oBAAC,wBAAD,EAAqBF,aAArB,CAAX;AACD,GAFD,MAEO,IAAIJ,IAAI,KAAK,KAAb,EAAoB;AACzBM,IAAAA,QAAQ,gBAAG,oBAAC,oBAAD,EAAiBF,aAAjB,CAAX;AACD,GAFM,MAEA;AACLE,IAAAA,QAAQ,gBAAG,oBAAC,iBAAD,EAAcF,aAAd,CAAX;AACD;;AAED,sBACE,oBAAC,wBAAD;AACE,IAAA,kBAAkB,EAAET,KADtB;AAEE,IAAA,iBAAiB,EAAC,UAFpB;AAGE,IAAA,kBAAkB,EAAE;AAClBY,MAAAA,OAAO,EAAEb,MAAM,KAAK,SADF;AAElBQ,MAAAA;AAFkB,KAHtB;AAOE,IAAA,OAAO,EAAEN,OAPX;AAQE,IAAA,MAAM,EAAEG,MARV;AASE,IAAA,QAAQ,EAAEG;AATZ,kBAWE,oBAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CAACM,MAAM,CAACC,SAAR,EAAmBhB,KAAnB,CADT;AAEE,IAAA,aAAa,EAAC,MAFhB;AAGE,IAAA,yBAAyB,EAAC;AAH5B,KAKGY,SAAS,IAAIC,QALhB,eAME,oBAAC,aAAD;AACE,IAAA,KAAK,EAAE,CACLE,MAAM,CAACb,KADF,EAEL;AACEe,MAAAA,KAAK,EAAER,QAAQ,GAAGJ,KAAK,CAACa,MAAN,CAAaT,QAAhB,GAA2BJ,KAAK,CAACa,MAAN,CAAaC,IADzD;AAEEC,MAAAA,SAAS,EAAER,SAAS,GAAG,OAAH,GAAa;AAFnC,KAFK,EAMLR,UANK;AADT,KAUGF,KAVH,CANF,EAkBG,CAACU,SAAD,IAAcC,QAlBjB,CAXF,CADF;AAkCD,CA3DD;;AA6DAd,YAAY,CAACsB,WAAb,GAA2B,eAA3B;;eAEe,wBAAUtB,YAAV,C,EAEf;;;;AACA,MAAMuB,qBAAqB,GAAG,wBAAUvB,YAAV,CAA9B,C,CACA;;;;AAGA,MAAMgB,MAAM,GAAGQ,wBAAWC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE,eAHP;AAITC,IAAAA,eAAe,EAAE,CAJR;AAKTC,IAAAA,iBAAiB,EAAE;AALV,GADoB;AAQ/B3B,EAAAA,KAAK,EAAE;AACL4B,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE,CAFP;AAGLC,IAAAA,QAAQ,EAAE;AAHL;AARwB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\n\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport Checkbox from './Checkbox';\nimport CheckboxAndroid from './CheckboxAndroid';\nimport CheckboxIOS from './CheckboxIOS';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { withTheme } from '../../core/theming';\n\ntype Props = {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Label to be displayed on the item.\n   */\n  label: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * Additional styles for container View.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n  /**\n   * Checkbox control position.\n   */\n  position?: 'leading' | 'trailing';\n  /**\n   * Whether `<Checkbox.Android />` or `<Checkbox.IOS />` should be used.\n   * Left undefined `<Checkbox />` will be used.\n   */\n  mode?: 'android' | 'ios';\n};\n\n/**\n * Checkbox.Item allows you to press the whole row (item) instead of only the Checkbox.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Checkbox } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Checkbox.Item label=\"Item\" status=\"checked\" />\n *   </View>\n * );\n *\n * export default MyComponent;\n *```\n */\n\nconst CheckboxItem = ({\n  style,\n  status,\n  label,\n  onPress,\n  labelStyle,\n  theme,\n  testID,\n  mode,\n  position = 'trailing',\n  disabled,\n  ...props\n}: Props) => {\n  const checkboxProps = { ...props, status, theme, disabled };\n  const isLeading = position === 'leading';\n  let checkbox;\n\n  if (mode === 'android') {\n    checkbox = <CheckboxAndroid {...checkboxProps} />;\n  } else if (mode === 'ios') {\n    checkbox = <CheckboxIOS {...checkboxProps} />;\n  } else {\n    checkbox = <Checkbox {...checkboxProps} />;\n  }\n\n  return (\n    <TouchableRipple\n      accessibilityLabel={label}\n      accessibilityRole=\"checkbox\"\n      accessibilityState={{\n        checked: status === 'checked',\n        disabled,\n      }}\n      onPress={onPress}\n      testID={testID}\n      disabled={disabled}\n    >\n      <View\n        style={[styles.container, style]}\n        pointerEvents=\"none\"\n        importantForAccessibility=\"no-hide-descendants\"\n      >\n        {isLeading && checkbox}\n        <Text\n          style={[\n            styles.label,\n            {\n              color: disabled ? theme.colors.disabled : theme.colors.text,\n              textAlign: isLeading ? 'right' : 'left',\n            },\n            labelStyle,\n          ]}\n        >\n          {label}\n        </Text>\n        {!isLeading && checkbox}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nCheckboxItem.displayName = 'Checkbox.Item';\n\nexport default withTheme(CheckboxItem);\n\n// @component-docs ignore-next-line\nconst CheckboxItemWithTheme = withTheme(CheckboxItem);\n// @component-docs ignore-next-line\nexport { CheckboxItemWithTheme as CheckboxItem };\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  label: {\n    fontSize: 16,\n    flexShrink: 1,\n    flexGrow: 1,\n  },\n});\n"]}