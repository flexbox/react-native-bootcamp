{"version":3,"sources":["SafeAreaContext.tsx"],"names":["React","Dimensions","StyleSheet","NativeSafeAreaProvider","SafeAreaInsetsContext","createContext","displayName","SafeAreaFrameContext","SafeAreaProvider","children","initialMetrics","initialSafeAreaInsets","style","parentInsets","useParentSafeAreaInsets","parentFrame","useParentSafeAreaFrame","insets","setInsets","useState","frame","setFrame","x","y","width","get","height","onInsetsChange","useCallback","event","nativeEvent","nextFrame","nextInsets","bottom","left","right","top","styles","fill","create","flex","useContext","useSafeAreaInsets","safeArea","Error","useSafeAreaFrame","withSafeAreaInsets","WrappedComponent","forwardRef","props","ref","useSafeArea","SafeAreaConsumer","Consumer","SafeAreaContext"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Dimensions, StyleProp, StyleSheet, ViewStyle } from 'react-native';\nimport NativeSafeAreaProvider from './NativeSafeAreaProvider';\nimport { EdgeInsets, InsetChangedEvent, Metrics, Rect } from './SafeArea.types';\n\nexport const SafeAreaInsetsContext = React.createContext<EdgeInsets | null>(\n  null,\n);\nSafeAreaInsetsContext.displayName = 'SafeAreaInsetsContext';\n\nexport const SafeAreaFrameContext = React.createContext<Rect | null>(null);\nSafeAreaFrameContext.displayName = 'SafeAreaFrameContext';\n\nexport interface SafeAreaViewProps {\n  children?: React.ReactNode;\n  initialMetrics?: Metrics | null;\n  /**\n   * @deprecated\n   */\n  initialSafeAreaInsets?: EdgeInsets | null;\n  style?: StyleProp<ViewStyle>;\n}\n\nexport function SafeAreaProvider({\n  children,\n  initialMetrics,\n  initialSafeAreaInsets,\n  style,\n}: SafeAreaViewProps) {\n  const parentInsets = useParentSafeAreaInsets();\n  const parentFrame = useParentSafeAreaFrame();\n  const [insets, setInsets] = React.useState<EdgeInsets | null>(\n    initialMetrics?.insets ?? initialSafeAreaInsets ?? parentInsets ?? null,\n  );\n  const [frame, setFrame] = React.useState<Rect>(\n    initialMetrics?.frame ??\n      parentFrame ?? {\n        // Backwards compat so we render anyway if we don't have frame.\n        x: 0,\n        y: 0,\n        width: Dimensions.get('window').width,\n        height: Dimensions.get('window').height,\n      },\n  );\n  const onInsetsChange = React.useCallback(\n    (event: InsetChangedEvent) => {\n      const {\n        nativeEvent: { frame: nextFrame, insets: nextInsets },\n      } = event;\n\n      if (\n        // Backwards compat with old native code that won't send frame.\n        nextFrame &&\n        (nextFrame.height !== frame.height ||\n          nextFrame.width !== frame.width ||\n          nextFrame.x !== frame.x ||\n          nextFrame.y !== frame.y)\n      ) {\n        setFrame(nextFrame);\n      }\n\n      if (\n        !insets ||\n        nextInsets.bottom !== insets.bottom ||\n        nextInsets.left !== insets.left ||\n        nextInsets.right !== insets.right ||\n        nextInsets.top !== insets.top\n      ) {\n        setInsets(nextInsets);\n      }\n    },\n    [frame, insets],\n  );\n\n  return (\n    <NativeSafeAreaProvider\n      style={[styles.fill, style]}\n      onInsetsChange={onInsetsChange}\n    >\n      {insets != null ? (\n        <SafeAreaFrameContext.Provider value={frame}>\n          <SafeAreaInsetsContext.Provider value={insets}>\n            {children}\n          </SafeAreaInsetsContext.Provider>\n        </SafeAreaFrameContext.Provider>\n      ) : null}\n    </NativeSafeAreaProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fill: { flex: 1 },\n});\n\nfunction useParentSafeAreaInsets(): EdgeInsets | null {\n  return React.useContext(SafeAreaInsetsContext);\n}\n\nfunction useParentSafeAreaFrame(): Rect | null {\n  return React.useContext(SafeAreaFrameContext);\n}\n\nexport function useSafeAreaInsets(): EdgeInsets {\n  const safeArea = React.useContext(SafeAreaInsetsContext);\n  if (safeArea == null) {\n    throw new Error(\n      'No safe area insets value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.',\n    );\n  }\n  return safeArea;\n}\n\nexport function useSafeAreaFrame(): Rect {\n  const frame = React.useContext(SafeAreaFrameContext);\n  if (frame == null) {\n    throw new Error(\n      'No safe area frame value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.',\n    );\n  }\n  return frame;\n}\n\nexport function withSafeAreaInsets<T>(\n  WrappedComponent: React.ComponentType<T>,\n) {\n  return React.forwardRef((props: T, ref: React.Ref<T>) => (\n    <SafeAreaConsumer>\n      {(insets) => <WrappedComponent {...props} insets={insets} ref={ref} />}\n    </SafeAreaConsumer>\n  ));\n}\n\n/**\n * @deprecated\n */\nexport function useSafeArea(): EdgeInsets {\n  return useSafeAreaInsets();\n}\n\n/**\n * @deprecated\n */\nexport const SafeAreaConsumer = SafeAreaInsetsContext.Consumer;\n\n/**\n * @deprecated\n */\nexport const SafeAreaContext = SafeAreaInsetsContext;\n"]}