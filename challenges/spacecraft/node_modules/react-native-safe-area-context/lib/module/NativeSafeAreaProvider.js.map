{"version":3,"sources":["NativeSafeAreaProvider.tsx"],"names":["React","View","CSSTransitions","WebkitTransition","Transition","MozTransition","MSTransition","OTransition","NativeSafeAreaView","children","style","onInsetsChange","useEffect","document","element","createContextElement","body","appendChild","onEnd","paddingTop","paddingBottom","paddingLeft","paddingRight","window","getComputedStyle","insets","top","parseInt","bottom","left","right","frame","x","y","width","documentElement","offsetWidth","height","offsetHeight","nativeEvent","addEventListener","getSupportedTransitionEvent","removeChild","removeEventListener","_supportedTransitionEvent","createElement","key","undefined","_supportedEnv","getSupportedEnv","CSS","supports","getInset","side","position","zIndex","overflow","visibility","transitionDuration","transitionProperty","transitionDelay"],"mappings":"AAAA;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAqB,cAArB;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,cAAsC,GAAG;AAC7CC,EAAAA,gBAAgB,EAAE,qBAD2B;AAE7CC,EAAAA,UAAU,EAAE,eAFiC;AAG7CC,EAAAA,aAAa,EAAE,eAH8B;AAI7CC,EAAAA,YAAY,EAAE,iBAJ+B;AAK7CC,EAAAA,WAAW,EAAE;AALgC,CAA/C;AAQA,eAAe,SAASC,kBAAT,CAA4B;AACzCC,EAAAA,QADyC;AAEzCC,EAAAA,KAFyC;AAGzCC,EAAAA;AAHyC,CAA5B,EAIiB;AAC9BX,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACpB;AACA,QAAI,OAAOC,QAAP,KAAoB,WAAxB,EAAqC;AACnC;AACD;;AAED,UAAMC,OAAO,GAAGC,oBAAoB,EAApC;AACAF,IAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BH,OAA1B;;AACA,UAAMI,KAAK,GAAG,MAAM;AAClB,YAAM;AAAEC,QAAAA,UAAF;AAAcC,QAAAA,aAAd;AAA6BC,QAAAA,WAA7B;AAA0CC,QAAAA;AAA1C,UACJC,MAAM,CAACC,gBAAP,CAAwBV,OAAxB,CADF;AAGA,YAAMW,MAAM,GAAG;AACbC,QAAAA,GAAG,EAAEP,UAAU,GAAGQ,QAAQ,CAACR,UAAD,EAAa,EAAb,CAAX,GAA8B,CADhC;AAEbS,QAAAA,MAAM,EAAER,aAAa,GAAGO,QAAQ,CAACP,aAAD,EAAgB,EAAhB,CAAX,GAAiC,CAFzC;AAGbS,QAAAA,IAAI,EAAER,WAAW,GAAGM,QAAQ,CAACN,WAAD,EAAc,EAAd,CAAX,GAA+B,CAHnC;AAIbS,QAAAA,KAAK,EAAER,YAAY,GAAGK,QAAQ,CAACL,YAAD,EAAe,EAAf,CAAX,GAAgC;AAJtC,OAAf;AAMA,YAAMS,KAAK,GAAG;AACZC,QAAAA,CAAC,EAAE,CADS;AAEZC,QAAAA,CAAC,EAAE,CAFS;AAGZC,QAAAA,KAAK,EAAErB,QAAQ,CAACsB,eAAT,CAAyBC,WAHpB;AAIZC,QAAAA,MAAM,EAAExB,QAAQ,CAACsB,eAAT,CAAyBG;AAJrB,OAAd,CAVkB,CAgBlB;;AACA3B,MAAAA,cAAc,CAAC;AAAE4B,QAAAA,WAAW,EAAE;AAAEd,UAAAA,MAAF;AAAUM,UAAAA;AAAV;AAAf,OAAD,CAAd;AACD,KAlBD;;AAmBAjB,IAAAA,OAAO,CAAC0B,gBAAR,CAAyBC,2BAA2B,EAApD,EAAwDvB,KAAxD;AACAA,IAAAA,KAAK;AACL,WAAO,MAAM;AACXL,MAAAA,QAAQ,CAACG,IAAT,CAAc0B,WAAd,CAA0B5B,OAA1B;AACAA,MAAAA,OAAO,CAAC6B,mBAAR,CAA4BF,2BAA2B,EAAvD,EAA2DvB,KAA3D;AACD,KAHD;AAID,GAjCD,EAiCG,CAACP,cAAD,CAjCH;AAmCA,sBAAO,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED;AAAb,KAAqBD,QAArB,CAAP;AACD;AAED,IAAImC,yBAAwC,GAAG,IAA/C;;AACA,SAASH,2BAAT,GAA+C;AAC7C,MAAIG,yBAAyB,KAAK,IAAlC,EAAwC;AACtC,WAAOA,yBAAP;AACD;;AACD,QAAM9B,OAAO,GAAGD,QAAQ,CAACgC,aAAT,CAAuB,aAAvB,CAAhB;AAEAD,EAAAA,yBAAyB,GAAG1C,cAAc,CAACE,UAA3C;;AACA,OAAK,MAAM0C,GAAX,IAAkB5C,cAAlB,EAAkC;AAChC,QAAIY,OAAO,CAACJ,KAAR,CAAcoC,GAAd,MAAoDC,SAAxD,EAAmE;AACjEH,MAAAA,yBAAyB,GAAG1C,cAAc,CAAC4C,GAAD,CAA1C;AACA;AACD;AACF;;AACD,SAAOF,yBAAP;AACD;;AAID,IAAII,aAA4B,GAAG,IAAnC;;AACA,SAASC,eAAT,GAAmC;AACjC,MAAID,aAAa,KAAK,IAAtB,EAA4B;AAC1B,WAAOA,aAAP;AACD;;AACD,QAAM;AAAEE,IAAAA;AAAF,MAAU3B,MAAhB;;AACA,MACE2B,GAAG,IACHA,GAAG,CAACC,QADJ,IAEAD,GAAG,CAACC,QAAJ,CAAa,oCAAb,CAHF,EAIE;AACAH,IAAAA,aAAa,GAAG,UAAhB;AACD,GAND,MAMO;AACLA,IAAAA,aAAa,GAAG,KAAhB;AACD;;AACD,SAAOA,aAAP;AACD;;AAED,SAASI,QAAT,CAAkBC,IAAlB,EAAwC;AACtC,SAAQ,GAAEJ,eAAe,EAAG,oBAAmBI,IAAK,GAApD;AACD;;AAED,SAAStC,oBAAT,GAA6C;AAC3C,QAAMD,OAAO,GAAGD,QAAQ,CAACgC,aAAT,CAAuB,KAAvB,CAAhB;AACA,QAAM;AAAEnC,IAAAA;AAAF,MAAYI,OAAlB;AACAJ,EAAAA,KAAK,CAAC4C,QAAN,GAAiB,OAAjB;AACA5C,EAAAA,KAAK,CAACmB,IAAN,GAAa,GAAb;AACAnB,EAAAA,KAAK,CAACgB,GAAN,GAAY,GAAZ;AACAhB,EAAAA,KAAK,CAACwB,KAAN,GAAc,GAAd;AACAxB,EAAAA,KAAK,CAAC2B,MAAN,GAAe,GAAf;AACA3B,EAAAA,KAAK,CAAC6C,MAAN,GAAe,IAAf;AACA7C,EAAAA,KAAK,CAAC8C,QAAN,GAAiB,QAAjB;AACA9C,EAAAA,KAAK,CAAC+C,UAAN,GAAmB,QAAnB,CAV2C,CAW3C;;AACA/C,EAAAA,KAAK,CAACgD,kBAAN,GAA2B,OAA3B;AACAhD,EAAAA,KAAK,CAACiD,kBAAN,GAA2B,SAA3B;AACAjD,EAAAA,KAAK,CAACkD,eAAN,GAAwB,IAAxB;AACAlD,EAAAA,KAAK,CAACS,UAAN,GAAmBiC,QAAQ,CAAC,KAAD,CAA3B;AACA1C,EAAAA,KAAK,CAACU,aAAN,GAAsBgC,QAAQ,CAAC,QAAD,CAA9B;AACA1C,EAAAA,KAAK,CAACW,WAAN,GAAoB+B,QAAQ,CAAC,MAAD,CAA5B;AACA1C,EAAAA,KAAK,CAACY,YAAN,GAAqB8B,QAAQ,CAAC,OAAD,CAA7B;AACA,SAAOtC,OAAP;AACD","sourcesContent":["/* eslint-env browser */\n\nimport * as React from 'react';\nimport { View } from 'react-native';\nimport { NativeSafeAreaProviderProps } from './SafeArea.types';\n\n/**\n * TODO:\n * Currently insets and frame are based on the window and are not\n * relative to the provider view. This is inconsistent with iOS and Android.\n * However in most cases if the provider view covers the screen this is not\n * an issue.\n */\n\nconst CSSTransitions: Record<string, string> = {\n  WebkitTransition: 'webkitTransitionEnd',\n  Transition: 'transitionEnd',\n  MozTransition: 'transitionend',\n  MSTransition: 'msTransitionEnd',\n  OTransition: 'oTransitionEnd',\n};\n\nexport default function NativeSafeAreaView({\n  children,\n  style,\n  onInsetsChange,\n}: NativeSafeAreaProviderProps) {\n  React.useEffect(() => {\n    // Skip for SSR.\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    const element = createContextElement();\n    document.body.appendChild(element);\n    const onEnd = () => {\n      const { paddingTop, paddingBottom, paddingLeft, paddingRight } =\n        window.getComputedStyle(element);\n\n      const insets = {\n        top: paddingTop ? parseInt(paddingTop, 10) : 0,\n        bottom: paddingBottom ? parseInt(paddingBottom, 10) : 0,\n        left: paddingLeft ? parseInt(paddingLeft, 10) : 0,\n        right: paddingRight ? parseInt(paddingRight, 10) : 0,\n      };\n      const frame = {\n        x: 0,\n        y: 0,\n        width: document.documentElement.offsetWidth,\n        height: document.documentElement.offsetHeight,\n      };\n      // @ts-ignore: missing properties\n      onInsetsChange({ nativeEvent: { insets, frame } });\n    };\n    element.addEventListener(getSupportedTransitionEvent(), onEnd);\n    onEnd();\n    return () => {\n      document.body.removeChild(element);\n      element.removeEventListener(getSupportedTransitionEvent(), onEnd);\n    };\n  }, [onInsetsChange]);\n\n  return <View style={style}>{children}</View>;\n}\n\nlet _supportedTransitionEvent: string | null = null;\nfunction getSupportedTransitionEvent(): string {\n  if (_supportedTransitionEvent !== null) {\n    return _supportedTransitionEvent;\n  }\n  const element = document.createElement('invalidtype');\n\n  _supportedTransitionEvent = CSSTransitions.Transition;\n  for (const key in CSSTransitions) {\n    if (element.style[key as keyof CSSStyleDeclaration] !== undefined) {\n      _supportedTransitionEvent = CSSTransitions[key];\n      break;\n    }\n  }\n  return _supportedTransitionEvent;\n}\n\ntype CssEnv = 'constant' | 'env';\n\nlet _supportedEnv: CssEnv | null = null;\nfunction getSupportedEnv(): CssEnv {\n  if (_supportedEnv !== null) {\n    return _supportedEnv;\n  }\n  const { CSS } = window;\n  if (\n    CSS &&\n    CSS.supports &&\n    CSS.supports('top: constant(safe-area-inset-top)')\n  ) {\n    _supportedEnv = 'constant';\n  } else {\n    _supportedEnv = 'env';\n  }\n  return _supportedEnv;\n}\n\nfunction getInset(side: string): string {\n  return `${getSupportedEnv()}(safe-area-inset-${side})`;\n}\n\nfunction createContextElement(): HTMLElement {\n  const element = document.createElement('div');\n  const { style } = element;\n  style.position = 'fixed';\n  style.left = '0';\n  style.top = '0';\n  style.width = '0';\n  style.height = '0';\n  style.zIndex = '-1';\n  style.overflow = 'hidden';\n  style.visibility = 'hidden';\n  // Bacon: Anything faster than this and the callback will be invoked too early with the wrong insets\n  style.transitionDuration = '0.05s';\n  style.transitionProperty = 'padding';\n  style.transitionDelay = '0s';\n  style.paddingTop = getInset('top');\n  style.paddingBottom = getInset('bottom');\n  style.paddingLeft = getInset('left');\n  style.paddingRight = getInset('right');\n  return element;\n}\n"]}