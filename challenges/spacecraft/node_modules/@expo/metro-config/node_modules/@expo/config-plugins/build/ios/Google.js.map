{"version":3,"sources":["../../src/ios/Google.ts"],"names":["withGoogle","setGoogleConfig","withGoogleServicesFile","config","modResults","setGoogleServicesFile","projectRoot","modRequest","project","getGoogleSignInReservedClientId","ios","googleSignIn","reservedClientId","getGoogleServicesFile","googleServicesFile","setGoogleSignInReservedClientId","infoPlist","googleServicesFileRelativePath","googleServiceFilePath","path","resolve","fs","copyFileSync","join","projectName","plistFilePath","hasFile","filepath","groupName","isBuildFile","verbose"],"mappings":";;;;;;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAIA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEO,MAAMA,UAAU,GAAG,yCAAsBC,eAAtB,EAAuC,YAAvC,CAAnB;;;AAEA,MAAMC,sBAAoC,GAAGC,MAAM,IAAI;AAC5D,SAAO,oCAAiBA,MAAjB,EAAyBA,MAAM,IAAI;AACxCA,IAAAA,MAAM,CAACC,UAAP,GAAoBC,qBAAqB,CAACF,MAAD,EAAS;AAChDG,MAAAA,WAAW,EAAEH,MAAM,CAACI,UAAP,CAAkBD,WADiB;AAEhDE,MAAAA,OAAO,EAAEL,MAAM,CAACC;AAFgC,KAAT,CAAzC;AAIA,WAAOD,MAAP;AACD,GANM,CAAP;AAOD,CARM;;;;AAUA,SAASM,+BAAT,CAAyCN,MAAzC,EAA0E;AAAA;;AAC/E,iDAAOA,MAAM,CAACO,GAAd,sEAAO,YAAYP,MAAnB,iFAAO,mBAAoBQ,YAA3B,2DAAO,uBAAkCC,gBAAzC,yEAA6D,IAA7D;AACD;;AAEM,SAASC,qBAAT,CAA+BV,MAA/B,EAAgE;AAAA;;AACrE,kDAAOA,MAAM,CAACO,GAAd,iDAAO,aAAYI,kBAAnB,yEAAyC,IAAzC;AACD;;AAEM,SAASC,+BAAT,CACLZ,MADK,EAELa,SAFK,EAGM;AACX,QAAMJ,gBAAgB,GAAGH,+BAA+B,CAACN,MAAD,CAAxD;;AAEA,MAAIS,gBAAgB,KAAK,IAAzB,EAA+B;AAC7B,WAAOI,SAAP;AACD;;AAED,SAAO,4BAAaJ,gBAAb,EAA+BI,SAA/B,CAAP;AACD;;AAEM,SAASf,eAAT,CAAyBE,MAAzB,EAA0Da,SAA1D,EAA2F;AAChGA,EAAAA,SAAS,GAAGD,+BAA+B,CAACZ,MAAD,EAASa,SAAT,CAA3C;AACA,SAAOA,SAAP;AACD;;AAEM,SAASX,qBAAT,CACLF,MADK,EAEL;AAAEG,EAAAA,WAAF;AAAeE,EAAAA;AAAf,CAFK,EAGS;AACd,QAAMS,8BAA8B,GAAGJ,qBAAqB,CAACV,MAAD,CAA5D;;AACA,MAAIc,8BAA8B,KAAK,IAAvC,EAA6C;AAC3C,WAAOT,OAAP;AACD;;AAED,QAAMU,qBAAqB,GAAGC,gBAAKC,OAAL,CAAad,WAAb,EAA0BW,8BAA1B,CAA9B;;AACAI,qBAAGC,YAAH,CACEJ,qBADF,EAEEC,gBAAKI,IAAL,CAAU,4BAAcjB,WAAd,CAAV,EAAsC,0BAAtC,CAFF;;AAKA,QAAMkB,WAAW,GAAG,iCAAelB,WAAf,CAApB;AACA,QAAMmB,aAAa,GAAI,GAAED,WAAY,2BAArC;;AACA,MAAI,CAAChB,OAAO,CAACkB,OAAR,CAAgBD,aAAhB,CAAL,EAAqC;AACnCjB,IAAAA,OAAO,GAAG,yCAAuB;AAC/BmB,MAAAA,QAAQ,EAAEF,aADqB;AAE/BG,MAAAA,SAAS,EAAEJ,WAFoB;AAG/BhB,MAAAA,OAH+B;AAI/BqB,MAAAA,WAAW,EAAE,IAJkB;AAK/BC,MAAAA,OAAO,EAAE;AALsB,KAAvB,CAAV;AAOD;;AACD,SAAOtB,OAAP;AACD","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport { XcodeProject } from 'xcode';\n\nimport { ConfigPlugin } from '../Plugin.types';\nimport { createInfoPlistPlugin, withXcodeProject } from '../plugins/ios-plugins';\nimport { InfoPlist } from './IosConfig.types';\nimport { getSourceRoot } from './Paths';\nimport { appendScheme } from './Scheme';\nimport { addResourceFileToGroup, getProjectName } from './utils/Xcodeproj';\n\nexport const withGoogle = createInfoPlistPlugin(setGoogleConfig, 'withGoogle');\n\nexport const withGoogleServicesFile: ConfigPlugin = config => {\n  return withXcodeProject(config, config => {\n    config.modResults = setGoogleServicesFile(config, {\n      projectRoot: config.modRequest.projectRoot,\n      project: config.modResults,\n    });\n    return config;\n  });\n};\n\nexport function getGoogleSignInReservedClientId(config: Pick<ExpoConfig, 'ios'>) {\n  return config.ios?.config?.googleSignIn?.reservedClientId ?? null;\n}\n\nexport function getGoogleServicesFile(config: Pick<ExpoConfig, 'ios'>) {\n  return config.ios?.googleServicesFile ?? null;\n}\n\nexport function setGoogleSignInReservedClientId(\n  config: Pick<ExpoConfig, 'ios'>,\n  infoPlist: InfoPlist\n): InfoPlist {\n  const reservedClientId = getGoogleSignInReservedClientId(config);\n\n  if (reservedClientId === null) {\n    return infoPlist;\n  }\n\n  return appendScheme(reservedClientId, infoPlist);\n}\n\nexport function setGoogleConfig(config: Pick<ExpoConfig, 'ios'>, infoPlist: InfoPlist): InfoPlist {\n  infoPlist = setGoogleSignInReservedClientId(config, infoPlist);\n  return infoPlist;\n}\n\nexport function setGoogleServicesFile(\n  config: Pick<ExpoConfig, 'ios'>,\n  { projectRoot, project }: { project: XcodeProject; projectRoot: string }\n): XcodeProject {\n  const googleServicesFileRelativePath = getGoogleServicesFile(config);\n  if (googleServicesFileRelativePath === null) {\n    return project;\n  }\n\n  const googleServiceFilePath = path.resolve(projectRoot, googleServicesFileRelativePath);\n  fs.copyFileSync(\n    googleServiceFilePath,\n    path.join(getSourceRoot(projectRoot), 'GoogleService-Info.plist')\n  );\n\n  const projectName = getProjectName(projectRoot);\n  const plistFilePath = `${projectName}/GoogleService-Info.plist`;\n  if (!project.hasFile(plistFilePath)) {\n    project = addResourceFileToGroup({\n      filepath: plistFilePath,\n      groupName: projectName,\n      project,\n      isBuildFile: true,\n      verbose: true,\n    });\n  }\n  return project;\n}\n"],"file":"Google.js"}