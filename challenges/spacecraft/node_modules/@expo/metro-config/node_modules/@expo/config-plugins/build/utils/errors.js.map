{"version":3,"sources":["../../src/utils/errors.ts"],"names":["UnexpectedError","Error","constructor","message","PluginError","code","cause","name"],"mappings":";;;;;;;;;AAAO,MAAMA,eAAN,SAA8BC,KAA9B,CAAoC;AAGzCC,EAAAA,WAAW,CAACC,OAAD,EAAkB;AAC3B,UAAO,GAAEA,OAAQ,6EAAjB;;AAD2B,kCAFb,iBAEa;AAE5B;;AALwC;;;;AAgB3C;AACA;AACA;AACO,MAAMC,WAAN,SAA0BH,KAA1B,CAAgC;AAIrCC,EAAAA,WAAW,CAACC,OAAD,EAAyBE,IAAzB,EAAuDC,KAAvD,EAAsE;AAC/E,UAAMA,KAAK,GAAI,GAAEH,OAAQ,eAAcG,KAAK,CAACC,IAAK,KAAID,KAAK,CAACH,OAAQ,EAAzD,GAA6DA,OAAxE;AAD+E,SAA7CE,IAA6C,GAA7CA,IAA6C;AAAA,SAAfC,KAAe,GAAfA,KAAe;;AAAA,kCAHjE,aAGiE;;AAAA,2CAFxD,IAEwD;AAEhF;;AANoC","sourcesContent":["export class UnexpectedError extends Error {\n  readonly name = 'UnexpectedError';\n\n  constructor(message: string) {\n    super(`${message}\\nPlease report this as an issue on https://github.com/expo/expo-cli/issues`);\n  }\n}\n\nexport type PluginErrorCode =\n  | 'INVALID_PLUGIN_TYPE'\n  | 'INVALID_PLUGIN_IMPORT'\n  | 'PLUGIN_NOT_FOUND'\n  | 'CONFLICTING_PROVIDER'\n  | 'INVALID_MOD_ORDER'\n  | 'MISSING_PROVIDER';\n\n/**\n * Based on `JsonFileError` from `@expo/json-file`\n */\nexport class PluginError extends Error {\n  readonly name = 'PluginError';\n  readonly isPluginError = true;\n\n  constructor(message: string, public code: PluginErrorCode, public cause?: Error) {\n    super(cause ? `${message}\\n└─ Cause: ${cause.name}: ${cause.message}` : message);\n  }\n}\n"],"file":"errors.js"}