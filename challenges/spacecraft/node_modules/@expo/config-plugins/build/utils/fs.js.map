{"version":3,"sources":["../../src/utils/fs.ts"],"names":["copyFilePathToPathAsync","src","dest","srcFile","fs","promises","readFile","mkdir","path","dirname","recursive","writeFile","removeFile","filePath","unlinkSync","error","code"],"mappings":";;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEA;AACO,eAAeA,uBAAf,CAAuCC,GAAvC,EAAoDC,IAApD,EAAiF;AACtF,QAAMC,OAAO,GAAG,MAAMC,cAAGC,QAAH,CAAYC,QAAZ,CAAqBL,GAArB,CAAtB;AACA,QAAMG,cAAGC,QAAH,CAAYE,KAAZ,CAAkBC,gBAAKC,OAAL,CAAaP,IAAb,CAAlB,EAAsC;AAAEQ,IAAAA,SAAS,EAAE;AAAb,GAAtC,CAAN;AACA,QAAMN,cAAGC,QAAH,CAAYM,SAAZ,CAAsBT,IAAtB,EAA4BC,OAA5B,CAAN;AACD;AAED;;;AACO,SAASS,UAAT,CAAoBC,QAApB,EAA+C;AACpD,MAAI;AACFT,kBAAGU,UAAH,CAAcD,QAAd;;AACA,WAAO,IAAP;AACD,GAHD,CAGE,OAAOE,KAAP,EAAmB;AACnB;AACA,QAAIA,KAAK,CAACC,IAAN,KAAe,QAAnB,EAA6B;AAC3B,aAAO,KAAP;AACD;;AACD,UAAMD,KAAN;AACD;AACF","sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\n/** A basic function that copies a single file to another file location. */\nexport async function copyFilePathToPathAsync(src: string, dest: string): Promise<void> {\n  const srcFile = await fs.promises.readFile(src);\n  await fs.promises.mkdir(path.dirname(dest), { recursive: true });\n  await fs.promises.writeFile(dest, srcFile);\n}\n\n/** Remove a single file (not directory). Returns `true` if a file was actually deleted. */\nexport function removeFile(filePath: string): boolean {\n  try {\n    fs.unlinkSync(filePath);\n    return true;\n  } catch (error: any) {\n    // Skip if the remove did nothing.\n    if (error.code === 'ENOENT') {\n      return false;\n    }\n    throw error;\n  }\n}\n"],"file":"fs.js"}