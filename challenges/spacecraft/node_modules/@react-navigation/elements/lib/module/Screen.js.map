{"version":3,"sources":["Screen.tsx"],"names":["NavigationContext","NavigationRouteContext","React","StyleSheet","View","useSafeAreaFrame","useSafeAreaInsets","Background","getDefaultHeaderHeight","HeaderHeightContext","HeaderShownContext","Screen","props","dimensions","insets","isParentHeaderShown","useContext","parentHeaderHeight","focused","modal","header","headerShown","headerTransparent","headerStatusBarHeight","top","navigation","route","children","style","headerHeight","setHeaderHeight","useState","styles","container","content","e","height","nativeEvent","layout","absolute","create","flex","flexDirection","position","left","right"],"mappings":"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","sourcesContent":["import {\n  NavigationContext,\n  NavigationProp,\n  NavigationRouteContext,\n  ParamListBase,\n  RouteProp,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\n\nimport Background from './Background';\nimport getDefaultHeaderHeight from './Header/getDefaultHeaderHeight';\nimport HeaderHeightContext from './Header/HeaderHeightContext';\nimport HeaderShownContext from './Header/HeaderShownContext';\n\ntype Props = {\n  focused: boolean;\n  modal?: boolean;\n  navigation: NavigationProp<ParamListBase>;\n  route: RouteProp<ParamListBase>;\n  header: React.ReactNode;\n  headerShown?: boolean;\n  headerStatusBarHeight?: number;\n  headerTransparent?: boolean;\n  style?: StyleProp<ViewStyle>;\n  children: React.ReactNode;\n};\n\nexport default function Screen(props: Props) {\n  const dimensions = useSafeAreaFrame();\n  const insets = useSafeAreaInsets();\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n\n  const {\n    focused,\n    modal = false,\n    header,\n    headerShown = true,\n    headerTransparent,\n    headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n    navigation,\n    route,\n    children,\n    style,\n  } = props;\n\n  const [headerHeight, setHeaderHeight] = React.useState(() =>\n    getDefaultHeaderHeight(dimensions, modal, headerStatusBarHeight)\n  );\n\n  return (\n    <Background\n      accessibilityElementsHidden={!focused}\n      importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n      style={[styles.container, style]}\n    >\n      <View style={styles.content}>\n        <HeaderShownContext.Provider\n          value={isParentHeaderShown || headerShown !== false}\n        >\n          <HeaderHeightContext.Provider\n            value={headerShown ? headerHeight : parentHeaderHeight ?? 0}\n          >\n            {children}\n          </HeaderHeightContext.Provider>\n        </HeaderShownContext.Provider>\n      </View>\n      {headerShown ? (\n        <NavigationContext.Provider value={navigation}>\n          <NavigationRouteContext.Provider value={route}>\n            <View\n              onLayout={(e) => {\n                const { height } = e.nativeEvent.layout;\n\n                setHeaderHeight(height);\n              }}\n              style={headerTransparent ? styles.absolute : null}\n            >\n              {header}\n            </View>\n          </NavigationRouteContext.Provider>\n        </NavigationContext.Provider>\n      ) : null}\n    </Background>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  // This is necessary to avoid applying 'column-reverse' to screen content\n  content: {\n    flex: 1,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"]}