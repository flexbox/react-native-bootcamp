{"version":3,"sources":["isRecordEqual.tsx"],"names":["isRecordEqual","a","b","aKeys","Object","keys","bKeys","length","every","key"],"mappings":"AAAA;AACA;AACA;AACA,eAAe,SAASA,aAAT,CACbC,CADa,EAEbC,CAFa,EAGb;AACA,MAAID,CAAC,KAAKC,CAAV,EAAa;AACX,WAAO,IAAP;AACD;;AAED,QAAMC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYJ,CAAZ,CAAd;AACA,QAAMK,KAAK,GAAGF,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAd;;AAEA,MAAIC,KAAK,CAACI,MAAN,KAAiBD,KAAK,CAACC,MAA3B,EAAmC;AACjC,WAAO,KAAP;AACD;;AAED,SAAOJ,KAAK,CAACK,KAAN,CAAaC,GAAD,IAASR,CAAC,CAACQ,GAAD,CAAD,KAAWP,CAAC,CAACO,GAAD,CAAjC,CAAP;AACD","sourcesContent":["/**\n * Compare two records with primitive values as the content.\n */\nexport default function isRecordEqual(\n  a: Record<string, any>,\n  b: Record<string, any>\n) {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n\n  return aKeys.every((key) => a[key] === b[key]);\n}\n"]}